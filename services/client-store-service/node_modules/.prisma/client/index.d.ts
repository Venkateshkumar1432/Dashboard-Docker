
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model City
 * 
 */
export type City = $Result.DefaultSelection<Prisma.$CityPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Client
 * 
 */
export type Client = $Result.DefaultSelection<Prisma.$ClientPayload>
/**
 * Model Store
 * 
 */
export type Store = $Result.DefaultSelection<Prisma.$StorePayload>
/**
 * Model RiderEarning
 * 
 */
export type RiderEarning = $Result.DefaultSelection<Prisma.$RiderEarningPayload>
/**
 * Model WeeklyRiderSummary
 * 
 */
export type WeeklyRiderSummary = $Result.DefaultSelection<Prisma.$WeeklyRiderSummaryPayload>
/**
 * Model RateHistory
 * 
 */
export type RateHistory = $Result.DefaultSelection<Prisma.$RateHistoryPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Cities
 * const cities = await prisma.city.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Cities
   * const cities = await prisma.city.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.city`: Exposes CRUD operations for the **City** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cities
    * const cities = await prisma.city.findMany()
    * ```
    */
  get city(): Prisma.CityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.client`: Exposes CRUD operations for the **Client** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clients
    * const clients = await prisma.client.findMany()
    * ```
    */
  get client(): Prisma.ClientDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.store`: Exposes CRUD operations for the **Store** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stores
    * const stores = await prisma.store.findMany()
    * ```
    */
  get store(): Prisma.StoreDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.riderEarning`: Exposes CRUD operations for the **RiderEarning** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RiderEarnings
    * const riderEarnings = await prisma.riderEarning.findMany()
    * ```
    */
  get riderEarning(): Prisma.RiderEarningDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.weeklyRiderSummary`: Exposes CRUD operations for the **WeeklyRiderSummary** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WeeklyRiderSummaries
    * const weeklyRiderSummaries = await prisma.weeklyRiderSummary.findMany()
    * ```
    */
  get weeklyRiderSummary(): Prisma.WeeklyRiderSummaryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rateHistory`: Exposes CRUD operations for the **RateHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RateHistories
    * const rateHistories = await prisma.rateHistory.findMany()
    * ```
    */
  get rateHistory(): Prisma.RateHistoryDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.15.0
   * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    City: 'City',
    User: 'User',
    Client: 'Client',
    Store: 'Store',
    RiderEarning: 'RiderEarning',
    WeeklyRiderSummary: 'WeeklyRiderSummary',
    RateHistory: 'RateHistory'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "city" | "user" | "client" | "store" | "riderEarning" | "weeklyRiderSummary" | "rateHistory"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      City: {
        payload: Prisma.$CityPayload<ExtArgs>
        fields: Prisma.CityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          findFirst: {
            args: Prisma.CityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          findMany: {
            args: Prisma.CityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>[]
          }
          create: {
            args: Prisma.CityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          createMany: {
            args: Prisma.CityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>[]
          }
          delete: {
            args: Prisma.CityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          update: {
            args: Prisma.CityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          deleteMany: {
            args: Prisma.CityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>[]
          }
          upsert: {
            args: Prisma.CityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          aggregate: {
            args: Prisma.CityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCity>
          }
          groupBy: {
            args: Prisma.CityGroupByArgs<ExtArgs>
            result: $Utils.Optional<CityGroupByOutputType>[]
          }
          count: {
            args: Prisma.CityCountArgs<ExtArgs>
            result: $Utils.Optional<CityCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Client: {
        payload: Prisma.$ClientPayload<ExtArgs>
        fields: Prisma.ClientFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findFirst: {
            args: Prisma.ClientFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findMany: {
            args: Prisma.ClientFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          create: {
            args: Prisma.ClientCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          createMany: {
            args: Prisma.ClientCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          delete: {
            args: Prisma.ClientDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          update: {
            args: Prisma.ClientUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          deleteMany: {
            args: Prisma.ClientDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClientUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          upsert: {
            args: Prisma.ClientUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          aggregate: {
            args: Prisma.ClientAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClient>
          }
          groupBy: {
            args: Prisma.ClientGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientCountArgs<ExtArgs>
            result: $Utils.Optional<ClientCountAggregateOutputType> | number
          }
        }
      }
      Store: {
        payload: Prisma.$StorePayload<ExtArgs>
        fields: Prisma.StoreFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StoreFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StoreFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          findFirst: {
            args: Prisma.StoreFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StoreFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          findMany: {
            args: Prisma.StoreFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>[]
          }
          create: {
            args: Prisma.StoreCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          createMany: {
            args: Prisma.StoreCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StoreCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>[]
          }
          delete: {
            args: Prisma.StoreDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          update: {
            args: Prisma.StoreUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          deleteMany: {
            args: Prisma.StoreDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StoreUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StoreUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>[]
          }
          upsert: {
            args: Prisma.StoreUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          aggregate: {
            args: Prisma.StoreAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStore>
          }
          groupBy: {
            args: Prisma.StoreGroupByArgs<ExtArgs>
            result: $Utils.Optional<StoreGroupByOutputType>[]
          }
          count: {
            args: Prisma.StoreCountArgs<ExtArgs>
            result: $Utils.Optional<StoreCountAggregateOutputType> | number
          }
        }
      }
      RiderEarning: {
        payload: Prisma.$RiderEarningPayload<ExtArgs>
        fields: Prisma.RiderEarningFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RiderEarningFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderEarningPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RiderEarningFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderEarningPayload>
          }
          findFirst: {
            args: Prisma.RiderEarningFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderEarningPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RiderEarningFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderEarningPayload>
          }
          findMany: {
            args: Prisma.RiderEarningFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderEarningPayload>[]
          }
          create: {
            args: Prisma.RiderEarningCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderEarningPayload>
          }
          createMany: {
            args: Prisma.RiderEarningCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RiderEarningCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderEarningPayload>[]
          }
          delete: {
            args: Prisma.RiderEarningDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderEarningPayload>
          }
          update: {
            args: Prisma.RiderEarningUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderEarningPayload>
          }
          deleteMany: {
            args: Prisma.RiderEarningDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RiderEarningUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RiderEarningUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderEarningPayload>[]
          }
          upsert: {
            args: Prisma.RiderEarningUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiderEarningPayload>
          }
          aggregate: {
            args: Prisma.RiderEarningAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRiderEarning>
          }
          groupBy: {
            args: Prisma.RiderEarningGroupByArgs<ExtArgs>
            result: $Utils.Optional<RiderEarningGroupByOutputType>[]
          }
          count: {
            args: Prisma.RiderEarningCountArgs<ExtArgs>
            result: $Utils.Optional<RiderEarningCountAggregateOutputType> | number
          }
        }
      }
      WeeklyRiderSummary: {
        payload: Prisma.$WeeklyRiderSummaryPayload<ExtArgs>
        fields: Prisma.WeeklyRiderSummaryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WeeklyRiderSummaryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WeeklyRiderSummaryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WeeklyRiderSummaryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WeeklyRiderSummaryPayload>
          }
          findFirst: {
            args: Prisma.WeeklyRiderSummaryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WeeklyRiderSummaryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WeeklyRiderSummaryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WeeklyRiderSummaryPayload>
          }
          findMany: {
            args: Prisma.WeeklyRiderSummaryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WeeklyRiderSummaryPayload>[]
          }
          create: {
            args: Prisma.WeeklyRiderSummaryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WeeklyRiderSummaryPayload>
          }
          createMany: {
            args: Prisma.WeeklyRiderSummaryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.WeeklyRiderSummaryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WeeklyRiderSummaryPayload>[]
          }
          delete: {
            args: Prisma.WeeklyRiderSummaryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WeeklyRiderSummaryPayload>
          }
          update: {
            args: Prisma.WeeklyRiderSummaryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WeeklyRiderSummaryPayload>
          }
          deleteMany: {
            args: Prisma.WeeklyRiderSummaryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WeeklyRiderSummaryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.WeeklyRiderSummaryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WeeklyRiderSummaryPayload>[]
          }
          upsert: {
            args: Prisma.WeeklyRiderSummaryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WeeklyRiderSummaryPayload>
          }
          aggregate: {
            args: Prisma.WeeklyRiderSummaryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWeeklyRiderSummary>
          }
          groupBy: {
            args: Prisma.WeeklyRiderSummaryGroupByArgs<ExtArgs>
            result: $Utils.Optional<WeeklyRiderSummaryGroupByOutputType>[]
          }
          count: {
            args: Prisma.WeeklyRiderSummaryCountArgs<ExtArgs>
            result: $Utils.Optional<WeeklyRiderSummaryCountAggregateOutputType> | number
          }
        }
      }
      RateHistory: {
        payload: Prisma.$RateHistoryPayload<ExtArgs>
        fields: Prisma.RateHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RateHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RateHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RateHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RateHistoryPayload>
          }
          findFirst: {
            args: Prisma.RateHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RateHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RateHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RateHistoryPayload>
          }
          findMany: {
            args: Prisma.RateHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RateHistoryPayload>[]
          }
          create: {
            args: Prisma.RateHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RateHistoryPayload>
          }
          createMany: {
            args: Prisma.RateHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RateHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RateHistoryPayload>[]
          }
          delete: {
            args: Prisma.RateHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RateHistoryPayload>
          }
          update: {
            args: Prisma.RateHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RateHistoryPayload>
          }
          deleteMany: {
            args: Prisma.RateHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RateHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RateHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RateHistoryPayload>[]
          }
          upsert: {
            args: Prisma.RateHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RateHistoryPayload>
          }
          aggregate: {
            args: Prisma.RateHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRateHistory>
          }
          groupBy: {
            args: Prisma.RateHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<RateHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.RateHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<RateHistoryCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    city?: CityOmit
    user?: UserOmit
    client?: ClientOmit
    store?: StoreOmit
    riderEarning?: RiderEarningOmit
    weeklyRiderSummary?: WeeklyRiderSummaryOmit
    rateHistory?: RateHistoryOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    clientsManaged: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientsManaged?: boolean | UserCountOutputTypeCountClientsManagedArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountClientsManagedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
  }


  /**
   * Count Type ClientCountOutputType
   */

  export type ClientCountOutputType = {
    stores: number
    riderEarnings: number
  }

  export type ClientCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stores?: boolean | ClientCountOutputTypeCountStoresArgs
    riderEarnings?: boolean | ClientCountOutputTypeCountRiderEarningsArgs
  }

  // Custom InputTypes
  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCountOutputType
     */
    select?: ClientCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountStoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountRiderEarningsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiderEarningWhereInput
  }


  /**
   * Count Type StoreCountOutputType
   */

  export type StoreCountOutputType = {
    riderEarnings: number
  }

  export type StoreCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    riderEarnings?: boolean | StoreCountOutputTypeCountRiderEarningsArgs
  }

  // Custom InputTypes
  /**
   * StoreCountOutputType without action
   */
  export type StoreCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreCountOutputType
     */
    select?: StoreCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StoreCountOutputType without action
   */
  export type StoreCountOutputTypeCountRiderEarningsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiderEarningWhereInput
  }


  /**
   * Models
   */

  /**
   * Model City
   */

  export type AggregateCity = {
    _count: CityCountAggregateOutputType | null
    _avg: CityAvgAggregateOutputType | null
    _sum: CitySumAggregateOutputType | null
    _min: CityMinAggregateOutputType | null
    _max: CityMaxAggregateOutputType | null
  }

  export type CityAvgAggregateOutputType = {
    latitude: number | null
    longitude: number | null
    estimatedPopulation: number | null
    version: number | null
    eventSequence: number | null
  }

  export type CitySumAggregateOutputType = {
    latitude: number | null
    longitude: number | null
    estimatedPopulation: number | null
    version: number | null
    eventSequence: number | null
  }

  export type CityMinAggregateOutputType = {
    id: string | null
    name: string | null
    displayName: string | null
    code: string | null
    state: string | null
    country: string | null
    timezone: string | null
    latitude: number | null
    longitude: number | null
    pinCodeRange: string | null
    regionCode: string | null
    isActive: boolean | null
    isOperational: boolean | null
    launchDate: Date | null
    estimatedPopulation: number | null
    marketPotential: string | null
    version: number | null
    lastModifiedBy: string | null
    eventSequence: number | null
    lastSyncAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CityMaxAggregateOutputType = {
    id: string | null
    name: string | null
    displayName: string | null
    code: string | null
    state: string | null
    country: string | null
    timezone: string | null
    latitude: number | null
    longitude: number | null
    pinCodeRange: string | null
    regionCode: string | null
    isActive: boolean | null
    isOperational: boolean | null
    launchDate: Date | null
    estimatedPopulation: number | null
    marketPotential: string | null
    version: number | null
    lastModifiedBy: string | null
    eventSequence: number | null
    lastSyncAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CityCountAggregateOutputType = {
    id: number
    name: number
    displayName: number
    code: number
    state: number
    country: number
    timezone: number
    latitude: number
    longitude: number
    pinCodeRange: number
    regionCode: number
    isActive: number
    isOperational: number
    launchDate: number
    estimatedPopulation: number
    marketPotential: number
    version: number
    lastModifiedBy: number
    eventSequence: number
    lastSyncAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CityAvgAggregateInputType = {
    latitude?: true
    longitude?: true
    estimatedPopulation?: true
    version?: true
    eventSequence?: true
  }

  export type CitySumAggregateInputType = {
    latitude?: true
    longitude?: true
    estimatedPopulation?: true
    version?: true
    eventSequence?: true
  }

  export type CityMinAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    code?: true
    state?: true
    country?: true
    timezone?: true
    latitude?: true
    longitude?: true
    pinCodeRange?: true
    regionCode?: true
    isActive?: true
    isOperational?: true
    launchDate?: true
    estimatedPopulation?: true
    marketPotential?: true
    version?: true
    lastModifiedBy?: true
    eventSequence?: true
    lastSyncAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CityMaxAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    code?: true
    state?: true
    country?: true
    timezone?: true
    latitude?: true
    longitude?: true
    pinCodeRange?: true
    regionCode?: true
    isActive?: true
    isOperational?: true
    launchDate?: true
    estimatedPopulation?: true
    marketPotential?: true
    version?: true
    lastModifiedBy?: true
    eventSequence?: true
    lastSyncAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CityCountAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    code?: true
    state?: true
    country?: true
    timezone?: true
    latitude?: true
    longitude?: true
    pinCodeRange?: true
    regionCode?: true
    isActive?: true
    isOperational?: true
    launchDate?: true
    estimatedPopulation?: true
    marketPotential?: true
    version?: true
    lastModifiedBy?: true
    eventSequence?: true
    lastSyncAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which City to aggregate.
     */
    where?: CityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cities to fetch.
     */
    orderBy?: CityOrderByWithRelationInput | CityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cities
    **/
    _count?: true | CityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CityMaxAggregateInputType
  }

  export type GetCityAggregateType<T extends CityAggregateArgs> = {
        [P in keyof T & keyof AggregateCity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCity[P]>
      : GetScalarType<T[P], AggregateCity[P]>
  }




  export type CityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CityWhereInput
    orderBy?: CityOrderByWithAggregationInput | CityOrderByWithAggregationInput[]
    by: CityScalarFieldEnum[] | CityScalarFieldEnum
    having?: CityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CityCountAggregateInputType | true
    _avg?: CityAvgAggregateInputType
    _sum?: CitySumAggregateInputType
    _min?: CityMinAggregateInputType
    _max?: CityMaxAggregateInputType
  }

  export type CityGroupByOutputType = {
    id: string
    name: string
    displayName: string
    code: string
    state: string
    country: string
    timezone: string
    latitude: number
    longitude: number
    pinCodeRange: string | null
    regionCode: string | null
    isActive: boolean
    isOperational: boolean
    launchDate: Date | null
    estimatedPopulation: number | null
    marketPotential: string | null
    version: number
    lastModifiedBy: string | null
    eventSequence: number
    lastSyncAt: Date
    createdAt: Date
    updatedAt: Date
    _count: CityCountAggregateOutputType | null
    _avg: CityAvgAggregateOutputType | null
    _sum: CitySumAggregateOutputType | null
    _min: CityMinAggregateOutputType | null
    _max: CityMaxAggregateOutputType | null
  }

  type GetCityGroupByPayload<T extends CityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CityGroupByOutputType[P]>
            : GetScalarType<T[P], CityGroupByOutputType[P]>
        }
      >
    >


  export type CitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    displayName?: boolean
    code?: boolean
    state?: boolean
    country?: boolean
    timezone?: boolean
    latitude?: boolean
    longitude?: boolean
    pinCodeRange?: boolean
    regionCode?: boolean
    isActive?: boolean
    isOperational?: boolean
    launchDate?: boolean
    estimatedPopulation?: boolean
    marketPotential?: boolean
    version?: boolean
    lastModifiedBy?: boolean
    eventSequence?: boolean
    lastSyncAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["city"]>

  export type CitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    displayName?: boolean
    code?: boolean
    state?: boolean
    country?: boolean
    timezone?: boolean
    latitude?: boolean
    longitude?: boolean
    pinCodeRange?: boolean
    regionCode?: boolean
    isActive?: boolean
    isOperational?: boolean
    launchDate?: boolean
    estimatedPopulation?: boolean
    marketPotential?: boolean
    version?: boolean
    lastModifiedBy?: boolean
    eventSequence?: boolean
    lastSyncAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["city"]>

  export type CitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    displayName?: boolean
    code?: boolean
    state?: boolean
    country?: boolean
    timezone?: boolean
    latitude?: boolean
    longitude?: boolean
    pinCodeRange?: boolean
    regionCode?: boolean
    isActive?: boolean
    isOperational?: boolean
    launchDate?: boolean
    estimatedPopulation?: boolean
    marketPotential?: boolean
    version?: boolean
    lastModifiedBy?: boolean
    eventSequence?: boolean
    lastSyncAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["city"]>

  export type CitySelectScalar = {
    id?: boolean
    name?: boolean
    displayName?: boolean
    code?: boolean
    state?: boolean
    country?: boolean
    timezone?: boolean
    latitude?: boolean
    longitude?: boolean
    pinCodeRange?: boolean
    regionCode?: boolean
    isActive?: boolean
    isOperational?: boolean
    launchDate?: boolean
    estimatedPopulation?: boolean
    marketPotential?: boolean
    version?: boolean
    lastModifiedBy?: boolean
    eventSequence?: boolean
    lastSyncAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "displayName" | "code" | "state" | "country" | "timezone" | "latitude" | "longitude" | "pinCodeRange" | "regionCode" | "isActive" | "isOperational" | "launchDate" | "estimatedPopulation" | "marketPotential" | "version" | "lastModifiedBy" | "eventSequence" | "lastSyncAt" | "createdAt" | "updatedAt", ExtArgs["result"]["city"]>

  export type $CityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "City"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      displayName: string
      code: string
      state: string
      country: string
      timezone: string
      latitude: number
      longitude: number
      pinCodeRange: string | null
      regionCode: string | null
      isActive: boolean
      isOperational: boolean
      launchDate: Date | null
      estimatedPopulation: number | null
      marketPotential: string | null
      version: number
      lastModifiedBy: string | null
      eventSequence: number
      lastSyncAt: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["city"]>
    composites: {}
  }

  type CityGetPayload<S extends boolean | null | undefined | CityDefaultArgs> = $Result.GetResult<Prisma.$CityPayload, S>

  type CityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CityCountAggregateInputType | true
    }

  export interface CityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['City'], meta: { name: 'City' } }
    /**
     * Find zero or one City that matches the filter.
     * @param {CityFindUniqueArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CityFindUniqueArgs>(args: SelectSubset<T, CityFindUniqueArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one City that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CityFindUniqueOrThrowArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CityFindUniqueOrThrowArgs>(args: SelectSubset<T, CityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first City that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityFindFirstArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CityFindFirstArgs>(args?: SelectSubset<T, CityFindFirstArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first City that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityFindFirstOrThrowArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CityFindFirstOrThrowArgs>(args?: SelectSubset<T, CityFindFirstOrThrowArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cities
     * const cities = await prisma.city.findMany()
     * 
     * // Get first 10 Cities
     * const cities = await prisma.city.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cityWithIdOnly = await prisma.city.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CityFindManyArgs>(args?: SelectSubset<T, CityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a City.
     * @param {CityCreateArgs} args - Arguments to create a City.
     * @example
     * // Create one City
     * const City = await prisma.city.create({
     *   data: {
     *     // ... data to create a City
     *   }
     * })
     * 
     */
    create<T extends CityCreateArgs>(args: SelectSubset<T, CityCreateArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cities.
     * @param {CityCreateManyArgs} args - Arguments to create many Cities.
     * @example
     * // Create many Cities
     * const city = await prisma.city.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CityCreateManyArgs>(args?: SelectSubset<T, CityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cities and returns the data saved in the database.
     * @param {CityCreateManyAndReturnArgs} args - Arguments to create many Cities.
     * @example
     * // Create many Cities
     * const city = await prisma.city.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cities and only return the `id`
     * const cityWithIdOnly = await prisma.city.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CityCreateManyAndReturnArgs>(args?: SelectSubset<T, CityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a City.
     * @param {CityDeleteArgs} args - Arguments to delete one City.
     * @example
     * // Delete one City
     * const City = await prisma.city.delete({
     *   where: {
     *     // ... filter to delete one City
     *   }
     * })
     * 
     */
    delete<T extends CityDeleteArgs>(args: SelectSubset<T, CityDeleteArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one City.
     * @param {CityUpdateArgs} args - Arguments to update one City.
     * @example
     * // Update one City
     * const city = await prisma.city.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CityUpdateArgs>(args: SelectSubset<T, CityUpdateArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cities.
     * @param {CityDeleteManyArgs} args - Arguments to filter Cities to delete.
     * @example
     * // Delete a few Cities
     * const { count } = await prisma.city.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CityDeleteManyArgs>(args?: SelectSubset<T, CityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cities
     * const city = await prisma.city.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CityUpdateManyArgs>(args: SelectSubset<T, CityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cities and returns the data updated in the database.
     * @param {CityUpdateManyAndReturnArgs} args - Arguments to update many Cities.
     * @example
     * // Update many Cities
     * const city = await prisma.city.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cities and only return the `id`
     * const cityWithIdOnly = await prisma.city.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CityUpdateManyAndReturnArgs>(args: SelectSubset<T, CityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one City.
     * @param {CityUpsertArgs} args - Arguments to update or create a City.
     * @example
     * // Update or create a City
     * const city = await prisma.city.upsert({
     *   create: {
     *     // ... data to create a City
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the City we want to update
     *   }
     * })
     */
    upsert<T extends CityUpsertArgs>(args: SelectSubset<T, CityUpsertArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityCountArgs} args - Arguments to filter Cities to count.
     * @example
     * // Count the number of Cities
     * const count = await prisma.city.count({
     *   where: {
     *     // ... the filter for the Cities we want to count
     *   }
     * })
    **/
    count<T extends CityCountArgs>(
      args?: Subset<T, CityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a City.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CityAggregateArgs>(args: Subset<T, CityAggregateArgs>): Prisma.PrismaPromise<GetCityAggregateType<T>>

    /**
     * Group by City.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CityGroupByArgs['orderBy'] }
        : { orderBy?: CityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the City model
   */
  readonly fields: CityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for City.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the City model
   */
  interface CityFieldRefs {
    readonly id: FieldRef<"City", 'String'>
    readonly name: FieldRef<"City", 'String'>
    readonly displayName: FieldRef<"City", 'String'>
    readonly code: FieldRef<"City", 'String'>
    readonly state: FieldRef<"City", 'String'>
    readonly country: FieldRef<"City", 'String'>
    readonly timezone: FieldRef<"City", 'String'>
    readonly latitude: FieldRef<"City", 'Float'>
    readonly longitude: FieldRef<"City", 'Float'>
    readonly pinCodeRange: FieldRef<"City", 'String'>
    readonly regionCode: FieldRef<"City", 'String'>
    readonly isActive: FieldRef<"City", 'Boolean'>
    readonly isOperational: FieldRef<"City", 'Boolean'>
    readonly launchDate: FieldRef<"City", 'DateTime'>
    readonly estimatedPopulation: FieldRef<"City", 'Int'>
    readonly marketPotential: FieldRef<"City", 'String'>
    readonly version: FieldRef<"City", 'Int'>
    readonly lastModifiedBy: FieldRef<"City", 'String'>
    readonly eventSequence: FieldRef<"City", 'Int'>
    readonly lastSyncAt: FieldRef<"City", 'DateTime'>
    readonly createdAt: FieldRef<"City", 'DateTime'>
    readonly updatedAt: FieldRef<"City", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * City findUnique
   */
  export type CityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Filter, which City to fetch.
     */
    where: CityWhereUniqueInput
  }

  /**
   * City findUniqueOrThrow
   */
  export type CityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Filter, which City to fetch.
     */
    where: CityWhereUniqueInput
  }

  /**
   * City findFirst
   */
  export type CityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Filter, which City to fetch.
     */
    where?: CityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cities to fetch.
     */
    orderBy?: CityOrderByWithRelationInput | CityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cities.
     */
    cursor?: CityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cities.
     */
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * City findFirstOrThrow
   */
  export type CityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Filter, which City to fetch.
     */
    where?: CityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cities to fetch.
     */
    orderBy?: CityOrderByWithRelationInput | CityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cities.
     */
    cursor?: CityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cities.
     */
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * City findMany
   */
  export type CityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Filter, which Cities to fetch.
     */
    where?: CityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cities to fetch.
     */
    orderBy?: CityOrderByWithRelationInput | CityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cities.
     */
    cursor?: CityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cities.
     */
    skip?: number
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * City create
   */
  export type CityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * The data needed to create a City.
     */
    data: XOR<CityCreateInput, CityUncheckedCreateInput>
  }

  /**
   * City createMany
   */
  export type CityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cities.
     */
    data: CityCreateManyInput | CityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * City createManyAndReturn
   */
  export type CityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * The data used to create many Cities.
     */
    data: CityCreateManyInput | CityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * City update
   */
  export type CityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * The data needed to update a City.
     */
    data: XOR<CityUpdateInput, CityUncheckedUpdateInput>
    /**
     * Choose, which City to update.
     */
    where: CityWhereUniqueInput
  }

  /**
   * City updateMany
   */
  export type CityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cities.
     */
    data: XOR<CityUpdateManyMutationInput, CityUncheckedUpdateManyInput>
    /**
     * Filter which Cities to update
     */
    where?: CityWhereInput
    /**
     * Limit how many Cities to update.
     */
    limit?: number
  }

  /**
   * City updateManyAndReturn
   */
  export type CityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * The data used to update Cities.
     */
    data: XOR<CityUpdateManyMutationInput, CityUncheckedUpdateManyInput>
    /**
     * Filter which Cities to update
     */
    where?: CityWhereInput
    /**
     * Limit how many Cities to update.
     */
    limit?: number
  }

  /**
   * City upsert
   */
  export type CityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * The filter to search for the City to update in case it exists.
     */
    where: CityWhereUniqueInput
    /**
     * In case the City found by the `where` argument doesn't exist, create a new City with this data.
     */
    create: XOR<CityCreateInput, CityUncheckedCreateInput>
    /**
     * In case the City was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CityUpdateInput, CityUncheckedUpdateInput>
  }

  /**
   * City delete
   */
  export type CityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Filter which City to delete.
     */
    where: CityWhereUniqueInput
  }

  /**
   * City deleteMany
   */
  export type CityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cities to delete
     */
    where?: CityWhereInput
    /**
     * Limit how many Cities to delete.
     */
    limit?: number
  }

  /**
   * City without action
   */
  export type CityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    firstName: number
    lastName: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    firstName: string
    lastName: string
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientsManaged?: boolean | User$clientsManagedArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "firstName" | "lastName" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientsManaged?: boolean | User$clientsManagedArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      clientsManaged: Prisma.$ClientPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      firstName: string
      lastName: string
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clientsManaged<T extends User$clientsManagedArgs<ExtArgs> = {}>(args?: Subset<T, User$clientsManagedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.clientsManaged
   */
  export type User$clientsManagedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    cursor?: ClientWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Client
   */

  export type AggregateClient = {
    _count: ClientCountAggregateOutputType | null
    _avg: ClientAvgAggregateOutputType | null
    _sum: ClientSumAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  export type ClientAvgAggregateOutputType = {
    fleetSize: number | null
    baseOrderRate: number | null
    minimumRate: number | null
    maximumRate: number | null
    bulkOrdersThreshold: number | null
    bulkBonusAmount: number | null
    weeklyOrderTarget: number | null
    weeklyBonusAmount: number | null
    topPerformerRate: number | null
    minimumPayout: number | null
  }

  export type ClientSumAggregateOutputType = {
    fleetSize: number | null
    baseOrderRate: number | null
    minimumRate: number | null
    maximumRate: number | null
    bulkOrdersThreshold: number | null
    bulkBonusAmount: number | null
    weeklyOrderTarget: number | null
    weeklyBonusAmount: number | null
    topPerformerRate: number | null
    minimumPayout: number | null
  }

  export type ClientMinAggregateOutputType = {
    id: string | null
    name: string | null
    clientCode: string | null
    clientType: string | null
    industrySector: string | null
    businessCategory: string | null
    primaryContactPerson: string | null
    designation: string | null
    email: string | null
    secondaryEmail: string | null
    phone: string | null
    secondaryPhone: string | null
    city: string | null
    state: string | null
    pinCode: string | null
    registrationNumber: string | null
    panNumber: string | null
    gstNumber: string | null
    evPortfolio: string | null
    fleetSize: number | null
    hasChargingInfra: boolean | null
    chargingInfraDetails: string | null
    batteryTechPreference: string | null
    serviceRequirements: string | null
    paymentTerms: string | null
    preferredPaymentMethod: string | null
    taxCategory: string | null
    discountCategory: string | null
    baseOrderRate: number | null
    rateEffectiveDate: Date | null
    rateType: string | null
    minimumRate: number | null
    maximumRate: number | null
    bulkBonusEnabled: boolean | null
    bulkOrdersThreshold: number | null
    bulkBonusAmount: number | null
    bulkResetPeriod: string | null
    weeklyBonusEnabled: boolean | null
    weeklyOrderTarget: number | null
    weeklyBonusAmount: number | null
    performanceMultiplierEnabled: boolean | null
    topPerformerRate: number | null
    performanceCriteria: string | null
    paymentCycle: string | null
    paymentMethods: string | null
    minimumPayout: number | null
    payoutDay: string | null
    clientStatus: string | null
    acquisitionDate: Date | null
    accountManagerId: string | null
    clientPriority: string | null
    relationshipType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClientMaxAggregateOutputType = {
    id: string | null
    name: string | null
    clientCode: string | null
    clientType: string | null
    industrySector: string | null
    businessCategory: string | null
    primaryContactPerson: string | null
    designation: string | null
    email: string | null
    secondaryEmail: string | null
    phone: string | null
    secondaryPhone: string | null
    city: string | null
    state: string | null
    pinCode: string | null
    registrationNumber: string | null
    panNumber: string | null
    gstNumber: string | null
    evPortfolio: string | null
    fleetSize: number | null
    hasChargingInfra: boolean | null
    chargingInfraDetails: string | null
    batteryTechPreference: string | null
    serviceRequirements: string | null
    paymentTerms: string | null
    preferredPaymentMethod: string | null
    taxCategory: string | null
    discountCategory: string | null
    baseOrderRate: number | null
    rateEffectiveDate: Date | null
    rateType: string | null
    minimumRate: number | null
    maximumRate: number | null
    bulkBonusEnabled: boolean | null
    bulkOrdersThreshold: number | null
    bulkBonusAmount: number | null
    bulkResetPeriod: string | null
    weeklyBonusEnabled: boolean | null
    weeklyOrderTarget: number | null
    weeklyBonusAmount: number | null
    performanceMultiplierEnabled: boolean | null
    topPerformerRate: number | null
    performanceCriteria: string | null
    paymentCycle: string | null
    paymentMethods: string | null
    minimumPayout: number | null
    payoutDay: string | null
    clientStatus: string | null
    acquisitionDate: Date | null
    accountManagerId: string | null
    clientPriority: string | null
    relationshipType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClientCountAggregateOutputType = {
    id: number
    name: number
    clientCode: number
    clientType: number
    industrySector: number
    businessCategory: number
    primaryContactPerson: number
    designation: number
    email: number
    secondaryEmail: number
    phone: number
    secondaryPhone: number
    city: number
    state: number
    pinCode: number
    registrationNumber: number
    panNumber: number
    gstNumber: number
    evPortfolio: number
    fleetSize: number
    hasChargingInfra: number
    chargingInfraDetails: number
    batteryTechPreference: number
    serviceRequirements: number
    paymentTerms: number
    preferredPaymentMethod: number
    taxCategory: number
    discountCategory: number
    baseOrderRate: number
    rateEffectiveDate: number
    rateType: number
    minimumRate: number
    maximumRate: number
    bulkBonusEnabled: number
    bulkOrdersThreshold: number
    bulkBonusAmount: number
    bulkResetPeriod: number
    weeklyBonusEnabled: number
    weeklyOrderTarget: number
    weeklyBonusAmount: number
    performanceMultiplierEnabled: number
    topPerformerRate: number
    performanceCriteria: number
    paymentCycle: number
    paymentMethods: number
    minimumPayout: number
    payoutDay: number
    clientStatus: number
    acquisitionDate: number
    accountManagerId: number
    clientPriority: number
    relationshipType: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ClientAvgAggregateInputType = {
    fleetSize?: true
    baseOrderRate?: true
    minimumRate?: true
    maximumRate?: true
    bulkOrdersThreshold?: true
    bulkBonusAmount?: true
    weeklyOrderTarget?: true
    weeklyBonusAmount?: true
    topPerformerRate?: true
    minimumPayout?: true
  }

  export type ClientSumAggregateInputType = {
    fleetSize?: true
    baseOrderRate?: true
    minimumRate?: true
    maximumRate?: true
    bulkOrdersThreshold?: true
    bulkBonusAmount?: true
    weeklyOrderTarget?: true
    weeklyBonusAmount?: true
    topPerformerRate?: true
    minimumPayout?: true
  }

  export type ClientMinAggregateInputType = {
    id?: true
    name?: true
    clientCode?: true
    clientType?: true
    industrySector?: true
    businessCategory?: true
    primaryContactPerson?: true
    designation?: true
    email?: true
    secondaryEmail?: true
    phone?: true
    secondaryPhone?: true
    city?: true
    state?: true
    pinCode?: true
    registrationNumber?: true
    panNumber?: true
    gstNumber?: true
    evPortfolio?: true
    fleetSize?: true
    hasChargingInfra?: true
    chargingInfraDetails?: true
    batteryTechPreference?: true
    serviceRequirements?: true
    paymentTerms?: true
    preferredPaymentMethod?: true
    taxCategory?: true
    discountCategory?: true
    baseOrderRate?: true
    rateEffectiveDate?: true
    rateType?: true
    minimumRate?: true
    maximumRate?: true
    bulkBonusEnabled?: true
    bulkOrdersThreshold?: true
    bulkBonusAmount?: true
    bulkResetPeriod?: true
    weeklyBonusEnabled?: true
    weeklyOrderTarget?: true
    weeklyBonusAmount?: true
    performanceMultiplierEnabled?: true
    topPerformerRate?: true
    performanceCriteria?: true
    paymentCycle?: true
    paymentMethods?: true
    minimumPayout?: true
    payoutDay?: true
    clientStatus?: true
    acquisitionDate?: true
    accountManagerId?: true
    clientPriority?: true
    relationshipType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClientMaxAggregateInputType = {
    id?: true
    name?: true
    clientCode?: true
    clientType?: true
    industrySector?: true
    businessCategory?: true
    primaryContactPerson?: true
    designation?: true
    email?: true
    secondaryEmail?: true
    phone?: true
    secondaryPhone?: true
    city?: true
    state?: true
    pinCode?: true
    registrationNumber?: true
    panNumber?: true
    gstNumber?: true
    evPortfolio?: true
    fleetSize?: true
    hasChargingInfra?: true
    chargingInfraDetails?: true
    batteryTechPreference?: true
    serviceRequirements?: true
    paymentTerms?: true
    preferredPaymentMethod?: true
    taxCategory?: true
    discountCategory?: true
    baseOrderRate?: true
    rateEffectiveDate?: true
    rateType?: true
    minimumRate?: true
    maximumRate?: true
    bulkBonusEnabled?: true
    bulkOrdersThreshold?: true
    bulkBonusAmount?: true
    bulkResetPeriod?: true
    weeklyBonusEnabled?: true
    weeklyOrderTarget?: true
    weeklyBonusAmount?: true
    performanceMultiplierEnabled?: true
    topPerformerRate?: true
    performanceCriteria?: true
    paymentCycle?: true
    paymentMethods?: true
    minimumPayout?: true
    payoutDay?: true
    clientStatus?: true
    acquisitionDate?: true
    accountManagerId?: true
    clientPriority?: true
    relationshipType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClientCountAggregateInputType = {
    id?: true
    name?: true
    clientCode?: true
    clientType?: true
    industrySector?: true
    businessCategory?: true
    primaryContactPerson?: true
    designation?: true
    email?: true
    secondaryEmail?: true
    phone?: true
    secondaryPhone?: true
    city?: true
    state?: true
    pinCode?: true
    registrationNumber?: true
    panNumber?: true
    gstNumber?: true
    evPortfolio?: true
    fleetSize?: true
    hasChargingInfra?: true
    chargingInfraDetails?: true
    batteryTechPreference?: true
    serviceRequirements?: true
    paymentTerms?: true
    preferredPaymentMethod?: true
    taxCategory?: true
    discountCategory?: true
    baseOrderRate?: true
    rateEffectiveDate?: true
    rateType?: true
    minimumRate?: true
    maximumRate?: true
    bulkBonusEnabled?: true
    bulkOrdersThreshold?: true
    bulkBonusAmount?: true
    bulkResetPeriod?: true
    weeklyBonusEnabled?: true
    weeklyOrderTarget?: true
    weeklyBonusAmount?: true
    performanceMultiplierEnabled?: true
    topPerformerRate?: true
    performanceCriteria?: true
    paymentCycle?: true
    paymentMethods?: true
    minimumPayout?: true
    payoutDay?: true
    clientStatus?: true
    acquisitionDate?: true
    accountManagerId?: true
    clientPriority?: true
    relationshipType?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ClientAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Client to aggregate.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clients
    **/
    _count?: true | ClientCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientMaxAggregateInputType
  }

  export type GetClientAggregateType<T extends ClientAggregateArgs> = {
        [P in keyof T & keyof AggregateClient]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClient[P]>
      : GetScalarType<T[P], AggregateClient[P]>
  }




  export type ClientGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithAggregationInput | ClientOrderByWithAggregationInput[]
    by: ClientScalarFieldEnum[] | ClientScalarFieldEnum
    having?: ClientScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientCountAggregateInputType | true
    _avg?: ClientAvgAggregateInputType
    _sum?: ClientSumAggregateInputType
    _min?: ClientMinAggregateInputType
    _max?: ClientMaxAggregateInputType
  }

  export type ClientGroupByOutputType = {
    id: string
    name: string
    clientCode: string
    clientType: string
    industrySector: string | null
    businessCategory: string | null
    primaryContactPerson: string | null
    designation: string | null
    email: string | null
    secondaryEmail: string | null
    phone: string | null
    secondaryPhone: string | null
    city: string | null
    state: string | null
    pinCode: string | null
    registrationNumber: string | null
    panNumber: string | null
    gstNumber: string | null
    evPortfolio: string | null
    fleetSize: number | null
    hasChargingInfra: boolean
    chargingInfraDetails: string | null
    batteryTechPreference: string | null
    serviceRequirements: string | null
    paymentTerms: string | null
    preferredPaymentMethod: string | null
    taxCategory: string | null
    discountCategory: string | null
    baseOrderRate: number
    rateEffectiveDate: Date
    rateType: string
    minimumRate: number
    maximumRate: number
    bulkBonusEnabled: boolean
    bulkOrdersThreshold: number
    bulkBonusAmount: number
    bulkResetPeriod: string
    weeklyBonusEnabled: boolean
    weeklyOrderTarget: number
    weeklyBonusAmount: number
    performanceMultiplierEnabled: boolean
    topPerformerRate: number
    performanceCriteria: string
    paymentCycle: string
    paymentMethods: string | null
    minimumPayout: number
    payoutDay: string
    clientStatus: string
    acquisitionDate: Date
    accountManagerId: string | null
    clientPriority: string
    relationshipType: string
    createdAt: Date
    updatedAt: Date
    _count: ClientCountAggregateOutputType | null
    _avg: ClientAvgAggregateOutputType | null
    _sum: ClientSumAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  type GetClientGroupByPayload<T extends ClientGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientGroupByOutputType[P]>
            : GetScalarType<T[P], ClientGroupByOutputType[P]>
        }
      >
    >


  export type ClientSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    clientCode?: boolean
    clientType?: boolean
    industrySector?: boolean
    businessCategory?: boolean
    primaryContactPerson?: boolean
    designation?: boolean
    email?: boolean
    secondaryEmail?: boolean
    phone?: boolean
    secondaryPhone?: boolean
    city?: boolean
    state?: boolean
    pinCode?: boolean
    registrationNumber?: boolean
    panNumber?: boolean
    gstNumber?: boolean
    evPortfolio?: boolean
    fleetSize?: boolean
    hasChargingInfra?: boolean
    chargingInfraDetails?: boolean
    batteryTechPreference?: boolean
    serviceRequirements?: boolean
    paymentTerms?: boolean
    preferredPaymentMethod?: boolean
    taxCategory?: boolean
    discountCategory?: boolean
    baseOrderRate?: boolean
    rateEffectiveDate?: boolean
    rateType?: boolean
    minimumRate?: boolean
    maximumRate?: boolean
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: boolean
    bulkBonusAmount?: boolean
    bulkResetPeriod?: boolean
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: boolean
    weeklyBonusAmount?: boolean
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: boolean
    performanceCriteria?: boolean
    paymentCycle?: boolean
    paymentMethods?: boolean
    minimumPayout?: boolean
    payoutDay?: boolean
    clientStatus?: boolean
    acquisitionDate?: boolean
    accountManagerId?: boolean
    clientPriority?: boolean
    relationshipType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    stores?: boolean | Client$storesArgs<ExtArgs>
    accountManager?: boolean | Client$accountManagerArgs<ExtArgs>
    riderEarnings?: boolean | Client$riderEarningsArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    clientCode?: boolean
    clientType?: boolean
    industrySector?: boolean
    businessCategory?: boolean
    primaryContactPerson?: boolean
    designation?: boolean
    email?: boolean
    secondaryEmail?: boolean
    phone?: boolean
    secondaryPhone?: boolean
    city?: boolean
    state?: boolean
    pinCode?: boolean
    registrationNumber?: boolean
    panNumber?: boolean
    gstNumber?: boolean
    evPortfolio?: boolean
    fleetSize?: boolean
    hasChargingInfra?: boolean
    chargingInfraDetails?: boolean
    batteryTechPreference?: boolean
    serviceRequirements?: boolean
    paymentTerms?: boolean
    preferredPaymentMethod?: boolean
    taxCategory?: boolean
    discountCategory?: boolean
    baseOrderRate?: boolean
    rateEffectiveDate?: boolean
    rateType?: boolean
    minimumRate?: boolean
    maximumRate?: boolean
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: boolean
    bulkBonusAmount?: boolean
    bulkResetPeriod?: boolean
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: boolean
    weeklyBonusAmount?: boolean
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: boolean
    performanceCriteria?: boolean
    paymentCycle?: boolean
    paymentMethods?: boolean
    minimumPayout?: boolean
    payoutDay?: boolean
    clientStatus?: boolean
    acquisitionDate?: boolean
    accountManagerId?: boolean
    clientPriority?: boolean
    relationshipType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    accountManager?: boolean | Client$accountManagerArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    clientCode?: boolean
    clientType?: boolean
    industrySector?: boolean
    businessCategory?: boolean
    primaryContactPerson?: boolean
    designation?: boolean
    email?: boolean
    secondaryEmail?: boolean
    phone?: boolean
    secondaryPhone?: boolean
    city?: boolean
    state?: boolean
    pinCode?: boolean
    registrationNumber?: boolean
    panNumber?: boolean
    gstNumber?: boolean
    evPortfolio?: boolean
    fleetSize?: boolean
    hasChargingInfra?: boolean
    chargingInfraDetails?: boolean
    batteryTechPreference?: boolean
    serviceRequirements?: boolean
    paymentTerms?: boolean
    preferredPaymentMethod?: boolean
    taxCategory?: boolean
    discountCategory?: boolean
    baseOrderRate?: boolean
    rateEffectiveDate?: boolean
    rateType?: boolean
    minimumRate?: boolean
    maximumRate?: boolean
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: boolean
    bulkBonusAmount?: boolean
    bulkResetPeriod?: boolean
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: boolean
    weeklyBonusAmount?: boolean
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: boolean
    performanceCriteria?: boolean
    paymentCycle?: boolean
    paymentMethods?: boolean
    minimumPayout?: boolean
    payoutDay?: boolean
    clientStatus?: boolean
    acquisitionDate?: boolean
    accountManagerId?: boolean
    clientPriority?: boolean
    relationshipType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    accountManager?: boolean | Client$accountManagerArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectScalar = {
    id?: boolean
    name?: boolean
    clientCode?: boolean
    clientType?: boolean
    industrySector?: boolean
    businessCategory?: boolean
    primaryContactPerson?: boolean
    designation?: boolean
    email?: boolean
    secondaryEmail?: boolean
    phone?: boolean
    secondaryPhone?: boolean
    city?: boolean
    state?: boolean
    pinCode?: boolean
    registrationNumber?: boolean
    panNumber?: boolean
    gstNumber?: boolean
    evPortfolio?: boolean
    fleetSize?: boolean
    hasChargingInfra?: boolean
    chargingInfraDetails?: boolean
    batteryTechPreference?: boolean
    serviceRequirements?: boolean
    paymentTerms?: boolean
    preferredPaymentMethod?: boolean
    taxCategory?: boolean
    discountCategory?: boolean
    baseOrderRate?: boolean
    rateEffectiveDate?: boolean
    rateType?: boolean
    minimumRate?: boolean
    maximumRate?: boolean
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: boolean
    bulkBonusAmount?: boolean
    bulkResetPeriod?: boolean
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: boolean
    weeklyBonusAmount?: boolean
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: boolean
    performanceCriteria?: boolean
    paymentCycle?: boolean
    paymentMethods?: boolean
    minimumPayout?: boolean
    payoutDay?: boolean
    clientStatus?: boolean
    acquisitionDate?: boolean
    accountManagerId?: boolean
    clientPriority?: boolean
    relationshipType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ClientOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "clientCode" | "clientType" | "industrySector" | "businessCategory" | "primaryContactPerson" | "designation" | "email" | "secondaryEmail" | "phone" | "secondaryPhone" | "city" | "state" | "pinCode" | "registrationNumber" | "panNumber" | "gstNumber" | "evPortfolio" | "fleetSize" | "hasChargingInfra" | "chargingInfraDetails" | "batteryTechPreference" | "serviceRequirements" | "paymentTerms" | "preferredPaymentMethod" | "taxCategory" | "discountCategory" | "baseOrderRate" | "rateEffectiveDate" | "rateType" | "minimumRate" | "maximumRate" | "bulkBonusEnabled" | "bulkOrdersThreshold" | "bulkBonusAmount" | "bulkResetPeriod" | "weeklyBonusEnabled" | "weeklyOrderTarget" | "weeklyBonusAmount" | "performanceMultiplierEnabled" | "topPerformerRate" | "performanceCriteria" | "paymentCycle" | "paymentMethods" | "minimumPayout" | "payoutDay" | "clientStatus" | "acquisitionDate" | "accountManagerId" | "clientPriority" | "relationshipType" | "createdAt" | "updatedAt", ExtArgs["result"]["client"]>
  export type ClientInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stores?: boolean | Client$storesArgs<ExtArgs>
    accountManager?: boolean | Client$accountManagerArgs<ExtArgs>
    riderEarnings?: boolean | Client$riderEarningsArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClientIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accountManager?: boolean | Client$accountManagerArgs<ExtArgs>
  }
  export type ClientIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accountManager?: boolean | Client$accountManagerArgs<ExtArgs>
  }

  export type $ClientPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Client"
    objects: {
      stores: Prisma.$StorePayload<ExtArgs>[]
      accountManager: Prisma.$UserPayload<ExtArgs> | null
      riderEarnings: Prisma.$RiderEarningPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      clientCode: string
      clientType: string
      industrySector: string | null
      businessCategory: string | null
      primaryContactPerson: string | null
      designation: string | null
      email: string | null
      secondaryEmail: string | null
      phone: string | null
      secondaryPhone: string | null
      city: string | null
      state: string | null
      pinCode: string | null
      registrationNumber: string | null
      panNumber: string | null
      gstNumber: string | null
      evPortfolio: string | null
      fleetSize: number | null
      hasChargingInfra: boolean
      chargingInfraDetails: string | null
      batteryTechPreference: string | null
      serviceRequirements: string | null
      paymentTerms: string | null
      preferredPaymentMethod: string | null
      taxCategory: string | null
      discountCategory: string | null
      baseOrderRate: number
      rateEffectiveDate: Date
      rateType: string
      minimumRate: number
      maximumRate: number
      bulkBonusEnabled: boolean
      bulkOrdersThreshold: number
      bulkBonusAmount: number
      bulkResetPeriod: string
      weeklyBonusEnabled: boolean
      weeklyOrderTarget: number
      weeklyBonusAmount: number
      performanceMultiplierEnabled: boolean
      topPerformerRate: number
      performanceCriteria: string
      paymentCycle: string
      paymentMethods: string | null
      minimumPayout: number
      payoutDay: string
      clientStatus: string
      acquisitionDate: Date
      accountManagerId: string | null
      clientPriority: string
      relationshipType: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["client"]>
    composites: {}
  }

  type ClientGetPayload<S extends boolean | null | undefined | ClientDefaultArgs> = $Result.GetResult<Prisma.$ClientPayload, S>

  type ClientCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClientFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientCountAggregateInputType | true
    }

  export interface ClientDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Client'], meta: { name: 'Client' } }
    /**
     * Find zero or one Client that matches the filter.
     * @param {ClientFindUniqueArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientFindUniqueArgs>(args: SelectSubset<T, ClientFindUniqueArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Client that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClientFindUniqueOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientFindFirstArgs>(args?: SelectSubset<T, ClientFindFirstArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clients
     * const clients = await prisma.client.findMany()
     * 
     * // Get first 10 Clients
     * const clients = await prisma.client.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientWithIdOnly = await prisma.client.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientFindManyArgs>(args?: SelectSubset<T, ClientFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Client.
     * @param {ClientCreateArgs} args - Arguments to create a Client.
     * @example
     * // Create one Client
     * const Client = await prisma.client.create({
     *   data: {
     *     // ... data to create a Client
     *   }
     * })
     * 
     */
    create<T extends ClientCreateArgs>(args: SelectSubset<T, ClientCreateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clients.
     * @param {ClientCreateManyArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientCreateManyArgs>(args?: SelectSubset<T, ClientCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clients and returns the data saved in the database.
     * @param {ClientCreateManyAndReturnArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clients and only return the `id`
     * const clientWithIdOnly = await prisma.client.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Client.
     * @param {ClientDeleteArgs} args - Arguments to delete one Client.
     * @example
     * // Delete one Client
     * const Client = await prisma.client.delete({
     *   where: {
     *     // ... filter to delete one Client
     *   }
     * })
     * 
     */
    delete<T extends ClientDeleteArgs>(args: SelectSubset<T, ClientDeleteArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Client.
     * @param {ClientUpdateArgs} args - Arguments to update one Client.
     * @example
     * // Update one Client
     * const client = await prisma.client.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientUpdateArgs>(args: SelectSubset<T, ClientUpdateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clients.
     * @param {ClientDeleteManyArgs} args - Arguments to filter Clients to delete.
     * @example
     * // Delete a few Clients
     * const { count } = await prisma.client.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientDeleteManyArgs>(args?: SelectSubset<T, ClientDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clients
     * const client = await prisma.client.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientUpdateManyArgs>(args: SelectSubset<T, ClientUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients and returns the data updated in the database.
     * @param {ClientUpdateManyAndReturnArgs} args - Arguments to update many Clients.
     * @example
     * // Update many Clients
     * const client = await prisma.client.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clients and only return the `id`
     * const clientWithIdOnly = await prisma.client.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClientUpdateManyAndReturnArgs>(args: SelectSubset<T, ClientUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Client.
     * @param {ClientUpsertArgs} args - Arguments to update or create a Client.
     * @example
     * // Update or create a Client
     * const client = await prisma.client.upsert({
     *   create: {
     *     // ... data to create a Client
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Client we want to update
     *   }
     * })
     */
    upsert<T extends ClientUpsertArgs>(args: SelectSubset<T, ClientUpsertArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCountArgs} args - Arguments to filter Clients to count.
     * @example
     * // Count the number of Clients
     * const count = await prisma.client.count({
     *   where: {
     *     // ... the filter for the Clients we want to count
     *   }
     * })
    **/
    count<T extends ClientCountArgs>(
      args?: Subset<T, ClientCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientAggregateArgs>(args: Subset<T, ClientAggregateArgs>): Prisma.PrismaPromise<GetClientAggregateType<T>>

    /**
     * Group by Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientGroupByArgs['orderBy'] }
        : { orderBy?: ClientGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Client model
   */
  readonly fields: ClientFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Client.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    stores<T extends Client$storesArgs<ExtArgs> = {}>(args?: Subset<T, Client$storesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    accountManager<T extends Client$accountManagerArgs<ExtArgs> = {}>(args?: Subset<T, Client$accountManagerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    riderEarnings<T extends Client$riderEarningsArgs<ExtArgs> = {}>(args?: Subset<T, Client$riderEarningsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Client model
   */
  interface ClientFieldRefs {
    readonly id: FieldRef<"Client", 'String'>
    readonly name: FieldRef<"Client", 'String'>
    readonly clientCode: FieldRef<"Client", 'String'>
    readonly clientType: FieldRef<"Client", 'String'>
    readonly industrySector: FieldRef<"Client", 'String'>
    readonly businessCategory: FieldRef<"Client", 'String'>
    readonly primaryContactPerson: FieldRef<"Client", 'String'>
    readonly designation: FieldRef<"Client", 'String'>
    readonly email: FieldRef<"Client", 'String'>
    readonly secondaryEmail: FieldRef<"Client", 'String'>
    readonly phone: FieldRef<"Client", 'String'>
    readonly secondaryPhone: FieldRef<"Client", 'String'>
    readonly city: FieldRef<"Client", 'String'>
    readonly state: FieldRef<"Client", 'String'>
    readonly pinCode: FieldRef<"Client", 'String'>
    readonly registrationNumber: FieldRef<"Client", 'String'>
    readonly panNumber: FieldRef<"Client", 'String'>
    readonly gstNumber: FieldRef<"Client", 'String'>
    readonly evPortfolio: FieldRef<"Client", 'String'>
    readonly fleetSize: FieldRef<"Client", 'Int'>
    readonly hasChargingInfra: FieldRef<"Client", 'Boolean'>
    readonly chargingInfraDetails: FieldRef<"Client", 'String'>
    readonly batteryTechPreference: FieldRef<"Client", 'String'>
    readonly serviceRequirements: FieldRef<"Client", 'String'>
    readonly paymentTerms: FieldRef<"Client", 'String'>
    readonly preferredPaymentMethod: FieldRef<"Client", 'String'>
    readonly taxCategory: FieldRef<"Client", 'String'>
    readonly discountCategory: FieldRef<"Client", 'String'>
    readonly baseOrderRate: FieldRef<"Client", 'Float'>
    readonly rateEffectiveDate: FieldRef<"Client", 'DateTime'>
    readonly rateType: FieldRef<"Client", 'String'>
    readonly minimumRate: FieldRef<"Client", 'Float'>
    readonly maximumRate: FieldRef<"Client", 'Float'>
    readonly bulkBonusEnabled: FieldRef<"Client", 'Boolean'>
    readonly bulkOrdersThreshold: FieldRef<"Client", 'Int'>
    readonly bulkBonusAmount: FieldRef<"Client", 'Float'>
    readonly bulkResetPeriod: FieldRef<"Client", 'String'>
    readonly weeklyBonusEnabled: FieldRef<"Client", 'Boolean'>
    readonly weeklyOrderTarget: FieldRef<"Client", 'Int'>
    readonly weeklyBonusAmount: FieldRef<"Client", 'Float'>
    readonly performanceMultiplierEnabled: FieldRef<"Client", 'Boolean'>
    readonly topPerformerRate: FieldRef<"Client", 'Float'>
    readonly performanceCriteria: FieldRef<"Client", 'String'>
    readonly paymentCycle: FieldRef<"Client", 'String'>
    readonly paymentMethods: FieldRef<"Client", 'String'>
    readonly minimumPayout: FieldRef<"Client", 'Float'>
    readonly payoutDay: FieldRef<"Client", 'String'>
    readonly clientStatus: FieldRef<"Client", 'String'>
    readonly acquisitionDate: FieldRef<"Client", 'DateTime'>
    readonly accountManagerId: FieldRef<"Client", 'String'>
    readonly clientPriority: FieldRef<"Client", 'String'>
    readonly relationshipType: FieldRef<"Client", 'String'>
    readonly createdAt: FieldRef<"Client", 'DateTime'>
    readonly updatedAt: FieldRef<"Client", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Client findUnique
   */
  export type ClientFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findUniqueOrThrow
   */
  export type ClientFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findFirst
   */
  export type ClientFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findFirstOrThrow
   */
  export type ClientFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findMany
   */
  export type ClientFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Clients to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client create
   */
  export type ClientCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to create a Client.
     */
    data: XOR<ClientCreateInput, ClientUncheckedCreateInput>
  }

  /**
   * Client createMany
   */
  export type ClientCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Client createManyAndReturn
   */
  export type ClientCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Client update
   */
  export type ClientUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to update a Client.
     */
    data: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
    /**
     * Choose, which Client to update.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client updateMany
   */
  export type ClientUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clients.
     */
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyInput>
    /**
     * Filter which Clients to update
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to update.
     */
    limit?: number
  }

  /**
   * Client updateManyAndReturn
   */
  export type ClientUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * The data used to update Clients.
     */
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyInput>
    /**
     * Filter which Clients to update
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Client upsert
   */
  export type ClientUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The filter to search for the Client to update in case it exists.
     */
    where: ClientWhereUniqueInput
    /**
     * In case the Client found by the `where` argument doesn't exist, create a new Client with this data.
     */
    create: XOR<ClientCreateInput, ClientUncheckedCreateInput>
    /**
     * In case the Client was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
  }

  /**
   * Client delete
   */
  export type ClientDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter which Client to delete.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client deleteMany
   */
  export type ClientDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clients to delete
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to delete.
     */
    limit?: number
  }

  /**
   * Client.stores
   */
  export type Client$storesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    where?: StoreWhereInput
    orderBy?: StoreOrderByWithRelationInput | StoreOrderByWithRelationInput[]
    cursor?: StoreWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreScalarFieldEnum | StoreScalarFieldEnum[]
  }

  /**
   * Client.accountManager
   */
  export type Client$accountManagerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Client.riderEarnings
   */
  export type Client$riderEarningsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
    where?: RiderEarningWhereInput
    orderBy?: RiderEarningOrderByWithRelationInput | RiderEarningOrderByWithRelationInput[]
    cursor?: RiderEarningWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RiderEarningScalarFieldEnum | RiderEarningScalarFieldEnum[]
  }

  /**
   * Client without action
   */
  export type ClientDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
  }


  /**
   * Model Store
   */

  export type AggregateStore = {
    _count: StoreCountAggregateOutputType | null
    _avg: StoreAvgAggregateOutputType | null
    _sum: StoreSumAggregateOutputType | null
    _min: StoreMinAggregateOutputType | null
    _max: StoreMaxAggregateOutputType | null
  }

  export type StoreAvgAggregateOutputType = {
    gpsLatitude: number | null
    gpsLongitude: number | null
    currentOfferRate: number | null
    averageOrdersPerDay: number | null
    averageDeliveryDistance: number | null
    monthlyOrderVolume: number | null
    riderRating: number | null
    averagePickupTime: number | null
  }

  export type StoreSumAggregateOutputType = {
    gpsLatitude: number | null
    gpsLongitude: number | null
    currentOfferRate: number | null
    averageOrdersPerDay: number | null
    averageDeliveryDistance: number | null
    monthlyOrderVolume: number | null
    riderRating: number | null
    averagePickupTime: number | null
  }

  export type StoreMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    storeName: string | null
    storeCode: string | null
    storeType: string | null
    brandFranchise: string | null
    completeAddress: string | null
    city: string | null
    state: string | null
    country: string | null
    pinCode: string | null
    landmark: string | null
    gpsLatitude: number | null
    gpsLongitude: number | null
    zoneRegion: string | null
    storeManagerName: string | null
    contactNumber: string | null
    emailAddress: string | null
    whatsappNumber: string | null
    storeStatus: string | null
    currentOfferRate: number | null
    offerStartDate: Date | null
    offerEndDate: Date | null
    offerType: string | null
    offerReason: string | null
    isOfferActive: boolean | null
    busyLevel: string | null
    averageOrdersPerDay: number | null
    peakHours: string | null
    busyDays: string | null
    orderDifficultyLevel: string | null
    averageDeliveryDistance: number | null
    monthlyOrderVolume: number | null
    riderRating: number | null
    averagePickupTime: number | null
    storePriority: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StoreMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    storeName: string | null
    storeCode: string | null
    storeType: string | null
    brandFranchise: string | null
    completeAddress: string | null
    city: string | null
    state: string | null
    country: string | null
    pinCode: string | null
    landmark: string | null
    gpsLatitude: number | null
    gpsLongitude: number | null
    zoneRegion: string | null
    storeManagerName: string | null
    contactNumber: string | null
    emailAddress: string | null
    whatsappNumber: string | null
    storeStatus: string | null
    currentOfferRate: number | null
    offerStartDate: Date | null
    offerEndDate: Date | null
    offerType: string | null
    offerReason: string | null
    isOfferActive: boolean | null
    busyLevel: string | null
    averageOrdersPerDay: number | null
    peakHours: string | null
    busyDays: string | null
    orderDifficultyLevel: string | null
    averageDeliveryDistance: number | null
    monthlyOrderVolume: number | null
    riderRating: number | null
    averagePickupTime: number | null
    storePriority: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StoreCountAggregateOutputType = {
    id: number
    clientId: number
    storeName: number
    storeCode: number
    storeType: number
    brandFranchise: number
    completeAddress: number
    city: number
    state: number
    country: number
    pinCode: number
    landmark: number
    gpsLatitude: number
    gpsLongitude: number
    zoneRegion: number
    storeManagerName: number
    contactNumber: number
    emailAddress: number
    whatsappNumber: number
    storeStatus: number
    currentOfferRate: number
    offerStartDate: number
    offerEndDate: number
    offerType: number
    offerReason: number
    isOfferActive: number
    busyLevel: number
    averageOrdersPerDay: number
    peakHours: number
    busyDays: number
    orderDifficultyLevel: number
    averageDeliveryDistance: number
    monthlyOrderVolume: number
    riderRating: number
    averagePickupTime: number
    storePriority: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type StoreAvgAggregateInputType = {
    gpsLatitude?: true
    gpsLongitude?: true
    currentOfferRate?: true
    averageOrdersPerDay?: true
    averageDeliveryDistance?: true
    monthlyOrderVolume?: true
    riderRating?: true
    averagePickupTime?: true
  }

  export type StoreSumAggregateInputType = {
    gpsLatitude?: true
    gpsLongitude?: true
    currentOfferRate?: true
    averageOrdersPerDay?: true
    averageDeliveryDistance?: true
    monthlyOrderVolume?: true
    riderRating?: true
    averagePickupTime?: true
  }

  export type StoreMinAggregateInputType = {
    id?: true
    clientId?: true
    storeName?: true
    storeCode?: true
    storeType?: true
    brandFranchise?: true
    completeAddress?: true
    city?: true
    state?: true
    country?: true
    pinCode?: true
    landmark?: true
    gpsLatitude?: true
    gpsLongitude?: true
    zoneRegion?: true
    storeManagerName?: true
    contactNumber?: true
    emailAddress?: true
    whatsappNumber?: true
    storeStatus?: true
    currentOfferRate?: true
    offerStartDate?: true
    offerEndDate?: true
    offerType?: true
    offerReason?: true
    isOfferActive?: true
    busyLevel?: true
    averageOrdersPerDay?: true
    peakHours?: true
    busyDays?: true
    orderDifficultyLevel?: true
    averageDeliveryDistance?: true
    monthlyOrderVolume?: true
    riderRating?: true
    averagePickupTime?: true
    storePriority?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StoreMaxAggregateInputType = {
    id?: true
    clientId?: true
    storeName?: true
    storeCode?: true
    storeType?: true
    brandFranchise?: true
    completeAddress?: true
    city?: true
    state?: true
    country?: true
    pinCode?: true
    landmark?: true
    gpsLatitude?: true
    gpsLongitude?: true
    zoneRegion?: true
    storeManagerName?: true
    contactNumber?: true
    emailAddress?: true
    whatsappNumber?: true
    storeStatus?: true
    currentOfferRate?: true
    offerStartDate?: true
    offerEndDate?: true
    offerType?: true
    offerReason?: true
    isOfferActive?: true
    busyLevel?: true
    averageOrdersPerDay?: true
    peakHours?: true
    busyDays?: true
    orderDifficultyLevel?: true
    averageDeliveryDistance?: true
    monthlyOrderVolume?: true
    riderRating?: true
    averagePickupTime?: true
    storePriority?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StoreCountAggregateInputType = {
    id?: true
    clientId?: true
    storeName?: true
    storeCode?: true
    storeType?: true
    brandFranchise?: true
    completeAddress?: true
    city?: true
    state?: true
    country?: true
    pinCode?: true
    landmark?: true
    gpsLatitude?: true
    gpsLongitude?: true
    zoneRegion?: true
    storeManagerName?: true
    contactNumber?: true
    emailAddress?: true
    whatsappNumber?: true
    storeStatus?: true
    currentOfferRate?: true
    offerStartDate?: true
    offerEndDate?: true
    offerType?: true
    offerReason?: true
    isOfferActive?: true
    busyLevel?: true
    averageOrdersPerDay?: true
    peakHours?: true
    busyDays?: true
    orderDifficultyLevel?: true
    averageDeliveryDistance?: true
    monthlyOrderVolume?: true
    riderRating?: true
    averagePickupTime?: true
    storePriority?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type StoreAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Store to aggregate.
     */
    where?: StoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stores to fetch.
     */
    orderBy?: StoreOrderByWithRelationInput | StoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Stores
    **/
    _count?: true | StoreCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StoreAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StoreSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StoreMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StoreMaxAggregateInputType
  }

  export type GetStoreAggregateType<T extends StoreAggregateArgs> = {
        [P in keyof T & keyof AggregateStore]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStore[P]>
      : GetScalarType<T[P], AggregateStore[P]>
  }




  export type StoreGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreWhereInput
    orderBy?: StoreOrderByWithAggregationInput | StoreOrderByWithAggregationInput[]
    by: StoreScalarFieldEnum[] | StoreScalarFieldEnum
    having?: StoreScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StoreCountAggregateInputType | true
    _avg?: StoreAvgAggregateInputType
    _sum?: StoreSumAggregateInputType
    _min?: StoreMinAggregateInputType
    _max?: StoreMaxAggregateInputType
  }

  export type StoreGroupByOutputType = {
    id: string
    clientId: string
    storeName: string
    storeCode: string
    storeType: string
    brandFranchise: string | null
    completeAddress: string
    city: string
    state: string
    country: string
    pinCode: string
    landmark: string | null
    gpsLatitude: number | null
    gpsLongitude: number | null
    zoneRegion: string | null
    storeManagerName: string | null
    contactNumber: string | null
    emailAddress: string | null
    whatsappNumber: string | null
    storeStatus: string
    currentOfferRate: number
    offerStartDate: Date | null
    offerEndDate: Date | null
    offerType: string
    offerReason: string | null
    isOfferActive: boolean
    busyLevel: string
    averageOrdersPerDay: number
    peakHours: string | null
    busyDays: string | null
    orderDifficultyLevel: string
    averageDeliveryDistance: number
    monthlyOrderVolume: number
    riderRating: number
    averagePickupTime: number
    storePriority: string
    createdAt: Date
    updatedAt: Date
    _count: StoreCountAggregateOutputType | null
    _avg: StoreAvgAggregateOutputType | null
    _sum: StoreSumAggregateOutputType | null
    _min: StoreMinAggregateOutputType | null
    _max: StoreMaxAggregateOutputType | null
  }

  type GetStoreGroupByPayload<T extends StoreGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StoreGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StoreGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StoreGroupByOutputType[P]>
            : GetScalarType<T[P], StoreGroupByOutputType[P]>
        }
      >
    >


  export type StoreSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    storeName?: boolean
    storeCode?: boolean
    storeType?: boolean
    brandFranchise?: boolean
    completeAddress?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    pinCode?: boolean
    landmark?: boolean
    gpsLatitude?: boolean
    gpsLongitude?: boolean
    zoneRegion?: boolean
    storeManagerName?: boolean
    contactNumber?: boolean
    emailAddress?: boolean
    whatsappNumber?: boolean
    storeStatus?: boolean
    currentOfferRate?: boolean
    offerStartDate?: boolean
    offerEndDate?: boolean
    offerType?: boolean
    offerReason?: boolean
    isOfferActive?: boolean
    busyLevel?: boolean
    averageOrdersPerDay?: boolean
    peakHours?: boolean
    busyDays?: boolean
    orderDifficultyLevel?: boolean
    averageDeliveryDistance?: boolean
    monthlyOrderVolume?: boolean
    riderRating?: boolean
    averagePickupTime?: boolean
    storePriority?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    riderEarnings?: boolean | Store$riderEarningsArgs<ExtArgs>
    _count?: boolean | StoreCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["store"]>

  export type StoreSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    storeName?: boolean
    storeCode?: boolean
    storeType?: boolean
    brandFranchise?: boolean
    completeAddress?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    pinCode?: boolean
    landmark?: boolean
    gpsLatitude?: boolean
    gpsLongitude?: boolean
    zoneRegion?: boolean
    storeManagerName?: boolean
    contactNumber?: boolean
    emailAddress?: boolean
    whatsappNumber?: boolean
    storeStatus?: boolean
    currentOfferRate?: boolean
    offerStartDate?: boolean
    offerEndDate?: boolean
    offerType?: boolean
    offerReason?: boolean
    isOfferActive?: boolean
    busyLevel?: boolean
    averageOrdersPerDay?: boolean
    peakHours?: boolean
    busyDays?: boolean
    orderDifficultyLevel?: boolean
    averageDeliveryDistance?: boolean
    monthlyOrderVolume?: boolean
    riderRating?: boolean
    averagePickupTime?: boolean
    storePriority?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["store"]>

  export type StoreSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    storeName?: boolean
    storeCode?: boolean
    storeType?: boolean
    brandFranchise?: boolean
    completeAddress?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    pinCode?: boolean
    landmark?: boolean
    gpsLatitude?: boolean
    gpsLongitude?: boolean
    zoneRegion?: boolean
    storeManagerName?: boolean
    contactNumber?: boolean
    emailAddress?: boolean
    whatsappNumber?: boolean
    storeStatus?: boolean
    currentOfferRate?: boolean
    offerStartDate?: boolean
    offerEndDate?: boolean
    offerType?: boolean
    offerReason?: boolean
    isOfferActive?: boolean
    busyLevel?: boolean
    averageOrdersPerDay?: boolean
    peakHours?: boolean
    busyDays?: boolean
    orderDifficultyLevel?: boolean
    averageDeliveryDistance?: boolean
    monthlyOrderVolume?: boolean
    riderRating?: boolean
    averagePickupTime?: boolean
    storePriority?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["store"]>

  export type StoreSelectScalar = {
    id?: boolean
    clientId?: boolean
    storeName?: boolean
    storeCode?: boolean
    storeType?: boolean
    brandFranchise?: boolean
    completeAddress?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    pinCode?: boolean
    landmark?: boolean
    gpsLatitude?: boolean
    gpsLongitude?: boolean
    zoneRegion?: boolean
    storeManagerName?: boolean
    contactNumber?: boolean
    emailAddress?: boolean
    whatsappNumber?: boolean
    storeStatus?: boolean
    currentOfferRate?: boolean
    offerStartDate?: boolean
    offerEndDate?: boolean
    offerType?: boolean
    offerReason?: boolean
    isOfferActive?: boolean
    busyLevel?: boolean
    averageOrdersPerDay?: boolean
    peakHours?: boolean
    busyDays?: boolean
    orderDifficultyLevel?: boolean
    averageDeliveryDistance?: boolean
    monthlyOrderVolume?: boolean
    riderRating?: boolean
    averagePickupTime?: boolean
    storePriority?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type StoreOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "storeName" | "storeCode" | "storeType" | "brandFranchise" | "completeAddress" | "city" | "state" | "country" | "pinCode" | "landmark" | "gpsLatitude" | "gpsLongitude" | "zoneRegion" | "storeManagerName" | "contactNumber" | "emailAddress" | "whatsappNumber" | "storeStatus" | "currentOfferRate" | "offerStartDate" | "offerEndDate" | "offerType" | "offerReason" | "isOfferActive" | "busyLevel" | "averageOrdersPerDay" | "peakHours" | "busyDays" | "orderDifficultyLevel" | "averageDeliveryDistance" | "monthlyOrderVolume" | "riderRating" | "averagePickupTime" | "storePriority" | "createdAt" | "updatedAt", ExtArgs["result"]["store"]>
  export type StoreInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    riderEarnings?: boolean | Store$riderEarningsArgs<ExtArgs>
    _count?: boolean | StoreCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StoreIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }
  export type StoreIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }

  export type $StorePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Store"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      riderEarnings: Prisma.$RiderEarningPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      storeName: string
      storeCode: string
      storeType: string
      brandFranchise: string | null
      completeAddress: string
      city: string
      state: string
      country: string
      pinCode: string
      landmark: string | null
      gpsLatitude: number | null
      gpsLongitude: number | null
      zoneRegion: string | null
      storeManagerName: string | null
      contactNumber: string | null
      emailAddress: string | null
      whatsappNumber: string | null
      storeStatus: string
      currentOfferRate: number
      offerStartDate: Date | null
      offerEndDate: Date | null
      offerType: string
      offerReason: string | null
      isOfferActive: boolean
      busyLevel: string
      averageOrdersPerDay: number
      peakHours: string | null
      busyDays: string | null
      orderDifficultyLevel: string
      averageDeliveryDistance: number
      monthlyOrderVolume: number
      riderRating: number
      averagePickupTime: number
      storePriority: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["store"]>
    composites: {}
  }

  type StoreGetPayload<S extends boolean | null | undefined | StoreDefaultArgs> = $Result.GetResult<Prisma.$StorePayload, S>

  type StoreCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StoreFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StoreCountAggregateInputType | true
    }

  export interface StoreDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Store'], meta: { name: 'Store' } }
    /**
     * Find zero or one Store that matches the filter.
     * @param {StoreFindUniqueArgs} args - Arguments to find a Store
     * @example
     * // Get one Store
     * const store = await prisma.store.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StoreFindUniqueArgs>(args: SelectSubset<T, StoreFindUniqueArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Store that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StoreFindUniqueOrThrowArgs} args - Arguments to find a Store
     * @example
     * // Get one Store
     * const store = await prisma.store.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StoreFindUniqueOrThrowArgs>(args: SelectSubset<T, StoreFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Store that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreFindFirstArgs} args - Arguments to find a Store
     * @example
     * // Get one Store
     * const store = await prisma.store.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StoreFindFirstArgs>(args?: SelectSubset<T, StoreFindFirstArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Store that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreFindFirstOrThrowArgs} args - Arguments to find a Store
     * @example
     * // Get one Store
     * const store = await prisma.store.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StoreFindFirstOrThrowArgs>(args?: SelectSubset<T, StoreFindFirstOrThrowArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stores
     * const stores = await prisma.store.findMany()
     * 
     * // Get first 10 Stores
     * const stores = await prisma.store.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const storeWithIdOnly = await prisma.store.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StoreFindManyArgs>(args?: SelectSubset<T, StoreFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Store.
     * @param {StoreCreateArgs} args - Arguments to create a Store.
     * @example
     * // Create one Store
     * const Store = await prisma.store.create({
     *   data: {
     *     // ... data to create a Store
     *   }
     * })
     * 
     */
    create<T extends StoreCreateArgs>(args: SelectSubset<T, StoreCreateArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stores.
     * @param {StoreCreateManyArgs} args - Arguments to create many Stores.
     * @example
     * // Create many Stores
     * const store = await prisma.store.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StoreCreateManyArgs>(args?: SelectSubset<T, StoreCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stores and returns the data saved in the database.
     * @param {StoreCreateManyAndReturnArgs} args - Arguments to create many Stores.
     * @example
     * // Create many Stores
     * const store = await prisma.store.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stores and only return the `id`
     * const storeWithIdOnly = await prisma.store.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StoreCreateManyAndReturnArgs>(args?: SelectSubset<T, StoreCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Store.
     * @param {StoreDeleteArgs} args - Arguments to delete one Store.
     * @example
     * // Delete one Store
     * const Store = await prisma.store.delete({
     *   where: {
     *     // ... filter to delete one Store
     *   }
     * })
     * 
     */
    delete<T extends StoreDeleteArgs>(args: SelectSubset<T, StoreDeleteArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Store.
     * @param {StoreUpdateArgs} args - Arguments to update one Store.
     * @example
     * // Update one Store
     * const store = await prisma.store.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StoreUpdateArgs>(args: SelectSubset<T, StoreUpdateArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stores.
     * @param {StoreDeleteManyArgs} args - Arguments to filter Stores to delete.
     * @example
     * // Delete a few Stores
     * const { count } = await prisma.store.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StoreDeleteManyArgs>(args?: SelectSubset<T, StoreDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stores
     * const store = await prisma.store.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StoreUpdateManyArgs>(args: SelectSubset<T, StoreUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stores and returns the data updated in the database.
     * @param {StoreUpdateManyAndReturnArgs} args - Arguments to update many Stores.
     * @example
     * // Update many Stores
     * const store = await prisma.store.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stores and only return the `id`
     * const storeWithIdOnly = await prisma.store.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StoreUpdateManyAndReturnArgs>(args: SelectSubset<T, StoreUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Store.
     * @param {StoreUpsertArgs} args - Arguments to update or create a Store.
     * @example
     * // Update or create a Store
     * const store = await prisma.store.upsert({
     *   create: {
     *     // ... data to create a Store
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Store we want to update
     *   }
     * })
     */
    upsert<T extends StoreUpsertArgs>(args: SelectSubset<T, StoreUpsertArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreCountArgs} args - Arguments to filter Stores to count.
     * @example
     * // Count the number of Stores
     * const count = await prisma.store.count({
     *   where: {
     *     // ... the filter for the Stores we want to count
     *   }
     * })
    **/
    count<T extends StoreCountArgs>(
      args?: Subset<T, StoreCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StoreCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Store.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StoreAggregateArgs>(args: Subset<T, StoreAggregateArgs>): Prisma.PrismaPromise<GetStoreAggregateType<T>>

    /**
     * Group by Store.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StoreGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StoreGroupByArgs['orderBy'] }
        : { orderBy?: StoreGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StoreGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoreGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Store model
   */
  readonly fields: StoreFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Store.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StoreClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    riderEarnings<T extends Store$riderEarningsArgs<ExtArgs> = {}>(args?: Subset<T, Store$riderEarningsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Store model
   */
  interface StoreFieldRefs {
    readonly id: FieldRef<"Store", 'String'>
    readonly clientId: FieldRef<"Store", 'String'>
    readonly storeName: FieldRef<"Store", 'String'>
    readonly storeCode: FieldRef<"Store", 'String'>
    readonly storeType: FieldRef<"Store", 'String'>
    readonly brandFranchise: FieldRef<"Store", 'String'>
    readonly completeAddress: FieldRef<"Store", 'String'>
    readonly city: FieldRef<"Store", 'String'>
    readonly state: FieldRef<"Store", 'String'>
    readonly country: FieldRef<"Store", 'String'>
    readonly pinCode: FieldRef<"Store", 'String'>
    readonly landmark: FieldRef<"Store", 'String'>
    readonly gpsLatitude: FieldRef<"Store", 'Float'>
    readonly gpsLongitude: FieldRef<"Store", 'Float'>
    readonly zoneRegion: FieldRef<"Store", 'String'>
    readonly storeManagerName: FieldRef<"Store", 'String'>
    readonly contactNumber: FieldRef<"Store", 'String'>
    readonly emailAddress: FieldRef<"Store", 'String'>
    readonly whatsappNumber: FieldRef<"Store", 'String'>
    readonly storeStatus: FieldRef<"Store", 'String'>
    readonly currentOfferRate: FieldRef<"Store", 'Float'>
    readonly offerStartDate: FieldRef<"Store", 'DateTime'>
    readonly offerEndDate: FieldRef<"Store", 'DateTime'>
    readonly offerType: FieldRef<"Store", 'String'>
    readonly offerReason: FieldRef<"Store", 'String'>
    readonly isOfferActive: FieldRef<"Store", 'Boolean'>
    readonly busyLevel: FieldRef<"Store", 'String'>
    readonly averageOrdersPerDay: FieldRef<"Store", 'Int'>
    readonly peakHours: FieldRef<"Store", 'String'>
    readonly busyDays: FieldRef<"Store", 'String'>
    readonly orderDifficultyLevel: FieldRef<"Store", 'String'>
    readonly averageDeliveryDistance: FieldRef<"Store", 'Float'>
    readonly monthlyOrderVolume: FieldRef<"Store", 'Int'>
    readonly riderRating: FieldRef<"Store", 'Float'>
    readonly averagePickupTime: FieldRef<"Store", 'Int'>
    readonly storePriority: FieldRef<"Store", 'String'>
    readonly createdAt: FieldRef<"Store", 'DateTime'>
    readonly updatedAt: FieldRef<"Store", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Store findUnique
   */
  export type StoreFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter, which Store to fetch.
     */
    where: StoreWhereUniqueInput
  }

  /**
   * Store findUniqueOrThrow
   */
  export type StoreFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter, which Store to fetch.
     */
    where: StoreWhereUniqueInput
  }

  /**
   * Store findFirst
   */
  export type StoreFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter, which Store to fetch.
     */
    where?: StoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stores to fetch.
     */
    orderBy?: StoreOrderByWithRelationInput | StoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stores.
     */
    cursor?: StoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stores.
     */
    distinct?: StoreScalarFieldEnum | StoreScalarFieldEnum[]
  }

  /**
   * Store findFirstOrThrow
   */
  export type StoreFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter, which Store to fetch.
     */
    where?: StoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stores to fetch.
     */
    orderBy?: StoreOrderByWithRelationInput | StoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stores.
     */
    cursor?: StoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stores.
     */
    distinct?: StoreScalarFieldEnum | StoreScalarFieldEnum[]
  }

  /**
   * Store findMany
   */
  export type StoreFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter, which Stores to fetch.
     */
    where?: StoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stores to fetch.
     */
    orderBy?: StoreOrderByWithRelationInput | StoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Stores.
     */
    cursor?: StoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stores.
     */
    skip?: number
    distinct?: StoreScalarFieldEnum | StoreScalarFieldEnum[]
  }

  /**
   * Store create
   */
  export type StoreCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * The data needed to create a Store.
     */
    data: XOR<StoreCreateInput, StoreUncheckedCreateInput>
  }

  /**
   * Store createMany
   */
  export type StoreCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Stores.
     */
    data: StoreCreateManyInput | StoreCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Store createManyAndReturn
   */
  export type StoreCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * The data used to create many Stores.
     */
    data: StoreCreateManyInput | StoreCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Store update
   */
  export type StoreUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * The data needed to update a Store.
     */
    data: XOR<StoreUpdateInput, StoreUncheckedUpdateInput>
    /**
     * Choose, which Store to update.
     */
    where: StoreWhereUniqueInput
  }

  /**
   * Store updateMany
   */
  export type StoreUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Stores.
     */
    data: XOR<StoreUpdateManyMutationInput, StoreUncheckedUpdateManyInput>
    /**
     * Filter which Stores to update
     */
    where?: StoreWhereInput
    /**
     * Limit how many Stores to update.
     */
    limit?: number
  }

  /**
   * Store updateManyAndReturn
   */
  export type StoreUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * The data used to update Stores.
     */
    data: XOR<StoreUpdateManyMutationInput, StoreUncheckedUpdateManyInput>
    /**
     * Filter which Stores to update
     */
    where?: StoreWhereInput
    /**
     * Limit how many Stores to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Store upsert
   */
  export type StoreUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * The filter to search for the Store to update in case it exists.
     */
    where: StoreWhereUniqueInput
    /**
     * In case the Store found by the `where` argument doesn't exist, create a new Store with this data.
     */
    create: XOR<StoreCreateInput, StoreUncheckedCreateInput>
    /**
     * In case the Store was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StoreUpdateInput, StoreUncheckedUpdateInput>
  }

  /**
   * Store delete
   */
  export type StoreDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter which Store to delete.
     */
    where: StoreWhereUniqueInput
  }

  /**
   * Store deleteMany
   */
  export type StoreDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Stores to delete
     */
    where?: StoreWhereInput
    /**
     * Limit how many Stores to delete.
     */
    limit?: number
  }

  /**
   * Store.riderEarnings
   */
  export type Store$riderEarningsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
    where?: RiderEarningWhereInput
    orderBy?: RiderEarningOrderByWithRelationInput | RiderEarningOrderByWithRelationInput[]
    cursor?: RiderEarningWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RiderEarningScalarFieldEnum | RiderEarningScalarFieldEnum[]
  }

  /**
   * Store without action
   */
  export type StoreDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Store
     */
    omit?: StoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
  }


  /**
   * Model RiderEarning
   */

  export type AggregateRiderEarning = {
    _count: RiderEarningCountAggregateOutputType | null
    _avg: RiderEarningAvgAggregateOutputType | null
    _sum: RiderEarningSumAggregateOutputType | null
    _min: RiderEarningMinAggregateOutputType | null
    _max: RiderEarningMaxAggregateOutputType | null
  }

  export type RiderEarningAvgAggregateOutputType = {
    baseRate: number | null
    storeOfferRate: number | null
    totalRate: number | null
    bulkOrderBonus: number | null
    performanceBonus: number | null
    weeklyTargetBonus: number | null
    specialEventBonus: number | null
    finalEarning: number | null
    deliveryTime: number | null
    riderRating: number | null
    distance: number | null
  }

  export type RiderEarningSumAggregateOutputType = {
    baseRate: number | null
    storeOfferRate: number | null
    totalRate: number | null
    bulkOrderBonus: number | null
    performanceBonus: number | null
    weeklyTargetBonus: number | null
    specialEventBonus: number | null
    finalEarning: number | null
    deliveryTime: number | null
    riderRating: number | null
    distance: number | null
  }

  export type RiderEarningMinAggregateOutputType = {
    id: string | null
    riderId: string | null
    clientId: string | null
    storeId: string | null
    orderId: string | null
    baseRate: number | null
    storeOfferRate: number | null
    totalRate: number | null
    bulkOrderBonus: number | null
    performanceBonus: number | null
    weeklyTargetBonus: number | null
    specialEventBonus: number | null
    finalEarning: number | null
    orderDate: Date | null
    deliveryTime: number | null
    riderRating: number | null
    distance: number | null
    bonusesApplied: string | null
    rateCalculationLog: string | null
    paymentStatus: string | null
    paymentDate: Date | null
    paymentMethod: string | null
    paymentReference: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RiderEarningMaxAggregateOutputType = {
    id: string | null
    riderId: string | null
    clientId: string | null
    storeId: string | null
    orderId: string | null
    baseRate: number | null
    storeOfferRate: number | null
    totalRate: number | null
    bulkOrderBonus: number | null
    performanceBonus: number | null
    weeklyTargetBonus: number | null
    specialEventBonus: number | null
    finalEarning: number | null
    orderDate: Date | null
    deliveryTime: number | null
    riderRating: number | null
    distance: number | null
    bonusesApplied: string | null
    rateCalculationLog: string | null
    paymentStatus: string | null
    paymentDate: Date | null
    paymentMethod: string | null
    paymentReference: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RiderEarningCountAggregateOutputType = {
    id: number
    riderId: number
    clientId: number
    storeId: number
    orderId: number
    baseRate: number
    storeOfferRate: number
    totalRate: number
    bulkOrderBonus: number
    performanceBonus: number
    weeklyTargetBonus: number
    specialEventBonus: number
    finalEarning: number
    orderDate: number
    deliveryTime: number
    riderRating: number
    distance: number
    bonusesApplied: number
    rateCalculationLog: number
    paymentStatus: number
    paymentDate: number
    paymentMethod: number
    paymentReference: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RiderEarningAvgAggregateInputType = {
    baseRate?: true
    storeOfferRate?: true
    totalRate?: true
    bulkOrderBonus?: true
    performanceBonus?: true
    weeklyTargetBonus?: true
    specialEventBonus?: true
    finalEarning?: true
    deliveryTime?: true
    riderRating?: true
    distance?: true
  }

  export type RiderEarningSumAggregateInputType = {
    baseRate?: true
    storeOfferRate?: true
    totalRate?: true
    bulkOrderBonus?: true
    performanceBonus?: true
    weeklyTargetBonus?: true
    specialEventBonus?: true
    finalEarning?: true
    deliveryTime?: true
    riderRating?: true
    distance?: true
  }

  export type RiderEarningMinAggregateInputType = {
    id?: true
    riderId?: true
    clientId?: true
    storeId?: true
    orderId?: true
    baseRate?: true
    storeOfferRate?: true
    totalRate?: true
    bulkOrderBonus?: true
    performanceBonus?: true
    weeklyTargetBonus?: true
    specialEventBonus?: true
    finalEarning?: true
    orderDate?: true
    deliveryTime?: true
    riderRating?: true
    distance?: true
    bonusesApplied?: true
    rateCalculationLog?: true
    paymentStatus?: true
    paymentDate?: true
    paymentMethod?: true
    paymentReference?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RiderEarningMaxAggregateInputType = {
    id?: true
    riderId?: true
    clientId?: true
    storeId?: true
    orderId?: true
    baseRate?: true
    storeOfferRate?: true
    totalRate?: true
    bulkOrderBonus?: true
    performanceBonus?: true
    weeklyTargetBonus?: true
    specialEventBonus?: true
    finalEarning?: true
    orderDate?: true
    deliveryTime?: true
    riderRating?: true
    distance?: true
    bonusesApplied?: true
    rateCalculationLog?: true
    paymentStatus?: true
    paymentDate?: true
    paymentMethod?: true
    paymentReference?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RiderEarningCountAggregateInputType = {
    id?: true
    riderId?: true
    clientId?: true
    storeId?: true
    orderId?: true
    baseRate?: true
    storeOfferRate?: true
    totalRate?: true
    bulkOrderBonus?: true
    performanceBonus?: true
    weeklyTargetBonus?: true
    specialEventBonus?: true
    finalEarning?: true
    orderDate?: true
    deliveryTime?: true
    riderRating?: true
    distance?: true
    bonusesApplied?: true
    rateCalculationLog?: true
    paymentStatus?: true
    paymentDate?: true
    paymentMethod?: true
    paymentReference?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RiderEarningAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RiderEarning to aggregate.
     */
    where?: RiderEarningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderEarnings to fetch.
     */
    orderBy?: RiderEarningOrderByWithRelationInput | RiderEarningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RiderEarningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderEarnings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderEarnings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RiderEarnings
    **/
    _count?: true | RiderEarningCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RiderEarningAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RiderEarningSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RiderEarningMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RiderEarningMaxAggregateInputType
  }

  export type GetRiderEarningAggregateType<T extends RiderEarningAggregateArgs> = {
        [P in keyof T & keyof AggregateRiderEarning]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRiderEarning[P]>
      : GetScalarType<T[P], AggregateRiderEarning[P]>
  }




  export type RiderEarningGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiderEarningWhereInput
    orderBy?: RiderEarningOrderByWithAggregationInput | RiderEarningOrderByWithAggregationInput[]
    by: RiderEarningScalarFieldEnum[] | RiderEarningScalarFieldEnum
    having?: RiderEarningScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RiderEarningCountAggregateInputType | true
    _avg?: RiderEarningAvgAggregateInputType
    _sum?: RiderEarningSumAggregateInputType
    _min?: RiderEarningMinAggregateInputType
    _max?: RiderEarningMaxAggregateInputType
  }

  export type RiderEarningGroupByOutputType = {
    id: string
    riderId: string
    clientId: string
    storeId: string
    orderId: string | null
    baseRate: number
    storeOfferRate: number
    totalRate: number
    bulkOrderBonus: number
    performanceBonus: number
    weeklyTargetBonus: number
    specialEventBonus: number
    finalEarning: number
    orderDate: Date
    deliveryTime: number | null
    riderRating: number | null
    distance: number | null
    bonusesApplied: string | null
    rateCalculationLog: string | null
    paymentStatus: string
    paymentDate: Date | null
    paymentMethod: string | null
    paymentReference: string | null
    createdAt: Date
    updatedAt: Date
    _count: RiderEarningCountAggregateOutputType | null
    _avg: RiderEarningAvgAggregateOutputType | null
    _sum: RiderEarningSumAggregateOutputType | null
    _min: RiderEarningMinAggregateOutputType | null
    _max: RiderEarningMaxAggregateOutputType | null
  }

  type GetRiderEarningGroupByPayload<T extends RiderEarningGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RiderEarningGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RiderEarningGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RiderEarningGroupByOutputType[P]>
            : GetScalarType<T[P], RiderEarningGroupByOutputType[P]>
        }
      >
    >


  export type RiderEarningSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    riderId?: boolean
    clientId?: boolean
    storeId?: boolean
    orderId?: boolean
    baseRate?: boolean
    storeOfferRate?: boolean
    totalRate?: boolean
    bulkOrderBonus?: boolean
    performanceBonus?: boolean
    weeklyTargetBonus?: boolean
    specialEventBonus?: boolean
    finalEarning?: boolean
    orderDate?: boolean
    deliveryTime?: boolean
    riderRating?: boolean
    distance?: boolean
    bonusesApplied?: boolean
    rateCalculationLog?: boolean
    paymentStatus?: boolean
    paymentDate?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    store?: boolean | StoreDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riderEarning"]>

  export type RiderEarningSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    riderId?: boolean
    clientId?: boolean
    storeId?: boolean
    orderId?: boolean
    baseRate?: boolean
    storeOfferRate?: boolean
    totalRate?: boolean
    bulkOrderBonus?: boolean
    performanceBonus?: boolean
    weeklyTargetBonus?: boolean
    specialEventBonus?: boolean
    finalEarning?: boolean
    orderDate?: boolean
    deliveryTime?: boolean
    riderRating?: boolean
    distance?: boolean
    bonusesApplied?: boolean
    rateCalculationLog?: boolean
    paymentStatus?: boolean
    paymentDate?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    store?: boolean | StoreDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riderEarning"]>

  export type RiderEarningSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    riderId?: boolean
    clientId?: boolean
    storeId?: boolean
    orderId?: boolean
    baseRate?: boolean
    storeOfferRate?: boolean
    totalRate?: boolean
    bulkOrderBonus?: boolean
    performanceBonus?: boolean
    weeklyTargetBonus?: boolean
    specialEventBonus?: boolean
    finalEarning?: boolean
    orderDate?: boolean
    deliveryTime?: boolean
    riderRating?: boolean
    distance?: boolean
    bonusesApplied?: boolean
    rateCalculationLog?: boolean
    paymentStatus?: boolean
    paymentDate?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    store?: boolean | StoreDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riderEarning"]>

  export type RiderEarningSelectScalar = {
    id?: boolean
    riderId?: boolean
    clientId?: boolean
    storeId?: boolean
    orderId?: boolean
    baseRate?: boolean
    storeOfferRate?: boolean
    totalRate?: boolean
    bulkOrderBonus?: boolean
    performanceBonus?: boolean
    weeklyTargetBonus?: boolean
    specialEventBonus?: boolean
    finalEarning?: boolean
    orderDate?: boolean
    deliveryTime?: boolean
    riderRating?: boolean
    distance?: boolean
    bonusesApplied?: boolean
    rateCalculationLog?: boolean
    paymentStatus?: boolean
    paymentDate?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RiderEarningOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "riderId" | "clientId" | "storeId" | "orderId" | "baseRate" | "storeOfferRate" | "totalRate" | "bulkOrderBonus" | "performanceBonus" | "weeklyTargetBonus" | "specialEventBonus" | "finalEarning" | "orderDate" | "deliveryTime" | "riderRating" | "distance" | "bonusesApplied" | "rateCalculationLog" | "paymentStatus" | "paymentDate" | "paymentMethod" | "paymentReference" | "createdAt" | "updatedAt", ExtArgs["result"]["riderEarning"]>
  export type RiderEarningInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    store?: boolean | StoreDefaultArgs<ExtArgs>
  }
  export type RiderEarningIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    store?: boolean | StoreDefaultArgs<ExtArgs>
  }
  export type RiderEarningIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    store?: boolean | StoreDefaultArgs<ExtArgs>
  }

  export type $RiderEarningPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RiderEarning"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      store: Prisma.$StorePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      riderId: string
      clientId: string
      storeId: string
      orderId: string | null
      baseRate: number
      storeOfferRate: number
      totalRate: number
      bulkOrderBonus: number
      performanceBonus: number
      weeklyTargetBonus: number
      specialEventBonus: number
      finalEarning: number
      orderDate: Date
      deliveryTime: number | null
      riderRating: number | null
      distance: number | null
      bonusesApplied: string | null
      rateCalculationLog: string | null
      paymentStatus: string
      paymentDate: Date | null
      paymentMethod: string | null
      paymentReference: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["riderEarning"]>
    composites: {}
  }

  type RiderEarningGetPayload<S extends boolean | null | undefined | RiderEarningDefaultArgs> = $Result.GetResult<Prisma.$RiderEarningPayload, S>

  type RiderEarningCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RiderEarningFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RiderEarningCountAggregateInputType | true
    }

  export interface RiderEarningDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RiderEarning'], meta: { name: 'RiderEarning' } }
    /**
     * Find zero or one RiderEarning that matches the filter.
     * @param {RiderEarningFindUniqueArgs} args - Arguments to find a RiderEarning
     * @example
     * // Get one RiderEarning
     * const riderEarning = await prisma.riderEarning.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RiderEarningFindUniqueArgs>(args: SelectSubset<T, RiderEarningFindUniqueArgs<ExtArgs>>): Prisma__RiderEarningClient<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RiderEarning that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RiderEarningFindUniqueOrThrowArgs} args - Arguments to find a RiderEarning
     * @example
     * // Get one RiderEarning
     * const riderEarning = await prisma.riderEarning.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RiderEarningFindUniqueOrThrowArgs>(args: SelectSubset<T, RiderEarningFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RiderEarningClient<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RiderEarning that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderEarningFindFirstArgs} args - Arguments to find a RiderEarning
     * @example
     * // Get one RiderEarning
     * const riderEarning = await prisma.riderEarning.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RiderEarningFindFirstArgs>(args?: SelectSubset<T, RiderEarningFindFirstArgs<ExtArgs>>): Prisma__RiderEarningClient<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RiderEarning that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderEarningFindFirstOrThrowArgs} args - Arguments to find a RiderEarning
     * @example
     * // Get one RiderEarning
     * const riderEarning = await prisma.riderEarning.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RiderEarningFindFirstOrThrowArgs>(args?: SelectSubset<T, RiderEarningFindFirstOrThrowArgs<ExtArgs>>): Prisma__RiderEarningClient<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RiderEarnings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderEarningFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RiderEarnings
     * const riderEarnings = await prisma.riderEarning.findMany()
     * 
     * // Get first 10 RiderEarnings
     * const riderEarnings = await prisma.riderEarning.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const riderEarningWithIdOnly = await prisma.riderEarning.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RiderEarningFindManyArgs>(args?: SelectSubset<T, RiderEarningFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RiderEarning.
     * @param {RiderEarningCreateArgs} args - Arguments to create a RiderEarning.
     * @example
     * // Create one RiderEarning
     * const RiderEarning = await prisma.riderEarning.create({
     *   data: {
     *     // ... data to create a RiderEarning
     *   }
     * })
     * 
     */
    create<T extends RiderEarningCreateArgs>(args: SelectSubset<T, RiderEarningCreateArgs<ExtArgs>>): Prisma__RiderEarningClient<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RiderEarnings.
     * @param {RiderEarningCreateManyArgs} args - Arguments to create many RiderEarnings.
     * @example
     * // Create many RiderEarnings
     * const riderEarning = await prisma.riderEarning.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RiderEarningCreateManyArgs>(args?: SelectSubset<T, RiderEarningCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RiderEarnings and returns the data saved in the database.
     * @param {RiderEarningCreateManyAndReturnArgs} args - Arguments to create many RiderEarnings.
     * @example
     * // Create many RiderEarnings
     * const riderEarning = await prisma.riderEarning.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RiderEarnings and only return the `id`
     * const riderEarningWithIdOnly = await prisma.riderEarning.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RiderEarningCreateManyAndReturnArgs>(args?: SelectSubset<T, RiderEarningCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RiderEarning.
     * @param {RiderEarningDeleteArgs} args - Arguments to delete one RiderEarning.
     * @example
     * // Delete one RiderEarning
     * const RiderEarning = await prisma.riderEarning.delete({
     *   where: {
     *     // ... filter to delete one RiderEarning
     *   }
     * })
     * 
     */
    delete<T extends RiderEarningDeleteArgs>(args: SelectSubset<T, RiderEarningDeleteArgs<ExtArgs>>): Prisma__RiderEarningClient<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RiderEarning.
     * @param {RiderEarningUpdateArgs} args - Arguments to update one RiderEarning.
     * @example
     * // Update one RiderEarning
     * const riderEarning = await prisma.riderEarning.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RiderEarningUpdateArgs>(args: SelectSubset<T, RiderEarningUpdateArgs<ExtArgs>>): Prisma__RiderEarningClient<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RiderEarnings.
     * @param {RiderEarningDeleteManyArgs} args - Arguments to filter RiderEarnings to delete.
     * @example
     * // Delete a few RiderEarnings
     * const { count } = await prisma.riderEarning.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RiderEarningDeleteManyArgs>(args?: SelectSubset<T, RiderEarningDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RiderEarnings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderEarningUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RiderEarnings
     * const riderEarning = await prisma.riderEarning.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RiderEarningUpdateManyArgs>(args: SelectSubset<T, RiderEarningUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RiderEarnings and returns the data updated in the database.
     * @param {RiderEarningUpdateManyAndReturnArgs} args - Arguments to update many RiderEarnings.
     * @example
     * // Update many RiderEarnings
     * const riderEarning = await prisma.riderEarning.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RiderEarnings and only return the `id`
     * const riderEarningWithIdOnly = await prisma.riderEarning.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RiderEarningUpdateManyAndReturnArgs>(args: SelectSubset<T, RiderEarningUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RiderEarning.
     * @param {RiderEarningUpsertArgs} args - Arguments to update or create a RiderEarning.
     * @example
     * // Update or create a RiderEarning
     * const riderEarning = await prisma.riderEarning.upsert({
     *   create: {
     *     // ... data to create a RiderEarning
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RiderEarning we want to update
     *   }
     * })
     */
    upsert<T extends RiderEarningUpsertArgs>(args: SelectSubset<T, RiderEarningUpsertArgs<ExtArgs>>): Prisma__RiderEarningClient<$Result.GetResult<Prisma.$RiderEarningPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RiderEarnings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderEarningCountArgs} args - Arguments to filter RiderEarnings to count.
     * @example
     * // Count the number of RiderEarnings
     * const count = await prisma.riderEarning.count({
     *   where: {
     *     // ... the filter for the RiderEarnings we want to count
     *   }
     * })
    **/
    count<T extends RiderEarningCountArgs>(
      args?: Subset<T, RiderEarningCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RiderEarningCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RiderEarning.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderEarningAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RiderEarningAggregateArgs>(args: Subset<T, RiderEarningAggregateArgs>): Prisma.PrismaPromise<GetRiderEarningAggregateType<T>>

    /**
     * Group by RiderEarning.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiderEarningGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RiderEarningGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RiderEarningGroupByArgs['orderBy'] }
        : { orderBy?: RiderEarningGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RiderEarningGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRiderEarningGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RiderEarning model
   */
  readonly fields: RiderEarningFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RiderEarning.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RiderEarningClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    store<T extends StoreDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StoreDefaultArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RiderEarning model
   */
  interface RiderEarningFieldRefs {
    readonly id: FieldRef<"RiderEarning", 'String'>
    readonly riderId: FieldRef<"RiderEarning", 'String'>
    readonly clientId: FieldRef<"RiderEarning", 'String'>
    readonly storeId: FieldRef<"RiderEarning", 'String'>
    readonly orderId: FieldRef<"RiderEarning", 'String'>
    readonly baseRate: FieldRef<"RiderEarning", 'Float'>
    readonly storeOfferRate: FieldRef<"RiderEarning", 'Float'>
    readonly totalRate: FieldRef<"RiderEarning", 'Float'>
    readonly bulkOrderBonus: FieldRef<"RiderEarning", 'Float'>
    readonly performanceBonus: FieldRef<"RiderEarning", 'Float'>
    readonly weeklyTargetBonus: FieldRef<"RiderEarning", 'Float'>
    readonly specialEventBonus: FieldRef<"RiderEarning", 'Float'>
    readonly finalEarning: FieldRef<"RiderEarning", 'Float'>
    readonly orderDate: FieldRef<"RiderEarning", 'DateTime'>
    readonly deliveryTime: FieldRef<"RiderEarning", 'Int'>
    readonly riderRating: FieldRef<"RiderEarning", 'Float'>
    readonly distance: FieldRef<"RiderEarning", 'Float'>
    readonly bonusesApplied: FieldRef<"RiderEarning", 'String'>
    readonly rateCalculationLog: FieldRef<"RiderEarning", 'String'>
    readonly paymentStatus: FieldRef<"RiderEarning", 'String'>
    readonly paymentDate: FieldRef<"RiderEarning", 'DateTime'>
    readonly paymentMethod: FieldRef<"RiderEarning", 'String'>
    readonly paymentReference: FieldRef<"RiderEarning", 'String'>
    readonly createdAt: FieldRef<"RiderEarning", 'DateTime'>
    readonly updatedAt: FieldRef<"RiderEarning", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RiderEarning findUnique
   */
  export type RiderEarningFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
    /**
     * Filter, which RiderEarning to fetch.
     */
    where: RiderEarningWhereUniqueInput
  }

  /**
   * RiderEarning findUniqueOrThrow
   */
  export type RiderEarningFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
    /**
     * Filter, which RiderEarning to fetch.
     */
    where: RiderEarningWhereUniqueInput
  }

  /**
   * RiderEarning findFirst
   */
  export type RiderEarningFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
    /**
     * Filter, which RiderEarning to fetch.
     */
    where?: RiderEarningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderEarnings to fetch.
     */
    orderBy?: RiderEarningOrderByWithRelationInput | RiderEarningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RiderEarnings.
     */
    cursor?: RiderEarningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderEarnings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderEarnings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RiderEarnings.
     */
    distinct?: RiderEarningScalarFieldEnum | RiderEarningScalarFieldEnum[]
  }

  /**
   * RiderEarning findFirstOrThrow
   */
  export type RiderEarningFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
    /**
     * Filter, which RiderEarning to fetch.
     */
    where?: RiderEarningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderEarnings to fetch.
     */
    orderBy?: RiderEarningOrderByWithRelationInput | RiderEarningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RiderEarnings.
     */
    cursor?: RiderEarningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderEarnings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderEarnings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RiderEarnings.
     */
    distinct?: RiderEarningScalarFieldEnum | RiderEarningScalarFieldEnum[]
  }

  /**
   * RiderEarning findMany
   */
  export type RiderEarningFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
    /**
     * Filter, which RiderEarnings to fetch.
     */
    where?: RiderEarningWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiderEarnings to fetch.
     */
    orderBy?: RiderEarningOrderByWithRelationInput | RiderEarningOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RiderEarnings.
     */
    cursor?: RiderEarningWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiderEarnings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiderEarnings.
     */
    skip?: number
    distinct?: RiderEarningScalarFieldEnum | RiderEarningScalarFieldEnum[]
  }

  /**
   * RiderEarning create
   */
  export type RiderEarningCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
    /**
     * The data needed to create a RiderEarning.
     */
    data: XOR<RiderEarningCreateInput, RiderEarningUncheckedCreateInput>
  }

  /**
   * RiderEarning createMany
   */
  export type RiderEarningCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RiderEarnings.
     */
    data: RiderEarningCreateManyInput | RiderEarningCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RiderEarning createManyAndReturn
   */
  export type RiderEarningCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * The data used to create many RiderEarnings.
     */
    data: RiderEarningCreateManyInput | RiderEarningCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RiderEarning update
   */
  export type RiderEarningUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
    /**
     * The data needed to update a RiderEarning.
     */
    data: XOR<RiderEarningUpdateInput, RiderEarningUncheckedUpdateInput>
    /**
     * Choose, which RiderEarning to update.
     */
    where: RiderEarningWhereUniqueInput
  }

  /**
   * RiderEarning updateMany
   */
  export type RiderEarningUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RiderEarnings.
     */
    data: XOR<RiderEarningUpdateManyMutationInput, RiderEarningUncheckedUpdateManyInput>
    /**
     * Filter which RiderEarnings to update
     */
    where?: RiderEarningWhereInput
    /**
     * Limit how many RiderEarnings to update.
     */
    limit?: number
  }

  /**
   * RiderEarning updateManyAndReturn
   */
  export type RiderEarningUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * The data used to update RiderEarnings.
     */
    data: XOR<RiderEarningUpdateManyMutationInput, RiderEarningUncheckedUpdateManyInput>
    /**
     * Filter which RiderEarnings to update
     */
    where?: RiderEarningWhereInput
    /**
     * Limit how many RiderEarnings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RiderEarning upsert
   */
  export type RiderEarningUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
    /**
     * The filter to search for the RiderEarning to update in case it exists.
     */
    where: RiderEarningWhereUniqueInput
    /**
     * In case the RiderEarning found by the `where` argument doesn't exist, create a new RiderEarning with this data.
     */
    create: XOR<RiderEarningCreateInput, RiderEarningUncheckedCreateInput>
    /**
     * In case the RiderEarning was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RiderEarningUpdateInput, RiderEarningUncheckedUpdateInput>
  }

  /**
   * RiderEarning delete
   */
  export type RiderEarningDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
    /**
     * Filter which RiderEarning to delete.
     */
    where: RiderEarningWhereUniqueInput
  }

  /**
   * RiderEarning deleteMany
   */
  export type RiderEarningDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RiderEarnings to delete
     */
    where?: RiderEarningWhereInput
    /**
     * Limit how many RiderEarnings to delete.
     */
    limit?: number
  }

  /**
   * RiderEarning without action
   */
  export type RiderEarningDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiderEarning
     */
    select?: RiderEarningSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiderEarning
     */
    omit?: RiderEarningOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiderEarningInclude<ExtArgs> | null
  }


  /**
   * Model WeeklyRiderSummary
   */

  export type AggregateWeeklyRiderSummary = {
    _count: WeeklyRiderSummaryCountAggregateOutputType | null
    _avg: WeeklyRiderSummaryAvgAggregateOutputType | null
    _sum: WeeklyRiderSummarySumAggregateOutputType | null
    _min: WeeklyRiderSummaryMinAggregateOutputType | null
    _max: WeeklyRiderSummaryMaxAggregateOutputType | null
  }

  export type WeeklyRiderSummaryAvgAggregateOutputType = {
    totalOrders: number | null
    averageOrdersPerDay: number | null
    bestDayOrders: number | null
    worstDayOrders: number | null
    baseEarnings: number | null
    offerEarnings: number | null
    bonusEarnings: number | null
    totalEarnings: number | null
    averageRating: number | null
    averageDeliveryTime: number | null
    onTimeDeliveryPercentage: number | null
    totalDistance: number | null
    totalPaid: number | null
    pendingAmount: number | null
    paymentCount: number | null
  }

  export type WeeklyRiderSummarySumAggregateOutputType = {
    totalOrders: number | null
    averageOrdersPerDay: number | null
    bestDayOrders: number | null
    worstDayOrders: number | null
    baseEarnings: number | null
    offerEarnings: number | null
    bonusEarnings: number | null
    totalEarnings: number | null
    averageRating: number | null
    averageDeliveryTime: number | null
    onTimeDeliveryPercentage: number | null
    totalDistance: number | null
    totalPaid: number | null
    pendingAmount: number | null
    paymentCount: number | null
  }

  export type WeeklyRiderSummaryMinAggregateOutputType = {
    id: string | null
    riderId: string | null
    weekStartDate: Date | null
    weekEndDate: Date | null
    totalOrders: number | null
    averageOrdersPerDay: number | null
    bestDayOrders: number | null
    worstDayOrders: number | null
    baseEarnings: number | null
    offerEarnings: number | null
    bonusEarnings: number | null
    totalEarnings: number | null
    averageRating: number | null
    averageDeliveryTime: number | null
    onTimeDeliveryPercentage: number | null
    totalDistance: number | null
    dailyTargetAchieved: string | null
    weeklyTargetAchieved: boolean | null
    bonusesEarned: string | null
    topClientId: string | null
    topStoreId: string | null
    citiesWorked: string | null
    totalPaid: number | null
    pendingAmount: number | null
    paymentCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WeeklyRiderSummaryMaxAggregateOutputType = {
    id: string | null
    riderId: string | null
    weekStartDate: Date | null
    weekEndDate: Date | null
    totalOrders: number | null
    averageOrdersPerDay: number | null
    bestDayOrders: number | null
    worstDayOrders: number | null
    baseEarnings: number | null
    offerEarnings: number | null
    bonusEarnings: number | null
    totalEarnings: number | null
    averageRating: number | null
    averageDeliveryTime: number | null
    onTimeDeliveryPercentage: number | null
    totalDistance: number | null
    dailyTargetAchieved: string | null
    weeklyTargetAchieved: boolean | null
    bonusesEarned: string | null
    topClientId: string | null
    topStoreId: string | null
    citiesWorked: string | null
    totalPaid: number | null
    pendingAmount: number | null
    paymentCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WeeklyRiderSummaryCountAggregateOutputType = {
    id: number
    riderId: number
    weekStartDate: number
    weekEndDate: number
    totalOrders: number
    averageOrdersPerDay: number
    bestDayOrders: number
    worstDayOrders: number
    baseEarnings: number
    offerEarnings: number
    bonusEarnings: number
    totalEarnings: number
    averageRating: number
    averageDeliveryTime: number
    onTimeDeliveryPercentage: number
    totalDistance: number
    dailyTargetAchieved: number
    weeklyTargetAchieved: number
    bonusesEarned: number
    topClientId: number
    topStoreId: number
    citiesWorked: number
    totalPaid: number
    pendingAmount: number
    paymentCount: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type WeeklyRiderSummaryAvgAggregateInputType = {
    totalOrders?: true
    averageOrdersPerDay?: true
    bestDayOrders?: true
    worstDayOrders?: true
    baseEarnings?: true
    offerEarnings?: true
    bonusEarnings?: true
    totalEarnings?: true
    averageRating?: true
    averageDeliveryTime?: true
    onTimeDeliveryPercentage?: true
    totalDistance?: true
    totalPaid?: true
    pendingAmount?: true
    paymentCount?: true
  }

  export type WeeklyRiderSummarySumAggregateInputType = {
    totalOrders?: true
    averageOrdersPerDay?: true
    bestDayOrders?: true
    worstDayOrders?: true
    baseEarnings?: true
    offerEarnings?: true
    bonusEarnings?: true
    totalEarnings?: true
    averageRating?: true
    averageDeliveryTime?: true
    onTimeDeliveryPercentage?: true
    totalDistance?: true
    totalPaid?: true
    pendingAmount?: true
    paymentCount?: true
  }

  export type WeeklyRiderSummaryMinAggregateInputType = {
    id?: true
    riderId?: true
    weekStartDate?: true
    weekEndDate?: true
    totalOrders?: true
    averageOrdersPerDay?: true
    bestDayOrders?: true
    worstDayOrders?: true
    baseEarnings?: true
    offerEarnings?: true
    bonusEarnings?: true
    totalEarnings?: true
    averageRating?: true
    averageDeliveryTime?: true
    onTimeDeliveryPercentage?: true
    totalDistance?: true
    dailyTargetAchieved?: true
    weeklyTargetAchieved?: true
    bonusesEarned?: true
    topClientId?: true
    topStoreId?: true
    citiesWorked?: true
    totalPaid?: true
    pendingAmount?: true
    paymentCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WeeklyRiderSummaryMaxAggregateInputType = {
    id?: true
    riderId?: true
    weekStartDate?: true
    weekEndDate?: true
    totalOrders?: true
    averageOrdersPerDay?: true
    bestDayOrders?: true
    worstDayOrders?: true
    baseEarnings?: true
    offerEarnings?: true
    bonusEarnings?: true
    totalEarnings?: true
    averageRating?: true
    averageDeliveryTime?: true
    onTimeDeliveryPercentage?: true
    totalDistance?: true
    dailyTargetAchieved?: true
    weeklyTargetAchieved?: true
    bonusesEarned?: true
    topClientId?: true
    topStoreId?: true
    citiesWorked?: true
    totalPaid?: true
    pendingAmount?: true
    paymentCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WeeklyRiderSummaryCountAggregateInputType = {
    id?: true
    riderId?: true
    weekStartDate?: true
    weekEndDate?: true
    totalOrders?: true
    averageOrdersPerDay?: true
    bestDayOrders?: true
    worstDayOrders?: true
    baseEarnings?: true
    offerEarnings?: true
    bonusEarnings?: true
    totalEarnings?: true
    averageRating?: true
    averageDeliveryTime?: true
    onTimeDeliveryPercentage?: true
    totalDistance?: true
    dailyTargetAchieved?: true
    weeklyTargetAchieved?: true
    bonusesEarned?: true
    topClientId?: true
    topStoreId?: true
    citiesWorked?: true
    totalPaid?: true
    pendingAmount?: true
    paymentCount?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type WeeklyRiderSummaryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WeeklyRiderSummary to aggregate.
     */
    where?: WeeklyRiderSummaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WeeklyRiderSummaries to fetch.
     */
    orderBy?: WeeklyRiderSummaryOrderByWithRelationInput | WeeklyRiderSummaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WeeklyRiderSummaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeeklyRiderSummaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeeklyRiderSummaries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WeeklyRiderSummaries
    **/
    _count?: true | WeeklyRiderSummaryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WeeklyRiderSummaryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WeeklyRiderSummarySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WeeklyRiderSummaryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WeeklyRiderSummaryMaxAggregateInputType
  }

  export type GetWeeklyRiderSummaryAggregateType<T extends WeeklyRiderSummaryAggregateArgs> = {
        [P in keyof T & keyof AggregateWeeklyRiderSummary]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWeeklyRiderSummary[P]>
      : GetScalarType<T[P], AggregateWeeklyRiderSummary[P]>
  }




  export type WeeklyRiderSummaryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WeeklyRiderSummaryWhereInput
    orderBy?: WeeklyRiderSummaryOrderByWithAggregationInput | WeeklyRiderSummaryOrderByWithAggregationInput[]
    by: WeeklyRiderSummaryScalarFieldEnum[] | WeeklyRiderSummaryScalarFieldEnum
    having?: WeeklyRiderSummaryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WeeklyRiderSummaryCountAggregateInputType | true
    _avg?: WeeklyRiderSummaryAvgAggregateInputType
    _sum?: WeeklyRiderSummarySumAggregateInputType
    _min?: WeeklyRiderSummaryMinAggregateInputType
    _max?: WeeklyRiderSummaryMaxAggregateInputType
  }

  export type WeeklyRiderSummaryGroupByOutputType = {
    id: string
    riderId: string
    weekStartDate: Date
    weekEndDate: Date
    totalOrders: number
    averageOrdersPerDay: number
    bestDayOrders: number
    worstDayOrders: number
    baseEarnings: number
    offerEarnings: number
    bonusEarnings: number
    totalEarnings: number
    averageRating: number
    averageDeliveryTime: number
    onTimeDeliveryPercentage: number
    totalDistance: number
    dailyTargetAchieved: string | null
    weeklyTargetAchieved: boolean
    bonusesEarned: string | null
    topClientId: string | null
    topStoreId: string | null
    citiesWorked: string | null
    totalPaid: number
    pendingAmount: number
    paymentCount: number
    createdAt: Date
    updatedAt: Date
    _count: WeeklyRiderSummaryCountAggregateOutputType | null
    _avg: WeeklyRiderSummaryAvgAggregateOutputType | null
    _sum: WeeklyRiderSummarySumAggregateOutputType | null
    _min: WeeklyRiderSummaryMinAggregateOutputType | null
    _max: WeeklyRiderSummaryMaxAggregateOutputType | null
  }

  type GetWeeklyRiderSummaryGroupByPayload<T extends WeeklyRiderSummaryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WeeklyRiderSummaryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WeeklyRiderSummaryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WeeklyRiderSummaryGroupByOutputType[P]>
            : GetScalarType<T[P], WeeklyRiderSummaryGroupByOutputType[P]>
        }
      >
    >


  export type WeeklyRiderSummarySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    riderId?: boolean
    weekStartDate?: boolean
    weekEndDate?: boolean
    totalOrders?: boolean
    averageOrdersPerDay?: boolean
    bestDayOrders?: boolean
    worstDayOrders?: boolean
    baseEarnings?: boolean
    offerEarnings?: boolean
    bonusEarnings?: boolean
    totalEarnings?: boolean
    averageRating?: boolean
    averageDeliveryTime?: boolean
    onTimeDeliveryPercentage?: boolean
    totalDistance?: boolean
    dailyTargetAchieved?: boolean
    weeklyTargetAchieved?: boolean
    bonusesEarned?: boolean
    topClientId?: boolean
    topStoreId?: boolean
    citiesWorked?: boolean
    totalPaid?: boolean
    pendingAmount?: boolean
    paymentCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["weeklyRiderSummary"]>

  export type WeeklyRiderSummarySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    riderId?: boolean
    weekStartDate?: boolean
    weekEndDate?: boolean
    totalOrders?: boolean
    averageOrdersPerDay?: boolean
    bestDayOrders?: boolean
    worstDayOrders?: boolean
    baseEarnings?: boolean
    offerEarnings?: boolean
    bonusEarnings?: boolean
    totalEarnings?: boolean
    averageRating?: boolean
    averageDeliveryTime?: boolean
    onTimeDeliveryPercentage?: boolean
    totalDistance?: boolean
    dailyTargetAchieved?: boolean
    weeklyTargetAchieved?: boolean
    bonusesEarned?: boolean
    topClientId?: boolean
    topStoreId?: boolean
    citiesWorked?: boolean
    totalPaid?: boolean
    pendingAmount?: boolean
    paymentCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["weeklyRiderSummary"]>

  export type WeeklyRiderSummarySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    riderId?: boolean
    weekStartDate?: boolean
    weekEndDate?: boolean
    totalOrders?: boolean
    averageOrdersPerDay?: boolean
    bestDayOrders?: boolean
    worstDayOrders?: boolean
    baseEarnings?: boolean
    offerEarnings?: boolean
    bonusEarnings?: boolean
    totalEarnings?: boolean
    averageRating?: boolean
    averageDeliveryTime?: boolean
    onTimeDeliveryPercentage?: boolean
    totalDistance?: boolean
    dailyTargetAchieved?: boolean
    weeklyTargetAchieved?: boolean
    bonusesEarned?: boolean
    topClientId?: boolean
    topStoreId?: boolean
    citiesWorked?: boolean
    totalPaid?: boolean
    pendingAmount?: boolean
    paymentCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["weeklyRiderSummary"]>

  export type WeeklyRiderSummarySelectScalar = {
    id?: boolean
    riderId?: boolean
    weekStartDate?: boolean
    weekEndDate?: boolean
    totalOrders?: boolean
    averageOrdersPerDay?: boolean
    bestDayOrders?: boolean
    worstDayOrders?: boolean
    baseEarnings?: boolean
    offerEarnings?: boolean
    bonusEarnings?: boolean
    totalEarnings?: boolean
    averageRating?: boolean
    averageDeliveryTime?: boolean
    onTimeDeliveryPercentage?: boolean
    totalDistance?: boolean
    dailyTargetAchieved?: boolean
    weeklyTargetAchieved?: boolean
    bonusesEarned?: boolean
    topClientId?: boolean
    topStoreId?: boolean
    citiesWorked?: boolean
    totalPaid?: boolean
    pendingAmount?: boolean
    paymentCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type WeeklyRiderSummaryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "riderId" | "weekStartDate" | "weekEndDate" | "totalOrders" | "averageOrdersPerDay" | "bestDayOrders" | "worstDayOrders" | "baseEarnings" | "offerEarnings" | "bonusEarnings" | "totalEarnings" | "averageRating" | "averageDeliveryTime" | "onTimeDeliveryPercentage" | "totalDistance" | "dailyTargetAchieved" | "weeklyTargetAchieved" | "bonusesEarned" | "topClientId" | "topStoreId" | "citiesWorked" | "totalPaid" | "pendingAmount" | "paymentCount" | "createdAt" | "updatedAt", ExtArgs["result"]["weeklyRiderSummary"]>

  export type $WeeklyRiderSummaryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "WeeklyRiderSummary"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      riderId: string
      weekStartDate: Date
      weekEndDate: Date
      totalOrders: number
      averageOrdersPerDay: number
      bestDayOrders: number
      worstDayOrders: number
      baseEarnings: number
      offerEarnings: number
      bonusEarnings: number
      totalEarnings: number
      averageRating: number
      averageDeliveryTime: number
      onTimeDeliveryPercentage: number
      totalDistance: number
      dailyTargetAchieved: string | null
      weeklyTargetAchieved: boolean
      bonusesEarned: string | null
      topClientId: string | null
      topStoreId: string | null
      citiesWorked: string | null
      totalPaid: number
      pendingAmount: number
      paymentCount: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["weeklyRiderSummary"]>
    composites: {}
  }

  type WeeklyRiderSummaryGetPayload<S extends boolean | null | undefined | WeeklyRiderSummaryDefaultArgs> = $Result.GetResult<Prisma.$WeeklyRiderSummaryPayload, S>

  type WeeklyRiderSummaryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<WeeklyRiderSummaryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WeeklyRiderSummaryCountAggregateInputType | true
    }

  export interface WeeklyRiderSummaryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WeeklyRiderSummary'], meta: { name: 'WeeklyRiderSummary' } }
    /**
     * Find zero or one WeeklyRiderSummary that matches the filter.
     * @param {WeeklyRiderSummaryFindUniqueArgs} args - Arguments to find a WeeklyRiderSummary
     * @example
     * // Get one WeeklyRiderSummary
     * const weeklyRiderSummary = await prisma.weeklyRiderSummary.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WeeklyRiderSummaryFindUniqueArgs>(args: SelectSubset<T, WeeklyRiderSummaryFindUniqueArgs<ExtArgs>>): Prisma__WeeklyRiderSummaryClient<$Result.GetResult<Prisma.$WeeklyRiderSummaryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one WeeklyRiderSummary that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {WeeklyRiderSummaryFindUniqueOrThrowArgs} args - Arguments to find a WeeklyRiderSummary
     * @example
     * // Get one WeeklyRiderSummary
     * const weeklyRiderSummary = await prisma.weeklyRiderSummary.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WeeklyRiderSummaryFindUniqueOrThrowArgs>(args: SelectSubset<T, WeeklyRiderSummaryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WeeklyRiderSummaryClient<$Result.GetResult<Prisma.$WeeklyRiderSummaryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first WeeklyRiderSummary that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WeeklyRiderSummaryFindFirstArgs} args - Arguments to find a WeeklyRiderSummary
     * @example
     * // Get one WeeklyRiderSummary
     * const weeklyRiderSummary = await prisma.weeklyRiderSummary.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WeeklyRiderSummaryFindFirstArgs>(args?: SelectSubset<T, WeeklyRiderSummaryFindFirstArgs<ExtArgs>>): Prisma__WeeklyRiderSummaryClient<$Result.GetResult<Prisma.$WeeklyRiderSummaryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first WeeklyRiderSummary that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WeeklyRiderSummaryFindFirstOrThrowArgs} args - Arguments to find a WeeklyRiderSummary
     * @example
     * // Get one WeeklyRiderSummary
     * const weeklyRiderSummary = await prisma.weeklyRiderSummary.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WeeklyRiderSummaryFindFirstOrThrowArgs>(args?: SelectSubset<T, WeeklyRiderSummaryFindFirstOrThrowArgs<ExtArgs>>): Prisma__WeeklyRiderSummaryClient<$Result.GetResult<Prisma.$WeeklyRiderSummaryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more WeeklyRiderSummaries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WeeklyRiderSummaryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WeeklyRiderSummaries
     * const weeklyRiderSummaries = await prisma.weeklyRiderSummary.findMany()
     * 
     * // Get first 10 WeeklyRiderSummaries
     * const weeklyRiderSummaries = await prisma.weeklyRiderSummary.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const weeklyRiderSummaryWithIdOnly = await prisma.weeklyRiderSummary.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WeeklyRiderSummaryFindManyArgs>(args?: SelectSubset<T, WeeklyRiderSummaryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WeeklyRiderSummaryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a WeeklyRiderSummary.
     * @param {WeeklyRiderSummaryCreateArgs} args - Arguments to create a WeeklyRiderSummary.
     * @example
     * // Create one WeeklyRiderSummary
     * const WeeklyRiderSummary = await prisma.weeklyRiderSummary.create({
     *   data: {
     *     // ... data to create a WeeklyRiderSummary
     *   }
     * })
     * 
     */
    create<T extends WeeklyRiderSummaryCreateArgs>(args: SelectSubset<T, WeeklyRiderSummaryCreateArgs<ExtArgs>>): Prisma__WeeklyRiderSummaryClient<$Result.GetResult<Prisma.$WeeklyRiderSummaryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many WeeklyRiderSummaries.
     * @param {WeeklyRiderSummaryCreateManyArgs} args - Arguments to create many WeeklyRiderSummaries.
     * @example
     * // Create many WeeklyRiderSummaries
     * const weeklyRiderSummary = await prisma.weeklyRiderSummary.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WeeklyRiderSummaryCreateManyArgs>(args?: SelectSubset<T, WeeklyRiderSummaryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many WeeklyRiderSummaries and returns the data saved in the database.
     * @param {WeeklyRiderSummaryCreateManyAndReturnArgs} args - Arguments to create many WeeklyRiderSummaries.
     * @example
     * // Create many WeeklyRiderSummaries
     * const weeklyRiderSummary = await prisma.weeklyRiderSummary.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many WeeklyRiderSummaries and only return the `id`
     * const weeklyRiderSummaryWithIdOnly = await prisma.weeklyRiderSummary.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends WeeklyRiderSummaryCreateManyAndReturnArgs>(args?: SelectSubset<T, WeeklyRiderSummaryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WeeklyRiderSummaryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a WeeklyRiderSummary.
     * @param {WeeklyRiderSummaryDeleteArgs} args - Arguments to delete one WeeklyRiderSummary.
     * @example
     * // Delete one WeeklyRiderSummary
     * const WeeklyRiderSummary = await prisma.weeklyRiderSummary.delete({
     *   where: {
     *     // ... filter to delete one WeeklyRiderSummary
     *   }
     * })
     * 
     */
    delete<T extends WeeklyRiderSummaryDeleteArgs>(args: SelectSubset<T, WeeklyRiderSummaryDeleteArgs<ExtArgs>>): Prisma__WeeklyRiderSummaryClient<$Result.GetResult<Prisma.$WeeklyRiderSummaryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one WeeklyRiderSummary.
     * @param {WeeklyRiderSummaryUpdateArgs} args - Arguments to update one WeeklyRiderSummary.
     * @example
     * // Update one WeeklyRiderSummary
     * const weeklyRiderSummary = await prisma.weeklyRiderSummary.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WeeklyRiderSummaryUpdateArgs>(args: SelectSubset<T, WeeklyRiderSummaryUpdateArgs<ExtArgs>>): Prisma__WeeklyRiderSummaryClient<$Result.GetResult<Prisma.$WeeklyRiderSummaryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more WeeklyRiderSummaries.
     * @param {WeeklyRiderSummaryDeleteManyArgs} args - Arguments to filter WeeklyRiderSummaries to delete.
     * @example
     * // Delete a few WeeklyRiderSummaries
     * const { count } = await prisma.weeklyRiderSummary.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WeeklyRiderSummaryDeleteManyArgs>(args?: SelectSubset<T, WeeklyRiderSummaryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WeeklyRiderSummaries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WeeklyRiderSummaryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WeeklyRiderSummaries
     * const weeklyRiderSummary = await prisma.weeklyRiderSummary.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WeeklyRiderSummaryUpdateManyArgs>(args: SelectSubset<T, WeeklyRiderSummaryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WeeklyRiderSummaries and returns the data updated in the database.
     * @param {WeeklyRiderSummaryUpdateManyAndReturnArgs} args - Arguments to update many WeeklyRiderSummaries.
     * @example
     * // Update many WeeklyRiderSummaries
     * const weeklyRiderSummary = await prisma.weeklyRiderSummary.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more WeeklyRiderSummaries and only return the `id`
     * const weeklyRiderSummaryWithIdOnly = await prisma.weeklyRiderSummary.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends WeeklyRiderSummaryUpdateManyAndReturnArgs>(args: SelectSubset<T, WeeklyRiderSummaryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WeeklyRiderSummaryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one WeeklyRiderSummary.
     * @param {WeeklyRiderSummaryUpsertArgs} args - Arguments to update or create a WeeklyRiderSummary.
     * @example
     * // Update or create a WeeklyRiderSummary
     * const weeklyRiderSummary = await prisma.weeklyRiderSummary.upsert({
     *   create: {
     *     // ... data to create a WeeklyRiderSummary
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WeeklyRiderSummary we want to update
     *   }
     * })
     */
    upsert<T extends WeeklyRiderSummaryUpsertArgs>(args: SelectSubset<T, WeeklyRiderSummaryUpsertArgs<ExtArgs>>): Prisma__WeeklyRiderSummaryClient<$Result.GetResult<Prisma.$WeeklyRiderSummaryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of WeeklyRiderSummaries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WeeklyRiderSummaryCountArgs} args - Arguments to filter WeeklyRiderSummaries to count.
     * @example
     * // Count the number of WeeklyRiderSummaries
     * const count = await prisma.weeklyRiderSummary.count({
     *   where: {
     *     // ... the filter for the WeeklyRiderSummaries we want to count
     *   }
     * })
    **/
    count<T extends WeeklyRiderSummaryCountArgs>(
      args?: Subset<T, WeeklyRiderSummaryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WeeklyRiderSummaryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WeeklyRiderSummary.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WeeklyRiderSummaryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WeeklyRiderSummaryAggregateArgs>(args: Subset<T, WeeklyRiderSummaryAggregateArgs>): Prisma.PrismaPromise<GetWeeklyRiderSummaryAggregateType<T>>

    /**
     * Group by WeeklyRiderSummary.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WeeklyRiderSummaryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WeeklyRiderSummaryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WeeklyRiderSummaryGroupByArgs['orderBy'] }
        : { orderBy?: WeeklyRiderSummaryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WeeklyRiderSummaryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWeeklyRiderSummaryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the WeeklyRiderSummary model
   */
  readonly fields: WeeklyRiderSummaryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for WeeklyRiderSummary.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WeeklyRiderSummaryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the WeeklyRiderSummary model
   */
  interface WeeklyRiderSummaryFieldRefs {
    readonly id: FieldRef<"WeeklyRiderSummary", 'String'>
    readonly riderId: FieldRef<"WeeklyRiderSummary", 'String'>
    readonly weekStartDate: FieldRef<"WeeklyRiderSummary", 'DateTime'>
    readonly weekEndDate: FieldRef<"WeeklyRiderSummary", 'DateTime'>
    readonly totalOrders: FieldRef<"WeeklyRiderSummary", 'Int'>
    readonly averageOrdersPerDay: FieldRef<"WeeklyRiderSummary", 'Float'>
    readonly bestDayOrders: FieldRef<"WeeklyRiderSummary", 'Int'>
    readonly worstDayOrders: FieldRef<"WeeklyRiderSummary", 'Int'>
    readonly baseEarnings: FieldRef<"WeeklyRiderSummary", 'Float'>
    readonly offerEarnings: FieldRef<"WeeklyRiderSummary", 'Float'>
    readonly bonusEarnings: FieldRef<"WeeklyRiderSummary", 'Float'>
    readonly totalEarnings: FieldRef<"WeeklyRiderSummary", 'Float'>
    readonly averageRating: FieldRef<"WeeklyRiderSummary", 'Float'>
    readonly averageDeliveryTime: FieldRef<"WeeklyRiderSummary", 'Float'>
    readonly onTimeDeliveryPercentage: FieldRef<"WeeklyRiderSummary", 'Float'>
    readonly totalDistance: FieldRef<"WeeklyRiderSummary", 'Float'>
    readonly dailyTargetAchieved: FieldRef<"WeeklyRiderSummary", 'String'>
    readonly weeklyTargetAchieved: FieldRef<"WeeklyRiderSummary", 'Boolean'>
    readonly bonusesEarned: FieldRef<"WeeklyRiderSummary", 'String'>
    readonly topClientId: FieldRef<"WeeklyRiderSummary", 'String'>
    readonly topStoreId: FieldRef<"WeeklyRiderSummary", 'String'>
    readonly citiesWorked: FieldRef<"WeeklyRiderSummary", 'String'>
    readonly totalPaid: FieldRef<"WeeklyRiderSummary", 'Float'>
    readonly pendingAmount: FieldRef<"WeeklyRiderSummary", 'Float'>
    readonly paymentCount: FieldRef<"WeeklyRiderSummary", 'Int'>
    readonly createdAt: FieldRef<"WeeklyRiderSummary", 'DateTime'>
    readonly updatedAt: FieldRef<"WeeklyRiderSummary", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * WeeklyRiderSummary findUnique
   */
  export type WeeklyRiderSummaryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
    /**
     * Filter, which WeeklyRiderSummary to fetch.
     */
    where: WeeklyRiderSummaryWhereUniqueInput
  }

  /**
   * WeeklyRiderSummary findUniqueOrThrow
   */
  export type WeeklyRiderSummaryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
    /**
     * Filter, which WeeklyRiderSummary to fetch.
     */
    where: WeeklyRiderSummaryWhereUniqueInput
  }

  /**
   * WeeklyRiderSummary findFirst
   */
  export type WeeklyRiderSummaryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
    /**
     * Filter, which WeeklyRiderSummary to fetch.
     */
    where?: WeeklyRiderSummaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WeeklyRiderSummaries to fetch.
     */
    orderBy?: WeeklyRiderSummaryOrderByWithRelationInput | WeeklyRiderSummaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WeeklyRiderSummaries.
     */
    cursor?: WeeklyRiderSummaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeeklyRiderSummaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeeklyRiderSummaries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WeeklyRiderSummaries.
     */
    distinct?: WeeklyRiderSummaryScalarFieldEnum | WeeklyRiderSummaryScalarFieldEnum[]
  }

  /**
   * WeeklyRiderSummary findFirstOrThrow
   */
  export type WeeklyRiderSummaryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
    /**
     * Filter, which WeeklyRiderSummary to fetch.
     */
    where?: WeeklyRiderSummaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WeeklyRiderSummaries to fetch.
     */
    orderBy?: WeeklyRiderSummaryOrderByWithRelationInput | WeeklyRiderSummaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WeeklyRiderSummaries.
     */
    cursor?: WeeklyRiderSummaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeeklyRiderSummaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeeklyRiderSummaries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WeeklyRiderSummaries.
     */
    distinct?: WeeklyRiderSummaryScalarFieldEnum | WeeklyRiderSummaryScalarFieldEnum[]
  }

  /**
   * WeeklyRiderSummary findMany
   */
  export type WeeklyRiderSummaryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
    /**
     * Filter, which WeeklyRiderSummaries to fetch.
     */
    where?: WeeklyRiderSummaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WeeklyRiderSummaries to fetch.
     */
    orderBy?: WeeklyRiderSummaryOrderByWithRelationInput | WeeklyRiderSummaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WeeklyRiderSummaries.
     */
    cursor?: WeeklyRiderSummaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeeklyRiderSummaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeeklyRiderSummaries.
     */
    skip?: number
    distinct?: WeeklyRiderSummaryScalarFieldEnum | WeeklyRiderSummaryScalarFieldEnum[]
  }

  /**
   * WeeklyRiderSummary create
   */
  export type WeeklyRiderSummaryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
    /**
     * The data needed to create a WeeklyRiderSummary.
     */
    data: XOR<WeeklyRiderSummaryCreateInput, WeeklyRiderSummaryUncheckedCreateInput>
  }

  /**
   * WeeklyRiderSummary createMany
   */
  export type WeeklyRiderSummaryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many WeeklyRiderSummaries.
     */
    data: WeeklyRiderSummaryCreateManyInput | WeeklyRiderSummaryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * WeeklyRiderSummary createManyAndReturn
   */
  export type WeeklyRiderSummaryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
    /**
     * The data used to create many WeeklyRiderSummaries.
     */
    data: WeeklyRiderSummaryCreateManyInput | WeeklyRiderSummaryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * WeeklyRiderSummary update
   */
  export type WeeklyRiderSummaryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
    /**
     * The data needed to update a WeeklyRiderSummary.
     */
    data: XOR<WeeklyRiderSummaryUpdateInput, WeeklyRiderSummaryUncheckedUpdateInput>
    /**
     * Choose, which WeeklyRiderSummary to update.
     */
    where: WeeklyRiderSummaryWhereUniqueInput
  }

  /**
   * WeeklyRiderSummary updateMany
   */
  export type WeeklyRiderSummaryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update WeeklyRiderSummaries.
     */
    data: XOR<WeeklyRiderSummaryUpdateManyMutationInput, WeeklyRiderSummaryUncheckedUpdateManyInput>
    /**
     * Filter which WeeklyRiderSummaries to update
     */
    where?: WeeklyRiderSummaryWhereInput
    /**
     * Limit how many WeeklyRiderSummaries to update.
     */
    limit?: number
  }

  /**
   * WeeklyRiderSummary updateManyAndReturn
   */
  export type WeeklyRiderSummaryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
    /**
     * The data used to update WeeklyRiderSummaries.
     */
    data: XOR<WeeklyRiderSummaryUpdateManyMutationInput, WeeklyRiderSummaryUncheckedUpdateManyInput>
    /**
     * Filter which WeeklyRiderSummaries to update
     */
    where?: WeeklyRiderSummaryWhereInput
    /**
     * Limit how many WeeklyRiderSummaries to update.
     */
    limit?: number
  }

  /**
   * WeeklyRiderSummary upsert
   */
  export type WeeklyRiderSummaryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
    /**
     * The filter to search for the WeeklyRiderSummary to update in case it exists.
     */
    where: WeeklyRiderSummaryWhereUniqueInput
    /**
     * In case the WeeklyRiderSummary found by the `where` argument doesn't exist, create a new WeeklyRiderSummary with this data.
     */
    create: XOR<WeeklyRiderSummaryCreateInput, WeeklyRiderSummaryUncheckedCreateInput>
    /**
     * In case the WeeklyRiderSummary was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WeeklyRiderSummaryUpdateInput, WeeklyRiderSummaryUncheckedUpdateInput>
  }

  /**
   * WeeklyRiderSummary delete
   */
  export type WeeklyRiderSummaryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
    /**
     * Filter which WeeklyRiderSummary to delete.
     */
    where: WeeklyRiderSummaryWhereUniqueInput
  }

  /**
   * WeeklyRiderSummary deleteMany
   */
  export type WeeklyRiderSummaryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WeeklyRiderSummaries to delete
     */
    where?: WeeklyRiderSummaryWhereInput
    /**
     * Limit how many WeeklyRiderSummaries to delete.
     */
    limit?: number
  }

  /**
   * WeeklyRiderSummary without action
   */
  export type WeeklyRiderSummaryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WeeklyRiderSummary
     */
    select?: WeeklyRiderSummarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the WeeklyRiderSummary
     */
    omit?: WeeklyRiderSummaryOmit<ExtArgs> | null
  }


  /**
   * Model RateHistory
   */

  export type AggregateRateHistory = {
    _count: RateHistoryCountAggregateOutputType | null
    _avg: RateHistoryAvgAggregateOutputType | null
    _sum: RateHistorySumAggregateOutputType | null
    _min: RateHistoryMinAggregateOutputType | null
    _max: RateHistoryMaxAggregateOutputType | null
  }

  export type RateHistoryAvgAggregateOutputType = {
    oldBaseRate: number | null
    newBaseRate: number | null
  }

  export type RateHistorySumAggregateOutputType = {
    oldBaseRate: number | null
    newBaseRate: number | null
  }

  export type RateHistoryMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    oldBaseRate: number | null
    newBaseRate: number | null
    changeReason: string | null
    effectiveDate: Date | null
    changedBy: string | null
    createdAt: Date | null
  }

  export type RateHistoryMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    oldBaseRate: number | null
    newBaseRate: number | null
    changeReason: string | null
    effectiveDate: Date | null
    changedBy: string | null
    createdAt: Date | null
  }

  export type RateHistoryCountAggregateOutputType = {
    id: number
    clientId: number
    oldBaseRate: number
    newBaseRate: number
    changeReason: number
    effectiveDate: number
    changedBy: number
    createdAt: number
    _all: number
  }


  export type RateHistoryAvgAggregateInputType = {
    oldBaseRate?: true
    newBaseRate?: true
  }

  export type RateHistorySumAggregateInputType = {
    oldBaseRate?: true
    newBaseRate?: true
  }

  export type RateHistoryMinAggregateInputType = {
    id?: true
    clientId?: true
    oldBaseRate?: true
    newBaseRate?: true
    changeReason?: true
    effectiveDate?: true
    changedBy?: true
    createdAt?: true
  }

  export type RateHistoryMaxAggregateInputType = {
    id?: true
    clientId?: true
    oldBaseRate?: true
    newBaseRate?: true
    changeReason?: true
    effectiveDate?: true
    changedBy?: true
    createdAt?: true
  }

  export type RateHistoryCountAggregateInputType = {
    id?: true
    clientId?: true
    oldBaseRate?: true
    newBaseRate?: true
    changeReason?: true
    effectiveDate?: true
    changedBy?: true
    createdAt?: true
    _all?: true
  }

  export type RateHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RateHistory to aggregate.
     */
    where?: RateHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RateHistories to fetch.
     */
    orderBy?: RateHistoryOrderByWithRelationInput | RateHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RateHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RateHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RateHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RateHistories
    **/
    _count?: true | RateHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RateHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RateHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RateHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RateHistoryMaxAggregateInputType
  }

  export type GetRateHistoryAggregateType<T extends RateHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateRateHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRateHistory[P]>
      : GetScalarType<T[P], AggregateRateHistory[P]>
  }




  export type RateHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RateHistoryWhereInput
    orderBy?: RateHistoryOrderByWithAggregationInput | RateHistoryOrderByWithAggregationInput[]
    by: RateHistoryScalarFieldEnum[] | RateHistoryScalarFieldEnum
    having?: RateHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RateHistoryCountAggregateInputType | true
    _avg?: RateHistoryAvgAggregateInputType
    _sum?: RateHistorySumAggregateInputType
    _min?: RateHistoryMinAggregateInputType
    _max?: RateHistoryMaxAggregateInputType
  }

  export type RateHistoryGroupByOutputType = {
    id: string
    clientId: string
    oldBaseRate: number
    newBaseRate: number
    changeReason: string | null
    effectiveDate: Date
    changedBy: string | null
    createdAt: Date
    _count: RateHistoryCountAggregateOutputType | null
    _avg: RateHistoryAvgAggregateOutputType | null
    _sum: RateHistorySumAggregateOutputType | null
    _min: RateHistoryMinAggregateOutputType | null
    _max: RateHistoryMaxAggregateOutputType | null
  }

  type GetRateHistoryGroupByPayload<T extends RateHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RateHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RateHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RateHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], RateHistoryGroupByOutputType[P]>
        }
      >
    >


  export type RateHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    oldBaseRate?: boolean
    newBaseRate?: boolean
    changeReason?: boolean
    effectiveDate?: boolean
    changedBy?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["rateHistory"]>

  export type RateHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    oldBaseRate?: boolean
    newBaseRate?: boolean
    changeReason?: boolean
    effectiveDate?: boolean
    changedBy?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["rateHistory"]>

  export type RateHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    oldBaseRate?: boolean
    newBaseRate?: boolean
    changeReason?: boolean
    effectiveDate?: boolean
    changedBy?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["rateHistory"]>

  export type RateHistorySelectScalar = {
    id?: boolean
    clientId?: boolean
    oldBaseRate?: boolean
    newBaseRate?: boolean
    changeReason?: boolean
    effectiveDate?: boolean
    changedBy?: boolean
    createdAt?: boolean
  }

  export type RateHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "oldBaseRate" | "newBaseRate" | "changeReason" | "effectiveDate" | "changedBy" | "createdAt", ExtArgs["result"]["rateHistory"]>

  export type $RateHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RateHistory"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      oldBaseRate: number
      newBaseRate: number
      changeReason: string | null
      effectiveDate: Date
      changedBy: string | null
      createdAt: Date
    }, ExtArgs["result"]["rateHistory"]>
    composites: {}
  }

  type RateHistoryGetPayload<S extends boolean | null | undefined | RateHistoryDefaultArgs> = $Result.GetResult<Prisma.$RateHistoryPayload, S>

  type RateHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RateHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RateHistoryCountAggregateInputType | true
    }

  export interface RateHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RateHistory'], meta: { name: 'RateHistory' } }
    /**
     * Find zero or one RateHistory that matches the filter.
     * @param {RateHistoryFindUniqueArgs} args - Arguments to find a RateHistory
     * @example
     * // Get one RateHistory
     * const rateHistory = await prisma.rateHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RateHistoryFindUniqueArgs>(args: SelectSubset<T, RateHistoryFindUniqueArgs<ExtArgs>>): Prisma__RateHistoryClient<$Result.GetResult<Prisma.$RateHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RateHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RateHistoryFindUniqueOrThrowArgs} args - Arguments to find a RateHistory
     * @example
     * // Get one RateHistory
     * const rateHistory = await prisma.rateHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RateHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, RateHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RateHistoryClient<$Result.GetResult<Prisma.$RateHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RateHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RateHistoryFindFirstArgs} args - Arguments to find a RateHistory
     * @example
     * // Get one RateHistory
     * const rateHistory = await prisma.rateHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RateHistoryFindFirstArgs>(args?: SelectSubset<T, RateHistoryFindFirstArgs<ExtArgs>>): Prisma__RateHistoryClient<$Result.GetResult<Prisma.$RateHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RateHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RateHistoryFindFirstOrThrowArgs} args - Arguments to find a RateHistory
     * @example
     * // Get one RateHistory
     * const rateHistory = await prisma.rateHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RateHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, RateHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__RateHistoryClient<$Result.GetResult<Prisma.$RateHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RateHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RateHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RateHistories
     * const rateHistories = await prisma.rateHistory.findMany()
     * 
     * // Get first 10 RateHistories
     * const rateHistories = await prisma.rateHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rateHistoryWithIdOnly = await prisma.rateHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RateHistoryFindManyArgs>(args?: SelectSubset<T, RateHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RateHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RateHistory.
     * @param {RateHistoryCreateArgs} args - Arguments to create a RateHistory.
     * @example
     * // Create one RateHistory
     * const RateHistory = await prisma.rateHistory.create({
     *   data: {
     *     // ... data to create a RateHistory
     *   }
     * })
     * 
     */
    create<T extends RateHistoryCreateArgs>(args: SelectSubset<T, RateHistoryCreateArgs<ExtArgs>>): Prisma__RateHistoryClient<$Result.GetResult<Prisma.$RateHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RateHistories.
     * @param {RateHistoryCreateManyArgs} args - Arguments to create many RateHistories.
     * @example
     * // Create many RateHistories
     * const rateHistory = await prisma.rateHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RateHistoryCreateManyArgs>(args?: SelectSubset<T, RateHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RateHistories and returns the data saved in the database.
     * @param {RateHistoryCreateManyAndReturnArgs} args - Arguments to create many RateHistories.
     * @example
     * // Create many RateHistories
     * const rateHistory = await prisma.rateHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RateHistories and only return the `id`
     * const rateHistoryWithIdOnly = await prisma.rateHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RateHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, RateHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RateHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RateHistory.
     * @param {RateHistoryDeleteArgs} args - Arguments to delete one RateHistory.
     * @example
     * // Delete one RateHistory
     * const RateHistory = await prisma.rateHistory.delete({
     *   where: {
     *     // ... filter to delete one RateHistory
     *   }
     * })
     * 
     */
    delete<T extends RateHistoryDeleteArgs>(args: SelectSubset<T, RateHistoryDeleteArgs<ExtArgs>>): Prisma__RateHistoryClient<$Result.GetResult<Prisma.$RateHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RateHistory.
     * @param {RateHistoryUpdateArgs} args - Arguments to update one RateHistory.
     * @example
     * // Update one RateHistory
     * const rateHistory = await prisma.rateHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RateHistoryUpdateArgs>(args: SelectSubset<T, RateHistoryUpdateArgs<ExtArgs>>): Prisma__RateHistoryClient<$Result.GetResult<Prisma.$RateHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RateHistories.
     * @param {RateHistoryDeleteManyArgs} args - Arguments to filter RateHistories to delete.
     * @example
     * // Delete a few RateHistories
     * const { count } = await prisma.rateHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RateHistoryDeleteManyArgs>(args?: SelectSubset<T, RateHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RateHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RateHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RateHistories
     * const rateHistory = await prisma.rateHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RateHistoryUpdateManyArgs>(args: SelectSubset<T, RateHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RateHistories and returns the data updated in the database.
     * @param {RateHistoryUpdateManyAndReturnArgs} args - Arguments to update many RateHistories.
     * @example
     * // Update many RateHistories
     * const rateHistory = await prisma.rateHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RateHistories and only return the `id`
     * const rateHistoryWithIdOnly = await prisma.rateHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RateHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, RateHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RateHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RateHistory.
     * @param {RateHistoryUpsertArgs} args - Arguments to update or create a RateHistory.
     * @example
     * // Update or create a RateHistory
     * const rateHistory = await prisma.rateHistory.upsert({
     *   create: {
     *     // ... data to create a RateHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RateHistory we want to update
     *   }
     * })
     */
    upsert<T extends RateHistoryUpsertArgs>(args: SelectSubset<T, RateHistoryUpsertArgs<ExtArgs>>): Prisma__RateHistoryClient<$Result.GetResult<Prisma.$RateHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RateHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RateHistoryCountArgs} args - Arguments to filter RateHistories to count.
     * @example
     * // Count the number of RateHistories
     * const count = await prisma.rateHistory.count({
     *   where: {
     *     // ... the filter for the RateHistories we want to count
     *   }
     * })
    **/
    count<T extends RateHistoryCountArgs>(
      args?: Subset<T, RateHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RateHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RateHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RateHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RateHistoryAggregateArgs>(args: Subset<T, RateHistoryAggregateArgs>): Prisma.PrismaPromise<GetRateHistoryAggregateType<T>>

    /**
     * Group by RateHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RateHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RateHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RateHistoryGroupByArgs['orderBy'] }
        : { orderBy?: RateHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RateHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRateHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RateHistory model
   */
  readonly fields: RateHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RateHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RateHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RateHistory model
   */
  interface RateHistoryFieldRefs {
    readonly id: FieldRef<"RateHistory", 'String'>
    readonly clientId: FieldRef<"RateHistory", 'String'>
    readonly oldBaseRate: FieldRef<"RateHistory", 'Float'>
    readonly newBaseRate: FieldRef<"RateHistory", 'Float'>
    readonly changeReason: FieldRef<"RateHistory", 'String'>
    readonly effectiveDate: FieldRef<"RateHistory", 'DateTime'>
    readonly changedBy: FieldRef<"RateHistory", 'String'>
    readonly createdAt: FieldRef<"RateHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RateHistory findUnique
   */
  export type RateHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
    /**
     * Filter, which RateHistory to fetch.
     */
    where: RateHistoryWhereUniqueInput
  }

  /**
   * RateHistory findUniqueOrThrow
   */
  export type RateHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
    /**
     * Filter, which RateHistory to fetch.
     */
    where: RateHistoryWhereUniqueInput
  }

  /**
   * RateHistory findFirst
   */
  export type RateHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
    /**
     * Filter, which RateHistory to fetch.
     */
    where?: RateHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RateHistories to fetch.
     */
    orderBy?: RateHistoryOrderByWithRelationInput | RateHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RateHistories.
     */
    cursor?: RateHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RateHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RateHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RateHistories.
     */
    distinct?: RateHistoryScalarFieldEnum | RateHistoryScalarFieldEnum[]
  }

  /**
   * RateHistory findFirstOrThrow
   */
  export type RateHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
    /**
     * Filter, which RateHistory to fetch.
     */
    where?: RateHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RateHistories to fetch.
     */
    orderBy?: RateHistoryOrderByWithRelationInput | RateHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RateHistories.
     */
    cursor?: RateHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RateHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RateHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RateHistories.
     */
    distinct?: RateHistoryScalarFieldEnum | RateHistoryScalarFieldEnum[]
  }

  /**
   * RateHistory findMany
   */
  export type RateHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
    /**
     * Filter, which RateHistories to fetch.
     */
    where?: RateHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RateHistories to fetch.
     */
    orderBy?: RateHistoryOrderByWithRelationInput | RateHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RateHistories.
     */
    cursor?: RateHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RateHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RateHistories.
     */
    skip?: number
    distinct?: RateHistoryScalarFieldEnum | RateHistoryScalarFieldEnum[]
  }

  /**
   * RateHistory create
   */
  export type RateHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
    /**
     * The data needed to create a RateHistory.
     */
    data: XOR<RateHistoryCreateInput, RateHistoryUncheckedCreateInput>
  }

  /**
   * RateHistory createMany
   */
  export type RateHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RateHistories.
     */
    data: RateHistoryCreateManyInput | RateHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RateHistory createManyAndReturn
   */
  export type RateHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many RateHistories.
     */
    data: RateHistoryCreateManyInput | RateHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RateHistory update
   */
  export type RateHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
    /**
     * The data needed to update a RateHistory.
     */
    data: XOR<RateHistoryUpdateInput, RateHistoryUncheckedUpdateInput>
    /**
     * Choose, which RateHistory to update.
     */
    where: RateHistoryWhereUniqueInput
  }

  /**
   * RateHistory updateMany
   */
  export type RateHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RateHistories.
     */
    data: XOR<RateHistoryUpdateManyMutationInput, RateHistoryUncheckedUpdateManyInput>
    /**
     * Filter which RateHistories to update
     */
    where?: RateHistoryWhereInput
    /**
     * Limit how many RateHistories to update.
     */
    limit?: number
  }

  /**
   * RateHistory updateManyAndReturn
   */
  export type RateHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
    /**
     * The data used to update RateHistories.
     */
    data: XOR<RateHistoryUpdateManyMutationInput, RateHistoryUncheckedUpdateManyInput>
    /**
     * Filter which RateHistories to update
     */
    where?: RateHistoryWhereInput
    /**
     * Limit how many RateHistories to update.
     */
    limit?: number
  }

  /**
   * RateHistory upsert
   */
  export type RateHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
    /**
     * The filter to search for the RateHistory to update in case it exists.
     */
    where: RateHistoryWhereUniqueInput
    /**
     * In case the RateHistory found by the `where` argument doesn't exist, create a new RateHistory with this data.
     */
    create: XOR<RateHistoryCreateInput, RateHistoryUncheckedCreateInput>
    /**
     * In case the RateHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RateHistoryUpdateInput, RateHistoryUncheckedUpdateInput>
  }

  /**
   * RateHistory delete
   */
  export type RateHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
    /**
     * Filter which RateHistory to delete.
     */
    where: RateHistoryWhereUniqueInput
  }

  /**
   * RateHistory deleteMany
   */
  export type RateHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RateHistories to delete
     */
    where?: RateHistoryWhereInput
    /**
     * Limit how many RateHistories to delete.
     */
    limit?: number
  }

  /**
   * RateHistory without action
   */
  export type RateHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RateHistory
     */
    select?: RateHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RateHistory
     */
    omit?: RateHistoryOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    displayName: 'displayName',
    code: 'code',
    state: 'state',
    country: 'country',
    timezone: 'timezone',
    latitude: 'latitude',
    longitude: 'longitude',
    pinCodeRange: 'pinCodeRange',
    regionCode: 'regionCode',
    isActive: 'isActive',
    isOperational: 'isOperational',
    launchDate: 'launchDate',
    estimatedPopulation: 'estimatedPopulation',
    marketPotential: 'marketPotential',
    version: 'version',
    lastModifiedBy: 'lastModifiedBy',
    eventSequence: 'eventSequence',
    lastSyncAt: 'lastSyncAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CityScalarFieldEnum = (typeof CityScalarFieldEnum)[keyof typeof CityScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    firstName: 'firstName',
    lastName: 'lastName',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const ClientScalarFieldEnum: {
    id: 'id',
    name: 'name',
    clientCode: 'clientCode',
    clientType: 'clientType',
    industrySector: 'industrySector',
    businessCategory: 'businessCategory',
    primaryContactPerson: 'primaryContactPerson',
    designation: 'designation',
    email: 'email',
    secondaryEmail: 'secondaryEmail',
    phone: 'phone',
    secondaryPhone: 'secondaryPhone',
    city: 'city',
    state: 'state',
    pinCode: 'pinCode',
    registrationNumber: 'registrationNumber',
    panNumber: 'panNumber',
    gstNumber: 'gstNumber',
    evPortfolio: 'evPortfolio',
    fleetSize: 'fleetSize',
    hasChargingInfra: 'hasChargingInfra',
    chargingInfraDetails: 'chargingInfraDetails',
    batteryTechPreference: 'batteryTechPreference',
    serviceRequirements: 'serviceRequirements',
    paymentTerms: 'paymentTerms',
    preferredPaymentMethod: 'preferredPaymentMethod',
    taxCategory: 'taxCategory',
    discountCategory: 'discountCategory',
    baseOrderRate: 'baseOrderRate',
    rateEffectiveDate: 'rateEffectiveDate',
    rateType: 'rateType',
    minimumRate: 'minimumRate',
    maximumRate: 'maximumRate',
    bulkBonusEnabled: 'bulkBonusEnabled',
    bulkOrdersThreshold: 'bulkOrdersThreshold',
    bulkBonusAmount: 'bulkBonusAmount',
    bulkResetPeriod: 'bulkResetPeriod',
    weeklyBonusEnabled: 'weeklyBonusEnabled',
    weeklyOrderTarget: 'weeklyOrderTarget',
    weeklyBonusAmount: 'weeklyBonusAmount',
    performanceMultiplierEnabled: 'performanceMultiplierEnabled',
    topPerformerRate: 'topPerformerRate',
    performanceCriteria: 'performanceCriteria',
    paymentCycle: 'paymentCycle',
    paymentMethods: 'paymentMethods',
    minimumPayout: 'minimumPayout',
    payoutDay: 'payoutDay',
    clientStatus: 'clientStatus',
    acquisitionDate: 'acquisitionDate',
    accountManagerId: 'accountManagerId',
    clientPriority: 'clientPriority',
    relationshipType: 'relationshipType',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ClientScalarFieldEnum = (typeof ClientScalarFieldEnum)[keyof typeof ClientScalarFieldEnum]


  export const StoreScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    storeName: 'storeName',
    storeCode: 'storeCode',
    storeType: 'storeType',
    brandFranchise: 'brandFranchise',
    completeAddress: 'completeAddress',
    city: 'city',
    state: 'state',
    country: 'country',
    pinCode: 'pinCode',
    landmark: 'landmark',
    gpsLatitude: 'gpsLatitude',
    gpsLongitude: 'gpsLongitude',
    zoneRegion: 'zoneRegion',
    storeManagerName: 'storeManagerName',
    contactNumber: 'contactNumber',
    emailAddress: 'emailAddress',
    whatsappNumber: 'whatsappNumber',
    storeStatus: 'storeStatus',
    currentOfferRate: 'currentOfferRate',
    offerStartDate: 'offerStartDate',
    offerEndDate: 'offerEndDate',
    offerType: 'offerType',
    offerReason: 'offerReason',
    isOfferActive: 'isOfferActive',
    busyLevel: 'busyLevel',
    averageOrdersPerDay: 'averageOrdersPerDay',
    peakHours: 'peakHours',
    busyDays: 'busyDays',
    orderDifficultyLevel: 'orderDifficultyLevel',
    averageDeliveryDistance: 'averageDeliveryDistance',
    monthlyOrderVolume: 'monthlyOrderVolume',
    riderRating: 'riderRating',
    averagePickupTime: 'averagePickupTime',
    storePriority: 'storePriority',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type StoreScalarFieldEnum = (typeof StoreScalarFieldEnum)[keyof typeof StoreScalarFieldEnum]


  export const RiderEarningScalarFieldEnum: {
    id: 'id',
    riderId: 'riderId',
    clientId: 'clientId',
    storeId: 'storeId',
    orderId: 'orderId',
    baseRate: 'baseRate',
    storeOfferRate: 'storeOfferRate',
    totalRate: 'totalRate',
    bulkOrderBonus: 'bulkOrderBonus',
    performanceBonus: 'performanceBonus',
    weeklyTargetBonus: 'weeklyTargetBonus',
    specialEventBonus: 'specialEventBonus',
    finalEarning: 'finalEarning',
    orderDate: 'orderDate',
    deliveryTime: 'deliveryTime',
    riderRating: 'riderRating',
    distance: 'distance',
    bonusesApplied: 'bonusesApplied',
    rateCalculationLog: 'rateCalculationLog',
    paymentStatus: 'paymentStatus',
    paymentDate: 'paymentDate',
    paymentMethod: 'paymentMethod',
    paymentReference: 'paymentReference',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RiderEarningScalarFieldEnum = (typeof RiderEarningScalarFieldEnum)[keyof typeof RiderEarningScalarFieldEnum]


  export const WeeklyRiderSummaryScalarFieldEnum: {
    id: 'id',
    riderId: 'riderId',
    weekStartDate: 'weekStartDate',
    weekEndDate: 'weekEndDate',
    totalOrders: 'totalOrders',
    averageOrdersPerDay: 'averageOrdersPerDay',
    bestDayOrders: 'bestDayOrders',
    worstDayOrders: 'worstDayOrders',
    baseEarnings: 'baseEarnings',
    offerEarnings: 'offerEarnings',
    bonusEarnings: 'bonusEarnings',
    totalEarnings: 'totalEarnings',
    averageRating: 'averageRating',
    averageDeliveryTime: 'averageDeliveryTime',
    onTimeDeliveryPercentage: 'onTimeDeliveryPercentage',
    totalDistance: 'totalDistance',
    dailyTargetAchieved: 'dailyTargetAchieved',
    weeklyTargetAchieved: 'weeklyTargetAchieved',
    bonusesEarned: 'bonusesEarned',
    topClientId: 'topClientId',
    topStoreId: 'topStoreId',
    citiesWorked: 'citiesWorked',
    totalPaid: 'totalPaid',
    pendingAmount: 'pendingAmount',
    paymentCount: 'paymentCount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type WeeklyRiderSummaryScalarFieldEnum = (typeof WeeklyRiderSummaryScalarFieldEnum)[keyof typeof WeeklyRiderSummaryScalarFieldEnum]


  export const RateHistoryScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    oldBaseRate: 'oldBaseRate',
    newBaseRate: 'newBaseRate',
    changeReason: 'changeReason',
    effectiveDate: 'effectiveDate',
    changedBy: 'changedBy',
    createdAt: 'createdAt'
  };

  export type RateHistoryScalarFieldEnum = (typeof RateHistoryScalarFieldEnum)[keyof typeof RateHistoryScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    
  /**
   * Deep Input Types
   */


  export type CityWhereInput = {
    AND?: CityWhereInput | CityWhereInput[]
    OR?: CityWhereInput[]
    NOT?: CityWhereInput | CityWhereInput[]
    id?: StringFilter<"City"> | string
    name?: StringFilter<"City"> | string
    displayName?: StringFilter<"City"> | string
    code?: StringFilter<"City"> | string
    state?: StringFilter<"City"> | string
    country?: StringFilter<"City"> | string
    timezone?: StringFilter<"City"> | string
    latitude?: FloatFilter<"City"> | number
    longitude?: FloatFilter<"City"> | number
    pinCodeRange?: StringNullableFilter<"City"> | string | null
    regionCode?: StringNullableFilter<"City"> | string | null
    isActive?: BoolFilter<"City"> | boolean
    isOperational?: BoolFilter<"City"> | boolean
    launchDate?: DateTimeNullableFilter<"City"> | Date | string | null
    estimatedPopulation?: IntNullableFilter<"City"> | number | null
    marketPotential?: StringNullableFilter<"City"> | string | null
    version?: IntFilter<"City"> | number
    lastModifiedBy?: StringNullableFilter<"City"> | string | null
    eventSequence?: IntFilter<"City"> | number
    lastSyncAt?: DateTimeFilter<"City"> | Date | string
    createdAt?: DateTimeFilter<"City"> | Date | string
    updatedAt?: DateTimeFilter<"City"> | Date | string
  }

  export type CityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    code?: SortOrder
    state?: SortOrder
    country?: SortOrder
    timezone?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    pinCodeRange?: SortOrderInput | SortOrder
    regionCode?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isOperational?: SortOrder
    launchDate?: SortOrderInput | SortOrder
    estimatedPopulation?: SortOrderInput | SortOrder
    marketPotential?: SortOrderInput | SortOrder
    version?: SortOrder
    lastModifiedBy?: SortOrderInput | SortOrder
    eventSequence?: SortOrder
    lastSyncAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    code?: string
    AND?: CityWhereInput | CityWhereInput[]
    OR?: CityWhereInput[]
    NOT?: CityWhereInput | CityWhereInput[]
    displayName?: StringFilter<"City"> | string
    state?: StringFilter<"City"> | string
    country?: StringFilter<"City"> | string
    timezone?: StringFilter<"City"> | string
    latitude?: FloatFilter<"City"> | number
    longitude?: FloatFilter<"City"> | number
    pinCodeRange?: StringNullableFilter<"City"> | string | null
    regionCode?: StringNullableFilter<"City"> | string | null
    isActive?: BoolFilter<"City"> | boolean
    isOperational?: BoolFilter<"City"> | boolean
    launchDate?: DateTimeNullableFilter<"City"> | Date | string | null
    estimatedPopulation?: IntNullableFilter<"City"> | number | null
    marketPotential?: StringNullableFilter<"City"> | string | null
    version?: IntFilter<"City"> | number
    lastModifiedBy?: StringNullableFilter<"City"> | string | null
    eventSequence?: IntFilter<"City"> | number
    lastSyncAt?: DateTimeFilter<"City"> | Date | string
    createdAt?: DateTimeFilter<"City"> | Date | string
    updatedAt?: DateTimeFilter<"City"> | Date | string
  }, "id" | "name" | "code">

  export type CityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    code?: SortOrder
    state?: SortOrder
    country?: SortOrder
    timezone?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    pinCodeRange?: SortOrderInput | SortOrder
    regionCode?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isOperational?: SortOrder
    launchDate?: SortOrderInput | SortOrder
    estimatedPopulation?: SortOrderInput | SortOrder
    marketPotential?: SortOrderInput | SortOrder
    version?: SortOrder
    lastModifiedBy?: SortOrderInput | SortOrder
    eventSequence?: SortOrder
    lastSyncAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CityCountOrderByAggregateInput
    _avg?: CityAvgOrderByAggregateInput
    _max?: CityMaxOrderByAggregateInput
    _min?: CityMinOrderByAggregateInput
    _sum?: CitySumOrderByAggregateInput
  }

  export type CityScalarWhereWithAggregatesInput = {
    AND?: CityScalarWhereWithAggregatesInput | CityScalarWhereWithAggregatesInput[]
    OR?: CityScalarWhereWithAggregatesInput[]
    NOT?: CityScalarWhereWithAggregatesInput | CityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"City"> | string
    name?: StringWithAggregatesFilter<"City"> | string
    displayName?: StringWithAggregatesFilter<"City"> | string
    code?: StringWithAggregatesFilter<"City"> | string
    state?: StringWithAggregatesFilter<"City"> | string
    country?: StringWithAggregatesFilter<"City"> | string
    timezone?: StringWithAggregatesFilter<"City"> | string
    latitude?: FloatWithAggregatesFilter<"City"> | number
    longitude?: FloatWithAggregatesFilter<"City"> | number
    pinCodeRange?: StringNullableWithAggregatesFilter<"City"> | string | null
    regionCode?: StringNullableWithAggregatesFilter<"City"> | string | null
    isActive?: BoolWithAggregatesFilter<"City"> | boolean
    isOperational?: BoolWithAggregatesFilter<"City"> | boolean
    launchDate?: DateTimeNullableWithAggregatesFilter<"City"> | Date | string | null
    estimatedPopulation?: IntNullableWithAggregatesFilter<"City"> | number | null
    marketPotential?: StringNullableWithAggregatesFilter<"City"> | string | null
    version?: IntWithAggregatesFilter<"City"> | number
    lastModifiedBy?: StringNullableWithAggregatesFilter<"City"> | string | null
    eventSequence?: IntWithAggregatesFilter<"City"> | number
    lastSyncAt?: DateTimeWithAggregatesFilter<"City"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"City"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"City"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    isActive?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    clientsManaged?: ClientListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientsManaged?: ClientOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    isActive?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    clientsManaged?: ClientListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type ClientWhereInput = {
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    id?: StringFilter<"Client"> | string
    name?: StringFilter<"Client"> | string
    clientCode?: StringFilter<"Client"> | string
    clientType?: StringFilter<"Client"> | string
    industrySector?: StringNullableFilter<"Client"> | string | null
    businessCategory?: StringNullableFilter<"Client"> | string | null
    primaryContactPerson?: StringNullableFilter<"Client"> | string | null
    designation?: StringNullableFilter<"Client"> | string | null
    email?: StringNullableFilter<"Client"> | string | null
    secondaryEmail?: StringNullableFilter<"Client"> | string | null
    phone?: StringNullableFilter<"Client"> | string | null
    secondaryPhone?: StringNullableFilter<"Client"> | string | null
    city?: StringNullableFilter<"Client"> | string | null
    state?: StringNullableFilter<"Client"> | string | null
    pinCode?: StringNullableFilter<"Client"> | string | null
    registrationNumber?: StringNullableFilter<"Client"> | string | null
    panNumber?: StringNullableFilter<"Client"> | string | null
    gstNumber?: StringNullableFilter<"Client"> | string | null
    evPortfolio?: StringNullableFilter<"Client"> | string | null
    fleetSize?: IntNullableFilter<"Client"> | number | null
    hasChargingInfra?: BoolFilter<"Client"> | boolean
    chargingInfraDetails?: StringNullableFilter<"Client"> | string | null
    batteryTechPreference?: StringNullableFilter<"Client"> | string | null
    serviceRequirements?: StringNullableFilter<"Client"> | string | null
    paymentTerms?: StringNullableFilter<"Client"> | string | null
    preferredPaymentMethod?: StringNullableFilter<"Client"> | string | null
    taxCategory?: StringNullableFilter<"Client"> | string | null
    discountCategory?: StringNullableFilter<"Client"> | string | null
    baseOrderRate?: FloatFilter<"Client"> | number
    rateEffectiveDate?: DateTimeFilter<"Client"> | Date | string
    rateType?: StringFilter<"Client"> | string
    minimumRate?: FloatFilter<"Client"> | number
    maximumRate?: FloatFilter<"Client"> | number
    bulkBonusEnabled?: BoolFilter<"Client"> | boolean
    bulkOrdersThreshold?: IntFilter<"Client"> | number
    bulkBonusAmount?: FloatFilter<"Client"> | number
    bulkResetPeriod?: StringFilter<"Client"> | string
    weeklyBonusEnabled?: BoolFilter<"Client"> | boolean
    weeklyOrderTarget?: IntFilter<"Client"> | number
    weeklyBonusAmount?: FloatFilter<"Client"> | number
    performanceMultiplierEnabled?: BoolFilter<"Client"> | boolean
    topPerformerRate?: FloatFilter<"Client"> | number
    performanceCriteria?: StringFilter<"Client"> | string
    paymentCycle?: StringFilter<"Client"> | string
    paymentMethods?: StringNullableFilter<"Client"> | string | null
    minimumPayout?: FloatFilter<"Client"> | number
    payoutDay?: StringFilter<"Client"> | string
    clientStatus?: StringFilter<"Client"> | string
    acquisitionDate?: DateTimeFilter<"Client"> | Date | string
    accountManagerId?: StringNullableFilter<"Client"> | string | null
    clientPriority?: StringFilter<"Client"> | string
    relationshipType?: StringFilter<"Client"> | string
    createdAt?: DateTimeFilter<"Client"> | Date | string
    updatedAt?: DateTimeFilter<"Client"> | Date | string
    stores?: StoreListRelationFilter
    accountManager?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    riderEarnings?: RiderEarningListRelationFilter
  }

  export type ClientOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    clientCode?: SortOrder
    clientType?: SortOrder
    industrySector?: SortOrderInput | SortOrder
    businessCategory?: SortOrderInput | SortOrder
    primaryContactPerson?: SortOrderInput | SortOrder
    designation?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    secondaryEmail?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    secondaryPhone?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    pinCode?: SortOrderInput | SortOrder
    registrationNumber?: SortOrderInput | SortOrder
    panNumber?: SortOrderInput | SortOrder
    gstNumber?: SortOrderInput | SortOrder
    evPortfolio?: SortOrderInput | SortOrder
    fleetSize?: SortOrderInput | SortOrder
    hasChargingInfra?: SortOrder
    chargingInfraDetails?: SortOrderInput | SortOrder
    batteryTechPreference?: SortOrderInput | SortOrder
    serviceRequirements?: SortOrderInput | SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    preferredPaymentMethod?: SortOrderInput | SortOrder
    taxCategory?: SortOrderInput | SortOrder
    discountCategory?: SortOrderInput | SortOrder
    baseOrderRate?: SortOrder
    rateEffectiveDate?: SortOrder
    rateType?: SortOrder
    minimumRate?: SortOrder
    maximumRate?: SortOrder
    bulkBonusEnabled?: SortOrder
    bulkOrdersThreshold?: SortOrder
    bulkBonusAmount?: SortOrder
    bulkResetPeriod?: SortOrder
    weeklyBonusEnabled?: SortOrder
    weeklyOrderTarget?: SortOrder
    weeklyBonusAmount?: SortOrder
    performanceMultiplierEnabled?: SortOrder
    topPerformerRate?: SortOrder
    performanceCriteria?: SortOrder
    paymentCycle?: SortOrder
    paymentMethods?: SortOrderInput | SortOrder
    minimumPayout?: SortOrder
    payoutDay?: SortOrder
    clientStatus?: SortOrder
    acquisitionDate?: SortOrder
    accountManagerId?: SortOrderInput | SortOrder
    clientPriority?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    stores?: StoreOrderByRelationAggregateInput
    accountManager?: UserOrderByWithRelationInput
    riderEarnings?: RiderEarningOrderByRelationAggregateInput
  }

  export type ClientWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    clientCode?: string
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    clientType?: StringFilter<"Client"> | string
    industrySector?: StringNullableFilter<"Client"> | string | null
    businessCategory?: StringNullableFilter<"Client"> | string | null
    primaryContactPerson?: StringNullableFilter<"Client"> | string | null
    designation?: StringNullableFilter<"Client"> | string | null
    email?: StringNullableFilter<"Client"> | string | null
    secondaryEmail?: StringNullableFilter<"Client"> | string | null
    phone?: StringNullableFilter<"Client"> | string | null
    secondaryPhone?: StringNullableFilter<"Client"> | string | null
    city?: StringNullableFilter<"Client"> | string | null
    state?: StringNullableFilter<"Client"> | string | null
    pinCode?: StringNullableFilter<"Client"> | string | null
    registrationNumber?: StringNullableFilter<"Client"> | string | null
    panNumber?: StringNullableFilter<"Client"> | string | null
    gstNumber?: StringNullableFilter<"Client"> | string | null
    evPortfolio?: StringNullableFilter<"Client"> | string | null
    fleetSize?: IntNullableFilter<"Client"> | number | null
    hasChargingInfra?: BoolFilter<"Client"> | boolean
    chargingInfraDetails?: StringNullableFilter<"Client"> | string | null
    batteryTechPreference?: StringNullableFilter<"Client"> | string | null
    serviceRequirements?: StringNullableFilter<"Client"> | string | null
    paymentTerms?: StringNullableFilter<"Client"> | string | null
    preferredPaymentMethod?: StringNullableFilter<"Client"> | string | null
    taxCategory?: StringNullableFilter<"Client"> | string | null
    discountCategory?: StringNullableFilter<"Client"> | string | null
    baseOrderRate?: FloatFilter<"Client"> | number
    rateEffectiveDate?: DateTimeFilter<"Client"> | Date | string
    rateType?: StringFilter<"Client"> | string
    minimumRate?: FloatFilter<"Client"> | number
    maximumRate?: FloatFilter<"Client"> | number
    bulkBonusEnabled?: BoolFilter<"Client"> | boolean
    bulkOrdersThreshold?: IntFilter<"Client"> | number
    bulkBonusAmount?: FloatFilter<"Client"> | number
    bulkResetPeriod?: StringFilter<"Client"> | string
    weeklyBonusEnabled?: BoolFilter<"Client"> | boolean
    weeklyOrderTarget?: IntFilter<"Client"> | number
    weeklyBonusAmount?: FloatFilter<"Client"> | number
    performanceMultiplierEnabled?: BoolFilter<"Client"> | boolean
    topPerformerRate?: FloatFilter<"Client"> | number
    performanceCriteria?: StringFilter<"Client"> | string
    paymentCycle?: StringFilter<"Client"> | string
    paymentMethods?: StringNullableFilter<"Client"> | string | null
    minimumPayout?: FloatFilter<"Client"> | number
    payoutDay?: StringFilter<"Client"> | string
    clientStatus?: StringFilter<"Client"> | string
    acquisitionDate?: DateTimeFilter<"Client"> | Date | string
    accountManagerId?: StringNullableFilter<"Client"> | string | null
    clientPriority?: StringFilter<"Client"> | string
    relationshipType?: StringFilter<"Client"> | string
    createdAt?: DateTimeFilter<"Client"> | Date | string
    updatedAt?: DateTimeFilter<"Client"> | Date | string
    stores?: StoreListRelationFilter
    accountManager?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    riderEarnings?: RiderEarningListRelationFilter
  }, "id" | "name" | "clientCode">

  export type ClientOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    clientCode?: SortOrder
    clientType?: SortOrder
    industrySector?: SortOrderInput | SortOrder
    businessCategory?: SortOrderInput | SortOrder
    primaryContactPerson?: SortOrderInput | SortOrder
    designation?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    secondaryEmail?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    secondaryPhone?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    pinCode?: SortOrderInput | SortOrder
    registrationNumber?: SortOrderInput | SortOrder
    panNumber?: SortOrderInput | SortOrder
    gstNumber?: SortOrderInput | SortOrder
    evPortfolio?: SortOrderInput | SortOrder
    fleetSize?: SortOrderInput | SortOrder
    hasChargingInfra?: SortOrder
    chargingInfraDetails?: SortOrderInput | SortOrder
    batteryTechPreference?: SortOrderInput | SortOrder
    serviceRequirements?: SortOrderInput | SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    preferredPaymentMethod?: SortOrderInput | SortOrder
    taxCategory?: SortOrderInput | SortOrder
    discountCategory?: SortOrderInput | SortOrder
    baseOrderRate?: SortOrder
    rateEffectiveDate?: SortOrder
    rateType?: SortOrder
    minimumRate?: SortOrder
    maximumRate?: SortOrder
    bulkBonusEnabled?: SortOrder
    bulkOrdersThreshold?: SortOrder
    bulkBonusAmount?: SortOrder
    bulkResetPeriod?: SortOrder
    weeklyBonusEnabled?: SortOrder
    weeklyOrderTarget?: SortOrder
    weeklyBonusAmount?: SortOrder
    performanceMultiplierEnabled?: SortOrder
    topPerformerRate?: SortOrder
    performanceCriteria?: SortOrder
    paymentCycle?: SortOrder
    paymentMethods?: SortOrderInput | SortOrder
    minimumPayout?: SortOrder
    payoutDay?: SortOrder
    clientStatus?: SortOrder
    acquisitionDate?: SortOrder
    accountManagerId?: SortOrderInput | SortOrder
    clientPriority?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ClientCountOrderByAggregateInput
    _avg?: ClientAvgOrderByAggregateInput
    _max?: ClientMaxOrderByAggregateInput
    _min?: ClientMinOrderByAggregateInput
    _sum?: ClientSumOrderByAggregateInput
  }

  export type ClientScalarWhereWithAggregatesInput = {
    AND?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    OR?: ClientScalarWhereWithAggregatesInput[]
    NOT?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Client"> | string
    name?: StringWithAggregatesFilter<"Client"> | string
    clientCode?: StringWithAggregatesFilter<"Client"> | string
    clientType?: StringWithAggregatesFilter<"Client"> | string
    industrySector?: StringNullableWithAggregatesFilter<"Client"> | string | null
    businessCategory?: StringNullableWithAggregatesFilter<"Client"> | string | null
    primaryContactPerson?: StringNullableWithAggregatesFilter<"Client"> | string | null
    designation?: StringNullableWithAggregatesFilter<"Client"> | string | null
    email?: StringNullableWithAggregatesFilter<"Client"> | string | null
    secondaryEmail?: StringNullableWithAggregatesFilter<"Client"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Client"> | string | null
    secondaryPhone?: StringNullableWithAggregatesFilter<"Client"> | string | null
    city?: StringNullableWithAggregatesFilter<"Client"> | string | null
    state?: StringNullableWithAggregatesFilter<"Client"> | string | null
    pinCode?: StringNullableWithAggregatesFilter<"Client"> | string | null
    registrationNumber?: StringNullableWithAggregatesFilter<"Client"> | string | null
    panNumber?: StringNullableWithAggregatesFilter<"Client"> | string | null
    gstNumber?: StringNullableWithAggregatesFilter<"Client"> | string | null
    evPortfolio?: StringNullableWithAggregatesFilter<"Client"> | string | null
    fleetSize?: IntNullableWithAggregatesFilter<"Client"> | number | null
    hasChargingInfra?: BoolWithAggregatesFilter<"Client"> | boolean
    chargingInfraDetails?: StringNullableWithAggregatesFilter<"Client"> | string | null
    batteryTechPreference?: StringNullableWithAggregatesFilter<"Client"> | string | null
    serviceRequirements?: StringNullableWithAggregatesFilter<"Client"> | string | null
    paymentTerms?: StringNullableWithAggregatesFilter<"Client"> | string | null
    preferredPaymentMethod?: StringNullableWithAggregatesFilter<"Client"> | string | null
    taxCategory?: StringNullableWithAggregatesFilter<"Client"> | string | null
    discountCategory?: StringNullableWithAggregatesFilter<"Client"> | string | null
    baseOrderRate?: FloatWithAggregatesFilter<"Client"> | number
    rateEffectiveDate?: DateTimeWithAggregatesFilter<"Client"> | Date | string
    rateType?: StringWithAggregatesFilter<"Client"> | string
    minimumRate?: FloatWithAggregatesFilter<"Client"> | number
    maximumRate?: FloatWithAggregatesFilter<"Client"> | number
    bulkBonusEnabled?: BoolWithAggregatesFilter<"Client"> | boolean
    bulkOrdersThreshold?: IntWithAggregatesFilter<"Client"> | number
    bulkBonusAmount?: FloatWithAggregatesFilter<"Client"> | number
    bulkResetPeriod?: StringWithAggregatesFilter<"Client"> | string
    weeklyBonusEnabled?: BoolWithAggregatesFilter<"Client"> | boolean
    weeklyOrderTarget?: IntWithAggregatesFilter<"Client"> | number
    weeklyBonusAmount?: FloatWithAggregatesFilter<"Client"> | number
    performanceMultiplierEnabled?: BoolWithAggregatesFilter<"Client"> | boolean
    topPerformerRate?: FloatWithAggregatesFilter<"Client"> | number
    performanceCriteria?: StringWithAggregatesFilter<"Client"> | string
    paymentCycle?: StringWithAggregatesFilter<"Client"> | string
    paymentMethods?: StringNullableWithAggregatesFilter<"Client"> | string | null
    minimumPayout?: FloatWithAggregatesFilter<"Client"> | number
    payoutDay?: StringWithAggregatesFilter<"Client"> | string
    clientStatus?: StringWithAggregatesFilter<"Client"> | string
    acquisitionDate?: DateTimeWithAggregatesFilter<"Client"> | Date | string
    accountManagerId?: StringNullableWithAggregatesFilter<"Client"> | string | null
    clientPriority?: StringWithAggregatesFilter<"Client"> | string
    relationshipType?: StringWithAggregatesFilter<"Client"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Client"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Client"> | Date | string
  }

  export type StoreWhereInput = {
    AND?: StoreWhereInput | StoreWhereInput[]
    OR?: StoreWhereInput[]
    NOT?: StoreWhereInput | StoreWhereInput[]
    id?: StringFilter<"Store"> | string
    clientId?: StringFilter<"Store"> | string
    storeName?: StringFilter<"Store"> | string
    storeCode?: StringFilter<"Store"> | string
    storeType?: StringFilter<"Store"> | string
    brandFranchise?: StringNullableFilter<"Store"> | string | null
    completeAddress?: StringFilter<"Store"> | string
    city?: StringFilter<"Store"> | string
    state?: StringFilter<"Store"> | string
    country?: StringFilter<"Store"> | string
    pinCode?: StringFilter<"Store"> | string
    landmark?: StringNullableFilter<"Store"> | string | null
    gpsLatitude?: FloatNullableFilter<"Store"> | number | null
    gpsLongitude?: FloatNullableFilter<"Store"> | number | null
    zoneRegion?: StringNullableFilter<"Store"> | string | null
    storeManagerName?: StringNullableFilter<"Store"> | string | null
    contactNumber?: StringNullableFilter<"Store"> | string | null
    emailAddress?: StringNullableFilter<"Store"> | string | null
    whatsappNumber?: StringNullableFilter<"Store"> | string | null
    storeStatus?: StringFilter<"Store"> | string
    currentOfferRate?: FloatFilter<"Store"> | number
    offerStartDate?: DateTimeNullableFilter<"Store"> | Date | string | null
    offerEndDate?: DateTimeNullableFilter<"Store"> | Date | string | null
    offerType?: StringFilter<"Store"> | string
    offerReason?: StringNullableFilter<"Store"> | string | null
    isOfferActive?: BoolFilter<"Store"> | boolean
    busyLevel?: StringFilter<"Store"> | string
    averageOrdersPerDay?: IntFilter<"Store"> | number
    peakHours?: StringNullableFilter<"Store"> | string | null
    busyDays?: StringNullableFilter<"Store"> | string | null
    orderDifficultyLevel?: StringFilter<"Store"> | string
    averageDeliveryDistance?: FloatFilter<"Store"> | number
    monthlyOrderVolume?: IntFilter<"Store"> | number
    riderRating?: FloatFilter<"Store"> | number
    averagePickupTime?: IntFilter<"Store"> | number
    storePriority?: StringFilter<"Store"> | string
    createdAt?: DateTimeFilter<"Store"> | Date | string
    updatedAt?: DateTimeFilter<"Store"> | Date | string
    client?: XOR<ClientScalarRelationFilter, ClientWhereInput>
    riderEarnings?: RiderEarningListRelationFilter
  }

  export type StoreOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    storeName?: SortOrder
    storeCode?: SortOrder
    storeType?: SortOrder
    brandFranchise?: SortOrderInput | SortOrder
    completeAddress?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    pinCode?: SortOrder
    landmark?: SortOrderInput | SortOrder
    gpsLatitude?: SortOrderInput | SortOrder
    gpsLongitude?: SortOrderInput | SortOrder
    zoneRegion?: SortOrderInput | SortOrder
    storeManagerName?: SortOrderInput | SortOrder
    contactNumber?: SortOrderInput | SortOrder
    emailAddress?: SortOrderInput | SortOrder
    whatsappNumber?: SortOrderInput | SortOrder
    storeStatus?: SortOrder
    currentOfferRate?: SortOrder
    offerStartDate?: SortOrderInput | SortOrder
    offerEndDate?: SortOrderInput | SortOrder
    offerType?: SortOrder
    offerReason?: SortOrderInput | SortOrder
    isOfferActive?: SortOrder
    busyLevel?: SortOrder
    averageOrdersPerDay?: SortOrder
    peakHours?: SortOrderInput | SortOrder
    busyDays?: SortOrderInput | SortOrder
    orderDifficultyLevel?: SortOrder
    averageDeliveryDistance?: SortOrder
    monthlyOrderVolume?: SortOrder
    riderRating?: SortOrder
    averagePickupTime?: SortOrder
    storePriority?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    client?: ClientOrderByWithRelationInput
    riderEarnings?: RiderEarningOrderByRelationAggregateInput
  }

  export type StoreWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    storeCode?: string
    clientId_storeCode?: StoreClientIdStoreCodeCompoundUniqueInput
    AND?: StoreWhereInput | StoreWhereInput[]
    OR?: StoreWhereInput[]
    NOT?: StoreWhereInput | StoreWhereInput[]
    clientId?: StringFilter<"Store"> | string
    storeName?: StringFilter<"Store"> | string
    storeType?: StringFilter<"Store"> | string
    brandFranchise?: StringNullableFilter<"Store"> | string | null
    completeAddress?: StringFilter<"Store"> | string
    city?: StringFilter<"Store"> | string
    state?: StringFilter<"Store"> | string
    country?: StringFilter<"Store"> | string
    pinCode?: StringFilter<"Store"> | string
    landmark?: StringNullableFilter<"Store"> | string | null
    gpsLatitude?: FloatNullableFilter<"Store"> | number | null
    gpsLongitude?: FloatNullableFilter<"Store"> | number | null
    zoneRegion?: StringNullableFilter<"Store"> | string | null
    storeManagerName?: StringNullableFilter<"Store"> | string | null
    contactNumber?: StringNullableFilter<"Store"> | string | null
    emailAddress?: StringNullableFilter<"Store"> | string | null
    whatsappNumber?: StringNullableFilter<"Store"> | string | null
    storeStatus?: StringFilter<"Store"> | string
    currentOfferRate?: FloatFilter<"Store"> | number
    offerStartDate?: DateTimeNullableFilter<"Store"> | Date | string | null
    offerEndDate?: DateTimeNullableFilter<"Store"> | Date | string | null
    offerType?: StringFilter<"Store"> | string
    offerReason?: StringNullableFilter<"Store"> | string | null
    isOfferActive?: BoolFilter<"Store"> | boolean
    busyLevel?: StringFilter<"Store"> | string
    averageOrdersPerDay?: IntFilter<"Store"> | number
    peakHours?: StringNullableFilter<"Store"> | string | null
    busyDays?: StringNullableFilter<"Store"> | string | null
    orderDifficultyLevel?: StringFilter<"Store"> | string
    averageDeliveryDistance?: FloatFilter<"Store"> | number
    monthlyOrderVolume?: IntFilter<"Store"> | number
    riderRating?: FloatFilter<"Store"> | number
    averagePickupTime?: IntFilter<"Store"> | number
    storePriority?: StringFilter<"Store"> | string
    createdAt?: DateTimeFilter<"Store"> | Date | string
    updatedAt?: DateTimeFilter<"Store"> | Date | string
    client?: XOR<ClientScalarRelationFilter, ClientWhereInput>
    riderEarnings?: RiderEarningListRelationFilter
  }, "id" | "storeCode" | "clientId_storeCode">

  export type StoreOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    storeName?: SortOrder
    storeCode?: SortOrder
    storeType?: SortOrder
    brandFranchise?: SortOrderInput | SortOrder
    completeAddress?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    pinCode?: SortOrder
    landmark?: SortOrderInput | SortOrder
    gpsLatitude?: SortOrderInput | SortOrder
    gpsLongitude?: SortOrderInput | SortOrder
    zoneRegion?: SortOrderInput | SortOrder
    storeManagerName?: SortOrderInput | SortOrder
    contactNumber?: SortOrderInput | SortOrder
    emailAddress?: SortOrderInput | SortOrder
    whatsappNumber?: SortOrderInput | SortOrder
    storeStatus?: SortOrder
    currentOfferRate?: SortOrder
    offerStartDate?: SortOrderInput | SortOrder
    offerEndDate?: SortOrderInput | SortOrder
    offerType?: SortOrder
    offerReason?: SortOrderInput | SortOrder
    isOfferActive?: SortOrder
    busyLevel?: SortOrder
    averageOrdersPerDay?: SortOrder
    peakHours?: SortOrderInput | SortOrder
    busyDays?: SortOrderInput | SortOrder
    orderDifficultyLevel?: SortOrder
    averageDeliveryDistance?: SortOrder
    monthlyOrderVolume?: SortOrder
    riderRating?: SortOrder
    averagePickupTime?: SortOrder
    storePriority?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: StoreCountOrderByAggregateInput
    _avg?: StoreAvgOrderByAggregateInput
    _max?: StoreMaxOrderByAggregateInput
    _min?: StoreMinOrderByAggregateInput
    _sum?: StoreSumOrderByAggregateInput
  }

  export type StoreScalarWhereWithAggregatesInput = {
    AND?: StoreScalarWhereWithAggregatesInput | StoreScalarWhereWithAggregatesInput[]
    OR?: StoreScalarWhereWithAggregatesInput[]
    NOT?: StoreScalarWhereWithAggregatesInput | StoreScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Store"> | string
    clientId?: StringWithAggregatesFilter<"Store"> | string
    storeName?: StringWithAggregatesFilter<"Store"> | string
    storeCode?: StringWithAggregatesFilter<"Store"> | string
    storeType?: StringWithAggregatesFilter<"Store"> | string
    brandFranchise?: StringNullableWithAggregatesFilter<"Store"> | string | null
    completeAddress?: StringWithAggregatesFilter<"Store"> | string
    city?: StringWithAggregatesFilter<"Store"> | string
    state?: StringWithAggregatesFilter<"Store"> | string
    country?: StringWithAggregatesFilter<"Store"> | string
    pinCode?: StringWithAggregatesFilter<"Store"> | string
    landmark?: StringNullableWithAggregatesFilter<"Store"> | string | null
    gpsLatitude?: FloatNullableWithAggregatesFilter<"Store"> | number | null
    gpsLongitude?: FloatNullableWithAggregatesFilter<"Store"> | number | null
    zoneRegion?: StringNullableWithAggregatesFilter<"Store"> | string | null
    storeManagerName?: StringNullableWithAggregatesFilter<"Store"> | string | null
    contactNumber?: StringNullableWithAggregatesFilter<"Store"> | string | null
    emailAddress?: StringNullableWithAggregatesFilter<"Store"> | string | null
    whatsappNumber?: StringNullableWithAggregatesFilter<"Store"> | string | null
    storeStatus?: StringWithAggregatesFilter<"Store"> | string
    currentOfferRate?: FloatWithAggregatesFilter<"Store"> | number
    offerStartDate?: DateTimeNullableWithAggregatesFilter<"Store"> | Date | string | null
    offerEndDate?: DateTimeNullableWithAggregatesFilter<"Store"> | Date | string | null
    offerType?: StringWithAggregatesFilter<"Store"> | string
    offerReason?: StringNullableWithAggregatesFilter<"Store"> | string | null
    isOfferActive?: BoolWithAggregatesFilter<"Store"> | boolean
    busyLevel?: StringWithAggregatesFilter<"Store"> | string
    averageOrdersPerDay?: IntWithAggregatesFilter<"Store"> | number
    peakHours?: StringNullableWithAggregatesFilter<"Store"> | string | null
    busyDays?: StringNullableWithAggregatesFilter<"Store"> | string | null
    orderDifficultyLevel?: StringWithAggregatesFilter<"Store"> | string
    averageDeliveryDistance?: FloatWithAggregatesFilter<"Store"> | number
    monthlyOrderVolume?: IntWithAggregatesFilter<"Store"> | number
    riderRating?: FloatWithAggregatesFilter<"Store"> | number
    averagePickupTime?: IntWithAggregatesFilter<"Store"> | number
    storePriority?: StringWithAggregatesFilter<"Store"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Store"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Store"> | Date | string
  }

  export type RiderEarningWhereInput = {
    AND?: RiderEarningWhereInput | RiderEarningWhereInput[]
    OR?: RiderEarningWhereInput[]
    NOT?: RiderEarningWhereInput | RiderEarningWhereInput[]
    id?: StringFilter<"RiderEarning"> | string
    riderId?: StringFilter<"RiderEarning"> | string
    clientId?: StringFilter<"RiderEarning"> | string
    storeId?: StringFilter<"RiderEarning"> | string
    orderId?: StringNullableFilter<"RiderEarning"> | string | null
    baseRate?: FloatFilter<"RiderEarning"> | number
    storeOfferRate?: FloatFilter<"RiderEarning"> | number
    totalRate?: FloatFilter<"RiderEarning"> | number
    bulkOrderBonus?: FloatFilter<"RiderEarning"> | number
    performanceBonus?: FloatFilter<"RiderEarning"> | number
    weeklyTargetBonus?: FloatFilter<"RiderEarning"> | number
    specialEventBonus?: FloatFilter<"RiderEarning"> | number
    finalEarning?: FloatFilter<"RiderEarning"> | number
    orderDate?: DateTimeFilter<"RiderEarning"> | Date | string
    deliveryTime?: IntNullableFilter<"RiderEarning"> | number | null
    riderRating?: FloatNullableFilter<"RiderEarning"> | number | null
    distance?: FloatNullableFilter<"RiderEarning"> | number | null
    bonusesApplied?: StringNullableFilter<"RiderEarning"> | string | null
    rateCalculationLog?: StringNullableFilter<"RiderEarning"> | string | null
    paymentStatus?: StringFilter<"RiderEarning"> | string
    paymentDate?: DateTimeNullableFilter<"RiderEarning"> | Date | string | null
    paymentMethod?: StringNullableFilter<"RiderEarning"> | string | null
    paymentReference?: StringNullableFilter<"RiderEarning"> | string | null
    createdAt?: DateTimeFilter<"RiderEarning"> | Date | string
    updatedAt?: DateTimeFilter<"RiderEarning"> | Date | string
    client?: XOR<ClientScalarRelationFilter, ClientWhereInput>
    store?: XOR<StoreScalarRelationFilter, StoreWhereInput>
  }

  export type RiderEarningOrderByWithRelationInput = {
    id?: SortOrder
    riderId?: SortOrder
    clientId?: SortOrder
    storeId?: SortOrder
    orderId?: SortOrderInput | SortOrder
    baseRate?: SortOrder
    storeOfferRate?: SortOrder
    totalRate?: SortOrder
    bulkOrderBonus?: SortOrder
    performanceBonus?: SortOrder
    weeklyTargetBonus?: SortOrder
    specialEventBonus?: SortOrder
    finalEarning?: SortOrder
    orderDate?: SortOrder
    deliveryTime?: SortOrderInput | SortOrder
    riderRating?: SortOrderInput | SortOrder
    distance?: SortOrderInput | SortOrder
    bonusesApplied?: SortOrderInput | SortOrder
    rateCalculationLog?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    paymentDate?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentReference?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    client?: ClientOrderByWithRelationInput
    store?: StoreOrderByWithRelationInput
  }

  export type RiderEarningWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RiderEarningWhereInput | RiderEarningWhereInput[]
    OR?: RiderEarningWhereInput[]
    NOT?: RiderEarningWhereInput | RiderEarningWhereInput[]
    riderId?: StringFilter<"RiderEarning"> | string
    clientId?: StringFilter<"RiderEarning"> | string
    storeId?: StringFilter<"RiderEarning"> | string
    orderId?: StringNullableFilter<"RiderEarning"> | string | null
    baseRate?: FloatFilter<"RiderEarning"> | number
    storeOfferRate?: FloatFilter<"RiderEarning"> | number
    totalRate?: FloatFilter<"RiderEarning"> | number
    bulkOrderBonus?: FloatFilter<"RiderEarning"> | number
    performanceBonus?: FloatFilter<"RiderEarning"> | number
    weeklyTargetBonus?: FloatFilter<"RiderEarning"> | number
    specialEventBonus?: FloatFilter<"RiderEarning"> | number
    finalEarning?: FloatFilter<"RiderEarning"> | number
    orderDate?: DateTimeFilter<"RiderEarning"> | Date | string
    deliveryTime?: IntNullableFilter<"RiderEarning"> | number | null
    riderRating?: FloatNullableFilter<"RiderEarning"> | number | null
    distance?: FloatNullableFilter<"RiderEarning"> | number | null
    bonusesApplied?: StringNullableFilter<"RiderEarning"> | string | null
    rateCalculationLog?: StringNullableFilter<"RiderEarning"> | string | null
    paymentStatus?: StringFilter<"RiderEarning"> | string
    paymentDate?: DateTimeNullableFilter<"RiderEarning"> | Date | string | null
    paymentMethod?: StringNullableFilter<"RiderEarning"> | string | null
    paymentReference?: StringNullableFilter<"RiderEarning"> | string | null
    createdAt?: DateTimeFilter<"RiderEarning"> | Date | string
    updatedAt?: DateTimeFilter<"RiderEarning"> | Date | string
    client?: XOR<ClientScalarRelationFilter, ClientWhereInput>
    store?: XOR<StoreScalarRelationFilter, StoreWhereInput>
  }, "id">

  export type RiderEarningOrderByWithAggregationInput = {
    id?: SortOrder
    riderId?: SortOrder
    clientId?: SortOrder
    storeId?: SortOrder
    orderId?: SortOrderInput | SortOrder
    baseRate?: SortOrder
    storeOfferRate?: SortOrder
    totalRate?: SortOrder
    bulkOrderBonus?: SortOrder
    performanceBonus?: SortOrder
    weeklyTargetBonus?: SortOrder
    specialEventBonus?: SortOrder
    finalEarning?: SortOrder
    orderDate?: SortOrder
    deliveryTime?: SortOrderInput | SortOrder
    riderRating?: SortOrderInput | SortOrder
    distance?: SortOrderInput | SortOrder
    bonusesApplied?: SortOrderInput | SortOrder
    rateCalculationLog?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    paymentDate?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentReference?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RiderEarningCountOrderByAggregateInput
    _avg?: RiderEarningAvgOrderByAggregateInput
    _max?: RiderEarningMaxOrderByAggregateInput
    _min?: RiderEarningMinOrderByAggregateInput
    _sum?: RiderEarningSumOrderByAggregateInput
  }

  export type RiderEarningScalarWhereWithAggregatesInput = {
    AND?: RiderEarningScalarWhereWithAggregatesInput | RiderEarningScalarWhereWithAggregatesInput[]
    OR?: RiderEarningScalarWhereWithAggregatesInput[]
    NOT?: RiderEarningScalarWhereWithAggregatesInput | RiderEarningScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RiderEarning"> | string
    riderId?: StringWithAggregatesFilter<"RiderEarning"> | string
    clientId?: StringWithAggregatesFilter<"RiderEarning"> | string
    storeId?: StringWithAggregatesFilter<"RiderEarning"> | string
    orderId?: StringNullableWithAggregatesFilter<"RiderEarning"> | string | null
    baseRate?: FloatWithAggregatesFilter<"RiderEarning"> | number
    storeOfferRate?: FloatWithAggregatesFilter<"RiderEarning"> | number
    totalRate?: FloatWithAggregatesFilter<"RiderEarning"> | number
    bulkOrderBonus?: FloatWithAggregatesFilter<"RiderEarning"> | number
    performanceBonus?: FloatWithAggregatesFilter<"RiderEarning"> | number
    weeklyTargetBonus?: FloatWithAggregatesFilter<"RiderEarning"> | number
    specialEventBonus?: FloatWithAggregatesFilter<"RiderEarning"> | number
    finalEarning?: FloatWithAggregatesFilter<"RiderEarning"> | number
    orderDate?: DateTimeWithAggregatesFilter<"RiderEarning"> | Date | string
    deliveryTime?: IntNullableWithAggregatesFilter<"RiderEarning"> | number | null
    riderRating?: FloatNullableWithAggregatesFilter<"RiderEarning"> | number | null
    distance?: FloatNullableWithAggregatesFilter<"RiderEarning"> | number | null
    bonusesApplied?: StringNullableWithAggregatesFilter<"RiderEarning"> | string | null
    rateCalculationLog?: StringNullableWithAggregatesFilter<"RiderEarning"> | string | null
    paymentStatus?: StringWithAggregatesFilter<"RiderEarning"> | string
    paymentDate?: DateTimeNullableWithAggregatesFilter<"RiderEarning"> | Date | string | null
    paymentMethod?: StringNullableWithAggregatesFilter<"RiderEarning"> | string | null
    paymentReference?: StringNullableWithAggregatesFilter<"RiderEarning"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"RiderEarning"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RiderEarning"> | Date | string
  }

  export type WeeklyRiderSummaryWhereInput = {
    AND?: WeeklyRiderSummaryWhereInput | WeeklyRiderSummaryWhereInput[]
    OR?: WeeklyRiderSummaryWhereInput[]
    NOT?: WeeklyRiderSummaryWhereInput | WeeklyRiderSummaryWhereInput[]
    id?: StringFilter<"WeeklyRiderSummary"> | string
    riderId?: StringFilter<"WeeklyRiderSummary"> | string
    weekStartDate?: DateTimeFilter<"WeeklyRiderSummary"> | Date | string
    weekEndDate?: DateTimeFilter<"WeeklyRiderSummary"> | Date | string
    totalOrders?: IntFilter<"WeeklyRiderSummary"> | number
    averageOrdersPerDay?: FloatFilter<"WeeklyRiderSummary"> | number
    bestDayOrders?: IntFilter<"WeeklyRiderSummary"> | number
    worstDayOrders?: IntFilter<"WeeklyRiderSummary"> | number
    baseEarnings?: FloatFilter<"WeeklyRiderSummary"> | number
    offerEarnings?: FloatFilter<"WeeklyRiderSummary"> | number
    bonusEarnings?: FloatFilter<"WeeklyRiderSummary"> | number
    totalEarnings?: FloatFilter<"WeeklyRiderSummary"> | number
    averageRating?: FloatFilter<"WeeklyRiderSummary"> | number
    averageDeliveryTime?: FloatFilter<"WeeklyRiderSummary"> | number
    onTimeDeliveryPercentage?: FloatFilter<"WeeklyRiderSummary"> | number
    totalDistance?: FloatFilter<"WeeklyRiderSummary"> | number
    dailyTargetAchieved?: StringNullableFilter<"WeeklyRiderSummary"> | string | null
    weeklyTargetAchieved?: BoolFilter<"WeeklyRiderSummary"> | boolean
    bonusesEarned?: StringNullableFilter<"WeeklyRiderSummary"> | string | null
    topClientId?: StringNullableFilter<"WeeklyRiderSummary"> | string | null
    topStoreId?: StringNullableFilter<"WeeklyRiderSummary"> | string | null
    citiesWorked?: StringNullableFilter<"WeeklyRiderSummary"> | string | null
    totalPaid?: FloatFilter<"WeeklyRiderSummary"> | number
    pendingAmount?: FloatFilter<"WeeklyRiderSummary"> | number
    paymentCount?: IntFilter<"WeeklyRiderSummary"> | number
    createdAt?: DateTimeFilter<"WeeklyRiderSummary"> | Date | string
    updatedAt?: DateTimeFilter<"WeeklyRiderSummary"> | Date | string
  }

  export type WeeklyRiderSummaryOrderByWithRelationInput = {
    id?: SortOrder
    riderId?: SortOrder
    weekStartDate?: SortOrder
    weekEndDate?: SortOrder
    totalOrders?: SortOrder
    averageOrdersPerDay?: SortOrder
    bestDayOrders?: SortOrder
    worstDayOrders?: SortOrder
    baseEarnings?: SortOrder
    offerEarnings?: SortOrder
    bonusEarnings?: SortOrder
    totalEarnings?: SortOrder
    averageRating?: SortOrder
    averageDeliveryTime?: SortOrder
    onTimeDeliveryPercentage?: SortOrder
    totalDistance?: SortOrder
    dailyTargetAchieved?: SortOrderInput | SortOrder
    weeklyTargetAchieved?: SortOrder
    bonusesEarned?: SortOrderInput | SortOrder
    topClientId?: SortOrderInput | SortOrder
    topStoreId?: SortOrderInput | SortOrder
    citiesWorked?: SortOrderInput | SortOrder
    totalPaid?: SortOrder
    pendingAmount?: SortOrder
    paymentCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WeeklyRiderSummaryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    riderId_weekStartDate?: WeeklyRiderSummaryRiderIdWeekStartDateCompoundUniqueInput
    AND?: WeeklyRiderSummaryWhereInput | WeeklyRiderSummaryWhereInput[]
    OR?: WeeklyRiderSummaryWhereInput[]
    NOT?: WeeklyRiderSummaryWhereInput | WeeklyRiderSummaryWhereInput[]
    riderId?: StringFilter<"WeeklyRiderSummary"> | string
    weekStartDate?: DateTimeFilter<"WeeklyRiderSummary"> | Date | string
    weekEndDate?: DateTimeFilter<"WeeklyRiderSummary"> | Date | string
    totalOrders?: IntFilter<"WeeklyRiderSummary"> | number
    averageOrdersPerDay?: FloatFilter<"WeeklyRiderSummary"> | number
    bestDayOrders?: IntFilter<"WeeklyRiderSummary"> | number
    worstDayOrders?: IntFilter<"WeeklyRiderSummary"> | number
    baseEarnings?: FloatFilter<"WeeklyRiderSummary"> | number
    offerEarnings?: FloatFilter<"WeeklyRiderSummary"> | number
    bonusEarnings?: FloatFilter<"WeeklyRiderSummary"> | number
    totalEarnings?: FloatFilter<"WeeklyRiderSummary"> | number
    averageRating?: FloatFilter<"WeeklyRiderSummary"> | number
    averageDeliveryTime?: FloatFilter<"WeeklyRiderSummary"> | number
    onTimeDeliveryPercentage?: FloatFilter<"WeeklyRiderSummary"> | number
    totalDistance?: FloatFilter<"WeeklyRiderSummary"> | number
    dailyTargetAchieved?: StringNullableFilter<"WeeklyRiderSummary"> | string | null
    weeklyTargetAchieved?: BoolFilter<"WeeklyRiderSummary"> | boolean
    bonusesEarned?: StringNullableFilter<"WeeklyRiderSummary"> | string | null
    topClientId?: StringNullableFilter<"WeeklyRiderSummary"> | string | null
    topStoreId?: StringNullableFilter<"WeeklyRiderSummary"> | string | null
    citiesWorked?: StringNullableFilter<"WeeklyRiderSummary"> | string | null
    totalPaid?: FloatFilter<"WeeklyRiderSummary"> | number
    pendingAmount?: FloatFilter<"WeeklyRiderSummary"> | number
    paymentCount?: IntFilter<"WeeklyRiderSummary"> | number
    createdAt?: DateTimeFilter<"WeeklyRiderSummary"> | Date | string
    updatedAt?: DateTimeFilter<"WeeklyRiderSummary"> | Date | string
  }, "id" | "riderId_weekStartDate">

  export type WeeklyRiderSummaryOrderByWithAggregationInput = {
    id?: SortOrder
    riderId?: SortOrder
    weekStartDate?: SortOrder
    weekEndDate?: SortOrder
    totalOrders?: SortOrder
    averageOrdersPerDay?: SortOrder
    bestDayOrders?: SortOrder
    worstDayOrders?: SortOrder
    baseEarnings?: SortOrder
    offerEarnings?: SortOrder
    bonusEarnings?: SortOrder
    totalEarnings?: SortOrder
    averageRating?: SortOrder
    averageDeliveryTime?: SortOrder
    onTimeDeliveryPercentage?: SortOrder
    totalDistance?: SortOrder
    dailyTargetAchieved?: SortOrderInput | SortOrder
    weeklyTargetAchieved?: SortOrder
    bonusesEarned?: SortOrderInput | SortOrder
    topClientId?: SortOrderInput | SortOrder
    topStoreId?: SortOrderInput | SortOrder
    citiesWorked?: SortOrderInput | SortOrder
    totalPaid?: SortOrder
    pendingAmount?: SortOrder
    paymentCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: WeeklyRiderSummaryCountOrderByAggregateInput
    _avg?: WeeklyRiderSummaryAvgOrderByAggregateInput
    _max?: WeeklyRiderSummaryMaxOrderByAggregateInput
    _min?: WeeklyRiderSummaryMinOrderByAggregateInput
    _sum?: WeeklyRiderSummarySumOrderByAggregateInput
  }

  export type WeeklyRiderSummaryScalarWhereWithAggregatesInput = {
    AND?: WeeklyRiderSummaryScalarWhereWithAggregatesInput | WeeklyRiderSummaryScalarWhereWithAggregatesInput[]
    OR?: WeeklyRiderSummaryScalarWhereWithAggregatesInput[]
    NOT?: WeeklyRiderSummaryScalarWhereWithAggregatesInput | WeeklyRiderSummaryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"WeeklyRiderSummary"> | string
    riderId?: StringWithAggregatesFilter<"WeeklyRiderSummary"> | string
    weekStartDate?: DateTimeWithAggregatesFilter<"WeeklyRiderSummary"> | Date | string
    weekEndDate?: DateTimeWithAggregatesFilter<"WeeklyRiderSummary"> | Date | string
    totalOrders?: IntWithAggregatesFilter<"WeeklyRiderSummary"> | number
    averageOrdersPerDay?: FloatWithAggregatesFilter<"WeeklyRiderSummary"> | number
    bestDayOrders?: IntWithAggregatesFilter<"WeeklyRiderSummary"> | number
    worstDayOrders?: IntWithAggregatesFilter<"WeeklyRiderSummary"> | number
    baseEarnings?: FloatWithAggregatesFilter<"WeeklyRiderSummary"> | number
    offerEarnings?: FloatWithAggregatesFilter<"WeeklyRiderSummary"> | number
    bonusEarnings?: FloatWithAggregatesFilter<"WeeklyRiderSummary"> | number
    totalEarnings?: FloatWithAggregatesFilter<"WeeklyRiderSummary"> | number
    averageRating?: FloatWithAggregatesFilter<"WeeklyRiderSummary"> | number
    averageDeliveryTime?: FloatWithAggregatesFilter<"WeeklyRiderSummary"> | number
    onTimeDeliveryPercentage?: FloatWithAggregatesFilter<"WeeklyRiderSummary"> | number
    totalDistance?: FloatWithAggregatesFilter<"WeeklyRiderSummary"> | number
    dailyTargetAchieved?: StringNullableWithAggregatesFilter<"WeeklyRiderSummary"> | string | null
    weeklyTargetAchieved?: BoolWithAggregatesFilter<"WeeklyRiderSummary"> | boolean
    bonusesEarned?: StringNullableWithAggregatesFilter<"WeeklyRiderSummary"> | string | null
    topClientId?: StringNullableWithAggregatesFilter<"WeeklyRiderSummary"> | string | null
    topStoreId?: StringNullableWithAggregatesFilter<"WeeklyRiderSummary"> | string | null
    citiesWorked?: StringNullableWithAggregatesFilter<"WeeklyRiderSummary"> | string | null
    totalPaid?: FloatWithAggregatesFilter<"WeeklyRiderSummary"> | number
    pendingAmount?: FloatWithAggregatesFilter<"WeeklyRiderSummary"> | number
    paymentCount?: IntWithAggregatesFilter<"WeeklyRiderSummary"> | number
    createdAt?: DateTimeWithAggregatesFilter<"WeeklyRiderSummary"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"WeeklyRiderSummary"> | Date | string
  }

  export type RateHistoryWhereInput = {
    AND?: RateHistoryWhereInput | RateHistoryWhereInput[]
    OR?: RateHistoryWhereInput[]
    NOT?: RateHistoryWhereInput | RateHistoryWhereInput[]
    id?: StringFilter<"RateHistory"> | string
    clientId?: StringFilter<"RateHistory"> | string
    oldBaseRate?: FloatFilter<"RateHistory"> | number
    newBaseRate?: FloatFilter<"RateHistory"> | number
    changeReason?: StringNullableFilter<"RateHistory"> | string | null
    effectiveDate?: DateTimeFilter<"RateHistory"> | Date | string
    changedBy?: StringNullableFilter<"RateHistory"> | string | null
    createdAt?: DateTimeFilter<"RateHistory"> | Date | string
  }

  export type RateHistoryOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    oldBaseRate?: SortOrder
    newBaseRate?: SortOrder
    changeReason?: SortOrderInput | SortOrder
    effectiveDate?: SortOrder
    changedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
  }

  export type RateHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RateHistoryWhereInput | RateHistoryWhereInput[]
    OR?: RateHistoryWhereInput[]
    NOT?: RateHistoryWhereInput | RateHistoryWhereInput[]
    clientId?: StringFilter<"RateHistory"> | string
    oldBaseRate?: FloatFilter<"RateHistory"> | number
    newBaseRate?: FloatFilter<"RateHistory"> | number
    changeReason?: StringNullableFilter<"RateHistory"> | string | null
    effectiveDate?: DateTimeFilter<"RateHistory"> | Date | string
    changedBy?: StringNullableFilter<"RateHistory"> | string | null
    createdAt?: DateTimeFilter<"RateHistory"> | Date | string
  }, "id">

  export type RateHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    oldBaseRate?: SortOrder
    newBaseRate?: SortOrder
    changeReason?: SortOrderInput | SortOrder
    effectiveDate?: SortOrder
    changedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: RateHistoryCountOrderByAggregateInput
    _avg?: RateHistoryAvgOrderByAggregateInput
    _max?: RateHistoryMaxOrderByAggregateInput
    _min?: RateHistoryMinOrderByAggregateInput
    _sum?: RateHistorySumOrderByAggregateInput
  }

  export type RateHistoryScalarWhereWithAggregatesInput = {
    AND?: RateHistoryScalarWhereWithAggregatesInput | RateHistoryScalarWhereWithAggregatesInput[]
    OR?: RateHistoryScalarWhereWithAggregatesInput[]
    NOT?: RateHistoryScalarWhereWithAggregatesInput | RateHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RateHistory"> | string
    clientId?: StringWithAggregatesFilter<"RateHistory"> | string
    oldBaseRate?: FloatWithAggregatesFilter<"RateHistory"> | number
    newBaseRate?: FloatWithAggregatesFilter<"RateHistory"> | number
    changeReason?: StringNullableWithAggregatesFilter<"RateHistory"> | string | null
    effectiveDate?: DateTimeWithAggregatesFilter<"RateHistory"> | Date | string
    changedBy?: StringNullableWithAggregatesFilter<"RateHistory"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"RateHistory"> | Date | string
  }

  export type CityCreateInput = {
    id?: string
    name: string
    displayName: string
    code: string
    state: string
    country?: string
    timezone?: string
    latitude: number
    longitude: number
    pinCodeRange?: string | null
    regionCode?: string | null
    isActive?: boolean
    isOperational?: boolean
    launchDate?: Date | string | null
    estimatedPopulation?: number | null
    marketPotential?: string | null
    version?: number
    lastModifiedBy?: string | null
    eventSequence?: number
    lastSyncAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CityUncheckedCreateInput = {
    id?: string
    name: string
    displayName: string
    code: string
    state: string
    country?: string
    timezone?: string
    latitude: number
    longitude: number
    pinCodeRange?: string | null
    regionCode?: string | null
    isActive?: boolean
    isOperational?: boolean
    launchDate?: Date | string | null
    estimatedPopulation?: number | null
    marketPotential?: string | null
    version?: number
    lastModifiedBy?: string | null
    eventSequence?: number
    lastSyncAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    pinCodeRange?: NullableStringFieldUpdateOperationsInput | string | null
    regionCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isOperational?: BoolFieldUpdateOperationsInput | boolean
    launchDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedPopulation?: NullableIntFieldUpdateOperationsInput | number | null
    marketPotential?: NullableStringFieldUpdateOperationsInput | string | null
    version?: IntFieldUpdateOperationsInput | number
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    eventSequence?: IntFieldUpdateOperationsInput | number
    lastSyncAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    pinCodeRange?: NullableStringFieldUpdateOperationsInput | string | null
    regionCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isOperational?: BoolFieldUpdateOperationsInput | boolean
    launchDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedPopulation?: NullableIntFieldUpdateOperationsInput | number | null
    marketPotential?: NullableStringFieldUpdateOperationsInput | string | null
    version?: IntFieldUpdateOperationsInput | number
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    eventSequence?: IntFieldUpdateOperationsInput | number
    lastSyncAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CityCreateManyInput = {
    id?: string
    name: string
    displayName: string
    code: string
    state: string
    country?: string
    timezone?: string
    latitude: number
    longitude: number
    pinCodeRange?: string | null
    regionCode?: string | null
    isActive?: boolean
    isOperational?: boolean
    launchDate?: Date | string | null
    estimatedPopulation?: number | null
    marketPotential?: string | null
    version?: number
    lastModifiedBy?: string | null
    eventSequence?: number
    lastSyncAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    pinCodeRange?: NullableStringFieldUpdateOperationsInput | string | null
    regionCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isOperational?: BoolFieldUpdateOperationsInput | boolean
    launchDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedPopulation?: NullableIntFieldUpdateOperationsInput | number | null
    marketPotential?: NullableStringFieldUpdateOperationsInput | string | null
    version?: IntFieldUpdateOperationsInput | number
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    eventSequence?: IntFieldUpdateOperationsInput | number
    lastSyncAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    pinCodeRange?: NullableStringFieldUpdateOperationsInput | string | null
    regionCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isOperational?: BoolFieldUpdateOperationsInput | boolean
    launchDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedPopulation?: NullableIntFieldUpdateOperationsInput | number | null
    marketPotential?: NullableStringFieldUpdateOperationsInput | string | null
    version?: IntFieldUpdateOperationsInput | number
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    eventSequence?: IntFieldUpdateOperationsInput | number
    lastSyncAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    firstName: string
    lastName: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    clientsManaged?: ClientCreateNestedManyWithoutAccountManagerInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    firstName: string
    lastName: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    clientsManaged?: ClientUncheckedCreateNestedManyWithoutAccountManagerInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    clientsManaged?: ClientUpdateManyWithoutAccountManagerNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    clientsManaged?: ClientUncheckedUpdateManyWithoutAccountManagerNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    firstName: string
    lastName: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCreateInput = {
    id?: string
    name: string
    clientCode: string
    clientType: string
    industrySector?: string | null
    businessCategory?: string | null
    primaryContactPerson?: string | null
    designation?: string | null
    email?: string | null
    secondaryEmail?: string | null
    phone?: string | null
    secondaryPhone?: string | null
    city?: string | null
    state?: string | null
    pinCode?: string | null
    registrationNumber?: string | null
    panNumber?: string | null
    gstNumber?: string | null
    evPortfolio?: string | null
    fleetSize?: number | null
    hasChargingInfra?: boolean
    chargingInfraDetails?: string | null
    batteryTechPreference?: string | null
    serviceRequirements?: string | null
    paymentTerms?: string | null
    preferredPaymentMethod?: string | null
    taxCategory?: string | null
    discountCategory?: string | null
    baseOrderRate?: number
    rateEffectiveDate?: Date | string
    rateType?: string
    minimumRate?: number
    maximumRate?: number
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: number
    bulkBonusAmount?: number
    bulkResetPeriod?: string
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: number
    weeklyBonusAmount?: number
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: number
    performanceCriteria?: string
    paymentCycle?: string
    paymentMethods?: string | null
    minimumPayout?: number
    payoutDay?: string
    clientStatus?: string
    acquisitionDate?: Date | string
    clientPriority?: string
    relationshipType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stores?: StoreCreateNestedManyWithoutClientInput
    accountManager?: UserCreateNestedOneWithoutClientsManagedInput
    riderEarnings?: RiderEarningCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateInput = {
    id?: string
    name: string
    clientCode: string
    clientType: string
    industrySector?: string | null
    businessCategory?: string | null
    primaryContactPerson?: string | null
    designation?: string | null
    email?: string | null
    secondaryEmail?: string | null
    phone?: string | null
    secondaryPhone?: string | null
    city?: string | null
    state?: string | null
    pinCode?: string | null
    registrationNumber?: string | null
    panNumber?: string | null
    gstNumber?: string | null
    evPortfolio?: string | null
    fleetSize?: number | null
    hasChargingInfra?: boolean
    chargingInfraDetails?: string | null
    batteryTechPreference?: string | null
    serviceRequirements?: string | null
    paymentTerms?: string | null
    preferredPaymentMethod?: string | null
    taxCategory?: string | null
    discountCategory?: string | null
    baseOrderRate?: number
    rateEffectiveDate?: Date | string
    rateType?: string
    minimumRate?: number
    maximumRate?: number
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: number
    bulkBonusAmount?: number
    bulkResetPeriod?: string
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: number
    weeklyBonusAmount?: number
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: number
    performanceCriteria?: string
    paymentCycle?: string
    paymentMethods?: string | null
    minimumPayout?: number
    payoutDay?: string
    clientStatus?: string
    acquisitionDate?: Date | string
    accountManagerId?: string | null
    clientPriority?: string
    relationshipType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stores?: StoreUncheckedCreateNestedManyWithoutClientInput
    riderEarnings?: RiderEarningUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    clientCode?: StringFieldUpdateOperationsInput | string
    clientType?: StringFieldUpdateOperationsInput | string
    industrySector?: NullableStringFieldUpdateOperationsInput | string | null
    businessCategory?: NullableStringFieldUpdateOperationsInput | string | null
    primaryContactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryPhone?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pinCode?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    panNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    evPortfolio?: NullableStringFieldUpdateOperationsInput | string | null
    fleetSize?: NullableIntFieldUpdateOperationsInput | number | null
    hasChargingInfra?: BoolFieldUpdateOperationsInput | boolean
    chargingInfraDetails?: NullableStringFieldUpdateOperationsInput | string | null
    batteryTechPreference?: NullableStringFieldUpdateOperationsInput | string | null
    serviceRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    preferredPaymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    taxCategory?: NullableStringFieldUpdateOperationsInput | string | null
    discountCategory?: NullableStringFieldUpdateOperationsInput | string | null
    baseOrderRate?: FloatFieldUpdateOperationsInput | number
    rateEffectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rateType?: StringFieldUpdateOperationsInput | string
    minimumRate?: FloatFieldUpdateOperationsInput | number
    maximumRate?: FloatFieldUpdateOperationsInput | number
    bulkBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    bulkOrdersThreshold?: IntFieldUpdateOperationsInput | number
    bulkBonusAmount?: FloatFieldUpdateOperationsInput | number
    bulkResetPeriod?: StringFieldUpdateOperationsInput | string
    weeklyBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    weeklyOrderTarget?: IntFieldUpdateOperationsInput | number
    weeklyBonusAmount?: FloatFieldUpdateOperationsInput | number
    performanceMultiplierEnabled?: BoolFieldUpdateOperationsInput | boolean
    topPerformerRate?: FloatFieldUpdateOperationsInput | number
    performanceCriteria?: StringFieldUpdateOperationsInput | string
    paymentCycle?: StringFieldUpdateOperationsInput | string
    paymentMethods?: NullableStringFieldUpdateOperationsInput | string | null
    minimumPayout?: FloatFieldUpdateOperationsInput | number
    payoutDay?: StringFieldUpdateOperationsInput | string
    clientStatus?: StringFieldUpdateOperationsInput | string
    acquisitionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientPriority?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stores?: StoreUpdateManyWithoutClientNestedInput
    accountManager?: UserUpdateOneWithoutClientsManagedNestedInput
    riderEarnings?: RiderEarningUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    clientCode?: StringFieldUpdateOperationsInput | string
    clientType?: StringFieldUpdateOperationsInput | string
    industrySector?: NullableStringFieldUpdateOperationsInput | string | null
    businessCategory?: NullableStringFieldUpdateOperationsInput | string | null
    primaryContactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryPhone?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pinCode?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    panNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    evPortfolio?: NullableStringFieldUpdateOperationsInput | string | null
    fleetSize?: NullableIntFieldUpdateOperationsInput | number | null
    hasChargingInfra?: BoolFieldUpdateOperationsInput | boolean
    chargingInfraDetails?: NullableStringFieldUpdateOperationsInput | string | null
    batteryTechPreference?: NullableStringFieldUpdateOperationsInput | string | null
    serviceRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    preferredPaymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    taxCategory?: NullableStringFieldUpdateOperationsInput | string | null
    discountCategory?: NullableStringFieldUpdateOperationsInput | string | null
    baseOrderRate?: FloatFieldUpdateOperationsInput | number
    rateEffectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rateType?: StringFieldUpdateOperationsInput | string
    minimumRate?: FloatFieldUpdateOperationsInput | number
    maximumRate?: FloatFieldUpdateOperationsInput | number
    bulkBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    bulkOrdersThreshold?: IntFieldUpdateOperationsInput | number
    bulkBonusAmount?: FloatFieldUpdateOperationsInput | number
    bulkResetPeriod?: StringFieldUpdateOperationsInput | string
    weeklyBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    weeklyOrderTarget?: IntFieldUpdateOperationsInput | number
    weeklyBonusAmount?: FloatFieldUpdateOperationsInput | number
    performanceMultiplierEnabled?: BoolFieldUpdateOperationsInput | boolean
    topPerformerRate?: FloatFieldUpdateOperationsInput | number
    performanceCriteria?: StringFieldUpdateOperationsInput | string
    paymentCycle?: StringFieldUpdateOperationsInput | string
    paymentMethods?: NullableStringFieldUpdateOperationsInput | string | null
    minimumPayout?: FloatFieldUpdateOperationsInput | number
    payoutDay?: StringFieldUpdateOperationsInput | string
    clientStatus?: StringFieldUpdateOperationsInput | string
    acquisitionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountManagerId?: NullableStringFieldUpdateOperationsInput | string | null
    clientPriority?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stores?: StoreUncheckedUpdateManyWithoutClientNestedInput
    riderEarnings?: RiderEarningUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientCreateManyInput = {
    id?: string
    name: string
    clientCode: string
    clientType: string
    industrySector?: string | null
    businessCategory?: string | null
    primaryContactPerson?: string | null
    designation?: string | null
    email?: string | null
    secondaryEmail?: string | null
    phone?: string | null
    secondaryPhone?: string | null
    city?: string | null
    state?: string | null
    pinCode?: string | null
    registrationNumber?: string | null
    panNumber?: string | null
    gstNumber?: string | null
    evPortfolio?: string | null
    fleetSize?: number | null
    hasChargingInfra?: boolean
    chargingInfraDetails?: string | null
    batteryTechPreference?: string | null
    serviceRequirements?: string | null
    paymentTerms?: string | null
    preferredPaymentMethod?: string | null
    taxCategory?: string | null
    discountCategory?: string | null
    baseOrderRate?: number
    rateEffectiveDate?: Date | string
    rateType?: string
    minimumRate?: number
    maximumRate?: number
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: number
    bulkBonusAmount?: number
    bulkResetPeriod?: string
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: number
    weeklyBonusAmount?: number
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: number
    performanceCriteria?: string
    paymentCycle?: string
    paymentMethods?: string | null
    minimumPayout?: number
    payoutDay?: string
    clientStatus?: string
    acquisitionDate?: Date | string
    accountManagerId?: string | null
    clientPriority?: string
    relationshipType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ClientUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    clientCode?: StringFieldUpdateOperationsInput | string
    clientType?: StringFieldUpdateOperationsInput | string
    industrySector?: NullableStringFieldUpdateOperationsInput | string | null
    businessCategory?: NullableStringFieldUpdateOperationsInput | string | null
    primaryContactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryPhone?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pinCode?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    panNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    evPortfolio?: NullableStringFieldUpdateOperationsInput | string | null
    fleetSize?: NullableIntFieldUpdateOperationsInput | number | null
    hasChargingInfra?: BoolFieldUpdateOperationsInput | boolean
    chargingInfraDetails?: NullableStringFieldUpdateOperationsInput | string | null
    batteryTechPreference?: NullableStringFieldUpdateOperationsInput | string | null
    serviceRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    preferredPaymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    taxCategory?: NullableStringFieldUpdateOperationsInput | string | null
    discountCategory?: NullableStringFieldUpdateOperationsInput | string | null
    baseOrderRate?: FloatFieldUpdateOperationsInput | number
    rateEffectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rateType?: StringFieldUpdateOperationsInput | string
    minimumRate?: FloatFieldUpdateOperationsInput | number
    maximumRate?: FloatFieldUpdateOperationsInput | number
    bulkBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    bulkOrdersThreshold?: IntFieldUpdateOperationsInput | number
    bulkBonusAmount?: FloatFieldUpdateOperationsInput | number
    bulkResetPeriod?: StringFieldUpdateOperationsInput | string
    weeklyBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    weeklyOrderTarget?: IntFieldUpdateOperationsInput | number
    weeklyBonusAmount?: FloatFieldUpdateOperationsInput | number
    performanceMultiplierEnabled?: BoolFieldUpdateOperationsInput | boolean
    topPerformerRate?: FloatFieldUpdateOperationsInput | number
    performanceCriteria?: StringFieldUpdateOperationsInput | string
    paymentCycle?: StringFieldUpdateOperationsInput | string
    paymentMethods?: NullableStringFieldUpdateOperationsInput | string | null
    minimumPayout?: FloatFieldUpdateOperationsInput | number
    payoutDay?: StringFieldUpdateOperationsInput | string
    clientStatus?: StringFieldUpdateOperationsInput | string
    acquisitionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientPriority?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    clientCode?: StringFieldUpdateOperationsInput | string
    clientType?: StringFieldUpdateOperationsInput | string
    industrySector?: NullableStringFieldUpdateOperationsInput | string | null
    businessCategory?: NullableStringFieldUpdateOperationsInput | string | null
    primaryContactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryPhone?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pinCode?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    panNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    evPortfolio?: NullableStringFieldUpdateOperationsInput | string | null
    fleetSize?: NullableIntFieldUpdateOperationsInput | number | null
    hasChargingInfra?: BoolFieldUpdateOperationsInput | boolean
    chargingInfraDetails?: NullableStringFieldUpdateOperationsInput | string | null
    batteryTechPreference?: NullableStringFieldUpdateOperationsInput | string | null
    serviceRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    preferredPaymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    taxCategory?: NullableStringFieldUpdateOperationsInput | string | null
    discountCategory?: NullableStringFieldUpdateOperationsInput | string | null
    baseOrderRate?: FloatFieldUpdateOperationsInput | number
    rateEffectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rateType?: StringFieldUpdateOperationsInput | string
    minimumRate?: FloatFieldUpdateOperationsInput | number
    maximumRate?: FloatFieldUpdateOperationsInput | number
    bulkBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    bulkOrdersThreshold?: IntFieldUpdateOperationsInput | number
    bulkBonusAmount?: FloatFieldUpdateOperationsInput | number
    bulkResetPeriod?: StringFieldUpdateOperationsInput | string
    weeklyBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    weeklyOrderTarget?: IntFieldUpdateOperationsInput | number
    weeklyBonusAmount?: FloatFieldUpdateOperationsInput | number
    performanceMultiplierEnabled?: BoolFieldUpdateOperationsInput | boolean
    topPerformerRate?: FloatFieldUpdateOperationsInput | number
    performanceCriteria?: StringFieldUpdateOperationsInput | string
    paymentCycle?: StringFieldUpdateOperationsInput | string
    paymentMethods?: NullableStringFieldUpdateOperationsInput | string | null
    minimumPayout?: FloatFieldUpdateOperationsInput | number
    payoutDay?: StringFieldUpdateOperationsInput | string
    clientStatus?: StringFieldUpdateOperationsInput | string
    acquisitionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountManagerId?: NullableStringFieldUpdateOperationsInput | string | null
    clientPriority?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreCreateInput = {
    id?: string
    storeName: string
    storeCode: string
    storeType: string
    brandFranchise?: string | null
    completeAddress: string
    city: string
    state: string
    country?: string
    pinCode: string
    landmark?: string | null
    gpsLatitude?: number | null
    gpsLongitude?: number | null
    zoneRegion?: string | null
    storeManagerName?: string | null
    contactNumber?: string | null
    emailAddress?: string | null
    whatsappNumber?: string | null
    storeStatus?: string
    currentOfferRate?: number
    offerStartDate?: Date | string | null
    offerEndDate?: Date | string | null
    offerType?: string
    offerReason?: string | null
    isOfferActive?: boolean
    busyLevel?: string
    averageOrdersPerDay?: number
    peakHours?: string | null
    busyDays?: string | null
    orderDifficultyLevel?: string
    averageDeliveryDistance?: number
    monthlyOrderVolume?: number
    riderRating?: number
    averagePickupTime?: number
    storePriority?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutStoresInput
    riderEarnings?: RiderEarningCreateNestedManyWithoutStoreInput
  }

  export type StoreUncheckedCreateInput = {
    id?: string
    clientId: string
    storeName: string
    storeCode: string
    storeType: string
    brandFranchise?: string | null
    completeAddress: string
    city: string
    state: string
    country?: string
    pinCode: string
    landmark?: string | null
    gpsLatitude?: number | null
    gpsLongitude?: number | null
    zoneRegion?: string | null
    storeManagerName?: string | null
    contactNumber?: string | null
    emailAddress?: string | null
    whatsappNumber?: string | null
    storeStatus?: string
    currentOfferRate?: number
    offerStartDate?: Date | string | null
    offerEndDate?: Date | string | null
    offerType?: string
    offerReason?: string | null
    isOfferActive?: boolean
    busyLevel?: string
    averageOrdersPerDay?: number
    peakHours?: string | null
    busyDays?: string | null
    orderDifficultyLevel?: string
    averageDeliveryDistance?: number
    monthlyOrderVolume?: number
    riderRating?: number
    averagePickupTime?: number
    storePriority?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    riderEarnings?: RiderEarningUncheckedCreateNestedManyWithoutStoreInput
  }

  export type StoreUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeName?: StringFieldUpdateOperationsInput | string
    storeCode?: StringFieldUpdateOperationsInput | string
    storeType?: StringFieldUpdateOperationsInput | string
    brandFranchise?: NullableStringFieldUpdateOperationsInput | string | null
    completeAddress?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pinCode?: StringFieldUpdateOperationsInput | string
    landmark?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    gpsLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    zoneRegion?: NullableStringFieldUpdateOperationsInput | string | null
    storeManagerName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    emailAddress?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappNumber?: NullableStringFieldUpdateOperationsInput | string | null
    storeStatus?: StringFieldUpdateOperationsInput | string
    currentOfferRate?: FloatFieldUpdateOperationsInput | number
    offerStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerType?: StringFieldUpdateOperationsInput | string
    offerReason?: NullableStringFieldUpdateOperationsInput | string | null
    isOfferActive?: BoolFieldUpdateOperationsInput | boolean
    busyLevel?: StringFieldUpdateOperationsInput | string
    averageOrdersPerDay?: IntFieldUpdateOperationsInput | number
    peakHours?: NullableStringFieldUpdateOperationsInput | string | null
    busyDays?: NullableStringFieldUpdateOperationsInput | string | null
    orderDifficultyLevel?: StringFieldUpdateOperationsInput | string
    averageDeliveryDistance?: FloatFieldUpdateOperationsInput | number
    monthlyOrderVolume?: IntFieldUpdateOperationsInput | number
    riderRating?: FloatFieldUpdateOperationsInput | number
    averagePickupTime?: IntFieldUpdateOperationsInput | number
    storePriority?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutStoresNestedInput
    riderEarnings?: RiderEarningUpdateManyWithoutStoreNestedInput
  }

  export type StoreUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    storeName?: StringFieldUpdateOperationsInput | string
    storeCode?: StringFieldUpdateOperationsInput | string
    storeType?: StringFieldUpdateOperationsInput | string
    brandFranchise?: NullableStringFieldUpdateOperationsInput | string | null
    completeAddress?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pinCode?: StringFieldUpdateOperationsInput | string
    landmark?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    gpsLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    zoneRegion?: NullableStringFieldUpdateOperationsInput | string | null
    storeManagerName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    emailAddress?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappNumber?: NullableStringFieldUpdateOperationsInput | string | null
    storeStatus?: StringFieldUpdateOperationsInput | string
    currentOfferRate?: FloatFieldUpdateOperationsInput | number
    offerStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerType?: StringFieldUpdateOperationsInput | string
    offerReason?: NullableStringFieldUpdateOperationsInput | string | null
    isOfferActive?: BoolFieldUpdateOperationsInput | boolean
    busyLevel?: StringFieldUpdateOperationsInput | string
    averageOrdersPerDay?: IntFieldUpdateOperationsInput | number
    peakHours?: NullableStringFieldUpdateOperationsInput | string | null
    busyDays?: NullableStringFieldUpdateOperationsInput | string | null
    orderDifficultyLevel?: StringFieldUpdateOperationsInput | string
    averageDeliveryDistance?: FloatFieldUpdateOperationsInput | number
    monthlyOrderVolume?: IntFieldUpdateOperationsInput | number
    riderRating?: FloatFieldUpdateOperationsInput | number
    averagePickupTime?: IntFieldUpdateOperationsInput | number
    storePriority?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    riderEarnings?: RiderEarningUncheckedUpdateManyWithoutStoreNestedInput
  }

  export type StoreCreateManyInput = {
    id?: string
    clientId: string
    storeName: string
    storeCode: string
    storeType: string
    brandFranchise?: string | null
    completeAddress: string
    city: string
    state: string
    country?: string
    pinCode: string
    landmark?: string | null
    gpsLatitude?: number | null
    gpsLongitude?: number | null
    zoneRegion?: string | null
    storeManagerName?: string | null
    contactNumber?: string | null
    emailAddress?: string | null
    whatsappNumber?: string | null
    storeStatus?: string
    currentOfferRate?: number
    offerStartDate?: Date | string | null
    offerEndDate?: Date | string | null
    offerType?: string
    offerReason?: string | null
    isOfferActive?: boolean
    busyLevel?: string
    averageOrdersPerDay?: number
    peakHours?: string | null
    busyDays?: string | null
    orderDifficultyLevel?: string
    averageDeliveryDistance?: number
    monthlyOrderVolume?: number
    riderRating?: number
    averagePickupTime?: number
    storePriority?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StoreUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeName?: StringFieldUpdateOperationsInput | string
    storeCode?: StringFieldUpdateOperationsInput | string
    storeType?: StringFieldUpdateOperationsInput | string
    brandFranchise?: NullableStringFieldUpdateOperationsInput | string | null
    completeAddress?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pinCode?: StringFieldUpdateOperationsInput | string
    landmark?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    gpsLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    zoneRegion?: NullableStringFieldUpdateOperationsInput | string | null
    storeManagerName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    emailAddress?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappNumber?: NullableStringFieldUpdateOperationsInput | string | null
    storeStatus?: StringFieldUpdateOperationsInput | string
    currentOfferRate?: FloatFieldUpdateOperationsInput | number
    offerStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerType?: StringFieldUpdateOperationsInput | string
    offerReason?: NullableStringFieldUpdateOperationsInput | string | null
    isOfferActive?: BoolFieldUpdateOperationsInput | boolean
    busyLevel?: StringFieldUpdateOperationsInput | string
    averageOrdersPerDay?: IntFieldUpdateOperationsInput | number
    peakHours?: NullableStringFieldUpdateOperationsInput | string | null
    busyDays?: NullableStringFieldUpdateOperationsInput | string | null
    orderDifficultyLevel?: StringFieldUpdateOperationsInput | string
    averageDeliveryDistance?: FloatFieldUpdateOperationsInput | number
    monthlyOrderVolume?: IntFieldUpdateOperationsInput | number
    riderRating?: FloatFieldUpdateOperationsInput | number
    averagePickupTime?: IntFieldUpdateOperationsInput | number
    storePriority?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    storeName?: StringFieldUpdateOperationsInput | string
    storeCode?: StringFieldUpdateOperationsInput | string
    storeType?: StringFieldUpdateOperationsInput | string
    brandFranchise?: NullableStringFieldUpdateOperationsInput | string | null
    completeAddress?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pinCode?: StringFieldUpdateOperationsInput | string
    landmark?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    gpsLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    zoneRegion?: NullableStringFieldUpdateOperationsInput | string | null
    storeManagerName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    emailAddress?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappNumber?: NullableStringFieldUpdateOperationsInput | string | null
    storeStatus?: StringFieldUpdateOperationsInput | string
    currentOfferRate?: FloatFieldUpdateOperationsInput | number
    offerStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerType?: StringFieldUpdateOperationsInput | string
    offerReason?: NullableStringFieldUpdateOperationsInput | string | null
    isOfferActive?: BoolFieldUpdateOperationsInput | boolean
    busyLevel?: StringFieldUpdateOperationsInput | string
    averageOrdersPerDay?: IntFieldUpdateOperationsInput | number
    peakHours?: NullableStringFieldUpdateOperationsInput | string | null
    busyDays?: NullableStringFieldUpdateOperationsInput | string | null
    orderDifficultyLevel?: StringFieldUpdateOperationsInput | string
    averageDeliveryDistance?: FloatFieldUpdateOperationsInput | number
    monthlyOrderVolume?: IntFieldUpdateOperationsInput | number
    riderRating?: FloatFieldUpdateOperationsInput | number
    averagePickupTime?: IntFieldUpdateOperationsInput | number
    storePriority?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderEarningCreateInput = {
    id?: string
    riderId: string
    orderId?: string | null
    baseRate: number
    storeOfferRate?: number
    totalRate: number
    bulkOrderBonus?: number
    performanceBonus?: number
    weeklyTargetBonus?: number
    specialEventBonus?: number
    finalEarning: number
    orderDate?: Date | string
    deliveryTime?: number | null
    riderRating?: number | null
    distance?: number | null
    bonusesApplied?: string | null
    rateCalculationLog?: string | null
    paymentStatus?: string
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    paymentReference?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutRiderEarningsInput
    store: StoreCreateNestedOneWithoutRiderEarningsInput
  }

  export type RiderEarningUncheckedCreateInput = {
    id?: string
    riderId: string
    clientId: string
    storeId: string
    orderId?: string | null
    baseRate: number
    storeOfferRate?: number
    totalRate: number
    bulkOrderBonus?: number
    performanceBonus?: number
    weeklyTargetBonus?: number
    specialEventBonus?: number
    finalEarning: number
    orderDate?: Date | string
    deliveryTime?: number | null
    riderRating?: number | null
    distance?: number | null
    bonusesApplied?: string | null
    rateCalculationLog?: string | null
    paymentStatus?: string
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    paymentReference?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiderEarningUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    baseRate?: FloatFieldUpdateOperationsInput | number
    storeOfferRate?: FloatFieldUpdateOperationsInput | number
    totalRate?: FloatFieldUpdateOperationsInput | number
    bulkOrderBonus?: FloatFieldUpdateOperationsInput | number
    performanceBonus?: FloatFieldUpdateOperationsInput | number
    weeklyTargetBonus?: FloatFieldUpdateOperationsInput | number
    specialEventBonus?: FloatFieldUpdateOperationsInput | number
    finalEarning?: FloatFieldUpdateOperationsInput | number
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryTime?: NullableIntFieldUpdateOperationsInput | number | null
    riderRating?: NullableFloatFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    bonusesApplied?: NullableStringFieldUpdateOperationsInput | string | null
    rateCalculationLog?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutRiderEarningsNestedInput
    store?: StoreUpdateOneRequiredWithoutRiderEarningsNestedInput
  }

  export type RiderEarningUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    baseRate?: FloatFieldUpdateOperationsInput | number
    storeOfferRate?: FloatFieldUpdateOperationsInput | number
    totalRate?: FloatFieldUpdateOperationsInput | number
    bulkOrderBonus?: FloatFieldUpdateOperationsInput | number
    performanceBonus?: FloatFieldUpdateOperationsInput | number
    weeklyTargetBonus?: FloatFieldUpdateOperationsInput | number
    specialEventBonus?: FloatFieldUpdateOperationsInput | number
    finalEarning?: FloatFieldUpdateOperationsInput | number
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryTime?: NullableIntFieldUpdateOperationsInput | number | null
    riderRating?: NullableFloatFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    bonusesApplied?: NullableStringFieldUpdateOperationsInput | string | null
    rateCalculationLog?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderEarningCreateManyInput = {
    id?: string
    riderId: string
    clientId: string
    storeId: string
    orderId?: string | null
    baseRate: number
    storeOfferRate?: number
    totalRate: number
    bulkOrderBonus?: number
    performanceBonus?: number
    weeklyTargetBonus?: number
    specialEventBonus?: number
    finalEarning: number
    orderDate?: Date | string
    deliveryTime?: number | null
    riderRating?: number | null
    distance?: number | null
    bonusesApplied?: string | null
    rateCalculationLog?: string | null
    paymentStatus?: string
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    paymentReference?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiderEarningUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    baseRate?: FloatFieldUpdateOperationsInput | number
    storeOfferRate?: FloatFieldUpdateOperationsInput | number
    totalRate?: FloatFieldUpdateOperationsInput | number
    bulkOrderBonus?: FloatFieldUpdateOperationsInput | number
    performanceBonus?: FloatFieldUpdateOperationsInput | number
    weeklyTargetBonus?: FloatFieldUpdateOperationsInput | number
    specialEventBonus?: FloatFieldUpdateOperationsInput | number
    finalEarning?: FloatFieldUpdateOperationsInput | number
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryTime?: NullableIntFieldUpdateOperationsInput | number | null
    riderRating?: NullableFloatFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    bonusesApplied?: NullableStringFieldUpdateOperationsInput | string | null
    rateCalculationLog?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderEarningUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    baseRate?: FloatFieldUpdateOperationsInput | number
    storeOfferRate?: FloatFieldUpdateOperationsInput | number
    totalRate?: FloatFieldUpdateOperationsInput | number
    bulkOrderBonus?: FloatFieldUpdateOperationsInput | number
    performanceBonus?: FloatFieldUpdateOperationsInput | number
    weeklyTargetBonus?: FloatFieldUpdateOperationsInput | number
    specialEventBonus?: FloatFieldUpdateOperationsInput | number
    finalEarning?: FloatFieldUpdateOperationsInput | number
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryTime?: NullableIntFieldUpdateOperationsInput | number | null
    riderRating?: NullableFloatFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    bonusesApplied?: NullableStringFieldUpdateOperationsInput | string | null
    rateCalculationLog?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WeeklyRiderSummaryCreateInput = {
    id?: string
    riderId: string
    weekStartDate: Date | string
    weekEndDate: Date | string
    totalOrders?: number
    averageOrdersPerDay?: number
    bestDayOrders?: number
    worstDayOrders?: number
    baseEarnings?: number
    offerEarnings?: number
    bonusEarnings?: number
    totalEarnings?: number
    averageRating?: number
    averageDeliveryTime?: number
    onTimeDeliveryPercentage?: number
    totalDistance?: number
    dailyTargetAchieved?: string | null
    weeklyTargetAchieved?: boolean
    bonusesEarned?: string | null
    topClientId?: string | null
    topStoreId?: string | null
    citiesWorked?: string | null
    totalPaid?: number
    pendingAmount?: number
    paymentCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WeeklyRiderSummaryUncheckedCreateInput = {
    id?: string
    riderId: string
    weekStartDate: Date | string
    weekEndDate: Date | string
    totalOrders?: number
    averageOrdersPerDay?: number
    bestDayOrders?: number
    worstDayOrders?: number
    baseEarnings?: number
    offerEarnings?: number
    bonusEarnings?: number
    totalEarnings?: number
    averageRating?: number
    averageDeliveryTime?: number
    onTimeDeliveryPercentage?: number
    totalDistance?: number
    dailyTargetAchieved?: string | null
    weeklyTargetAchieved?: boolean
    bonusesEarned?: string | null
    topClientId?: string | null
    topStoreId?: string | null
    citiesWorked?: string | null
    totalPaid?: number
    pendingAmount?: number
    paymentCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WeeklyRiderSummaryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    weekStartDate?: DateTimeFieldUpdateOperationsInput | Date | string
    weekEndDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalOrders?: IntFieldUpdateOperationsInput | number
    averageOrdersPerDay?: FloatFieldUpdateOperationsInput | number
    bestDayOrders?: IntFieldUpdateOperationsInput | number
    worstDayOrders?: IntFieldUpdateOperationsInput | number
    baseEarnings?: FloatFieldUpdateOperationsInput | number
    offerEarnings?: FloatFieldUpdateOperationsInput | number
    bonusEarnings?: FloatFieldUpdateOperationsInput | number
    totalEarnings?: FloatFieldUpdateOperationsInput | number
    averageRating?: FloatFieldUpdateOperationsInput | number
    averageDeliveryTime?: FloatFieldUpdateOperationsInput | number
    onTimeDeliveryPercentage?: FloatFieldUpdateOperationsInput | number
    totalDistance?: FloatFieldUpdateOperationsInput | number
    dailyTargetAchieved?: NullableStringFieldUpdateOperationsInput | string | null
    weeklyTargetAchieved?: BoolFieldUpdateOperationsInput | boolean
    bonusesEarned?: NullableStringFieldUpdateOperationsInput | string | null
    topClientId?: NullableStringFieldUpdateOperationsInput | string | null
    topStoreId?: NullableStringFieldUpdateOperationsInput | string | null
    citiesWorked?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    pendingAmount?: FloatFieldUpdateOperationsInput | number
    paymentCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WeeklyRiderSummaryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    weekStartDate?: DateTimeFieldUpdateOperationsInput | Date | string
    weekEndDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalOrders?: IntFieldUpdateOperationsInput | number
    averageOrdersPerDay?: FloatFieldUpdateOperationsInput | number
    bestDayOrders?: IntFieldUpdateOperationsInput | number
    worstDayOrders?: IntFieldUpdateOperationsInput | number
    baseEarnings?: FloatFieldUpdateOperationsInput | number
    offerEarnings?: FloatFieldUpdateOperationsInput | number
    bonusEarnings?: FloatFieldUpdateOperationsInput | number
    totalEarnings?: FloatFieldUpdateOperationsInput | number
    averageRating?: FloatFieldUpdateOperationsInput | number
    averageDeliveryTime?: FloatFieldUpdateOperationsInput | number
    onTimeDeliveryPercentage?: FloatFieldUpdateOperationsInput | number
    totalDistance?: FloatFieldUpdateOperationsInput | number
    dailyTargetAchieved?: NullableStringFieldUpdateOperationsInput | string | null
    weeklyTargetAchieved?: BoolFieldUpdateOperationsInput | boolean
    bonusesEarned?: NullableStringFieldUpdateOperationsInput | string | null
    topClientId?: NullableStringFieldUpdateOperationsInput | string | null
    topStoreId?: NullableStringFieldUpdateOperationsInput | string | null
    citiesWorked?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    pendingAmount?: FloatFieldUpdateOperationsInput | number
    paymentCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WeeklyRiderSummaryCreateManyInput = {
    id?: string
    riderId: string
    weekStartDate: Date | string
    weekEndDate: Date | string
    totalOrders?: number
    averageOrdersPerDay?: number
    bestDayOrders?: number
    worstDayOrders?: number
    baseEarnings?: number
    offerEarnings?: number
    bonusEarnings?: number
    totalEarnings?: number
    averageRating?: number
    averageDeliveryTime?: number
    onTimeDeliveryPercentage?: number
    totalDistance?: number
    dailyTargetAchieved?: string | null
    weeklyTargetAchieved?: boolean
    bonusesEarned?: string | null
    topClientId?: string | null
    topStoreId?: string | null
    citiesWorked?: string | null
    totalPaid?: number
    pendingAmount?: number
    paymentCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WeeklyRiderSummaryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    weekStartDate?: DateTimeFieldUpdateOperationsInput | Date | string
    weekEndDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalOrders?: IntFieldUpdateOperationsInput | number
    averageOrdersPerDay?: FloatFieldUpdateOperationsInput | number
    bestDayOrders?: IntFieldUpdateOperationsInput | number
    worstDayOrders?: IntFieldUpdateOperationsInput | number
    baseEarnings?: FloatFieldUpdateOperationsInput | number
    offerEarnings?: FloatFieldUpdateOperationsInput | number
    bonusEarnings?: FloatFieldUpdateOperationsInput | number
    totalEarnings?: FloatFieldUpdateOperationsInput | number
    averageRating?: FloatFieldUpdateOperationsInput | number
    averageDeliveryTime?: FloatFieldUpdateOperationsInput | number
    onTimeDeliveryPercentage?: FloatFieldUpdateOperationsInput | number
    totalDistance?: FloatFieldUpdateOperationsInput | number
    dailyTargetAchieved?: NullableStringFieldUpdateOperationsInput | string | null
    weeklyTargetAchieved?: BoolFieldUpdateOperationsInput | boolean
    bonusesEarned?: NullableStringFieldUpdateOperationsInput | string | null
    topClientId?: NullableStringFieldUpdateOperationsInput | string | null
    topStoreId?: NullableStringFieldUpdateOperationsInput | string | null
    citiesWorked?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    pendingAmount?: FloatFieldUpdateOperationsInput | number
    paymentCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WeeklyRiderSummaryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    weekStartDate?: DateTimeFieldUpdateOperationsInput | Date | string
    weekEndDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalOrders?: IntFieldUpdateOperationsInput | number
    averageOrdersPerDay?: FloatFieldUpdateOperationsInput | number
    bestDayOrders?: IntFieldUpdateOperationsInput | number
    worstDayOrders?: IntFieldUpdateOperationsInput | number
    baseEarnings?: FloatFieldUpdateOperationsInput | number
    offerEarnings?: FloatFieldUpdateOperationsInput | number
    bonusEarnings?: FloatFieldUpdateOperationsInput | number
    totalEarnings?: FloatFieldUpdateOperationsInput | number
    averageRating?: FloatFieldUpdateOperationsInput | number
    averageDeliveryTime?: FloatFieldUpdateOperationsInput | number
    onTimeDeliveryPercentage?: FloatFieldUpdateOperationsInput | number
    totalDistance?: FloatFieldUpdateOperationsInput | number
    dailyTargetAchieved?: NullableStringFieldUpdateOperationsInput | string | null
    weeklyTargetAchieved?: BoolFieldUpdateOperationsInput | boolean
    bonusesEarned?: NullableStringFieldUpdateOperationsInput | string | null
    topClientId?: NullableStringFieldUpdateOperationsInput | string | null
    topStoreId?: NullableStringFieldUpdateOperationsInput | string | null
    citiesWorked?: NullableStringFieldUpdateOperationsInput | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    pendingAmount?: FloatFieldUpdateOperationsInput | number
    paymentCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RateHistoryCreateInput = {
    id?: string
    clientId: string
    oldBaseRate: number
    newBaseRate: number
    changeReason?: string | null
    effectiveDate: Date | string
    changedBy?: string | null
    createdAt?: Date | string
  }

  export type RateHistoryUncheckedCreateInput = {
    id?: string
    clientId: string
    oldBaseRate: number
    newBaseRate: number
    changeReason?: string | null
    effectiveDate: Date | string
    changedBy?: string | null
    createdAt?: Date | string
  }

  export type RateHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    oldBaseRate?: FloatFieldUpdateOperationsInput | number
    newBaseRate?: FloatFieldUpdateOperationsInput | number
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RateHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    oldBaseRate?: FloatFieldUpdateOperationsInput | number
    newBaseRate?: FloatFieldUpdateOperationsInput | number
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RateHistoryCreateManyInput = {
    id?: string
    clientId: string
    oldBaseRate: number
    newBaseRate: number
    changeReason?: string | null
    effectiveDate: Date | string
    changedBy?: string | null
    createdAt?: Date | string
  }

  export type RateHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    oldBaseRate?: FloatFieldUpdateOperationsInput | number
    newBaseRate?: FloatFieldUpdateOperationsInput | number
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RateHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    oldBaseRate?: FloatFieldUpdateOperationsInput | number
    newBaseRate?: FloatFieldUpdateOperationsInput | number
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    code?: SortOrder
    state?: SortOrder
    country?: SortOrder
    timezone?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    pinCodeRange?: SortOrder
    regionCode?: SortOrder
    isActive?: SortOrder
    isOperational?: SortOrder
    launchDate?: SortOrder
    estimatedPopulation?: SortOrder
    marketPotential?: SortOrder
    version?: SortOrder
    lastModifiedBy?: SortOrder
    eventSequence?: SortOrder
    lastSyncAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CityAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
    estimatedPopulation?: SortOrder
    version?: SortOrder
    eventSequence?: SortOrder
  }

  export type CityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    code?: SortOrder
    state?: SortOrder
    country?: SortOrder
    timezone?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    pinCodeRange?: SortOrder
    regionCode?: SortOrder
    isActive?: SortOrder
    isOperational?: SortOrder
    launchDate?: SortOrder
    estimatedPopulation?: SortOrder
    marketPotential?: SortOrder
    version?: SortOrder
    lastModifiedBy?: SortOrder
    eventSequence?: SortOrder
    lastSyncAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    code?: SortOrder
    state?: SortOrder
    country?: SortOrder
    timezone?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    pinCodeRange?: SortOrder
    regionCode?: SortOrder
    isActive?: SortOrder
    isOperational?: SortOrder
    launchDate?: SortOrder
    estimatedPopulation?: SortOrder
    marketPotential?: SortOrder
    version?: SortOrder
    lastModifiedBy?: SortOrder
    eventSequence?: SortOrder
    lastSyncAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CitySumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
    estimatedPopulation?: SortOrder
    version?: SortOrder
    eventSequence?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type ClientListRelationFilter = {
    every?: ClientWhereInput
    some?: ClientWhereInput
    none?: ClientWhereInput
  }

  export type ClientOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StoreListRelationFilter = {
    every?: StoreWhereInput
    some?: StoreWhereInput
    none?: StoreWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type RiderEarningListRelationFilter = {
    every?: RiderEarningWhereInput
    some?: RiderEarningWhereInput
    none?: RiderEarningWhereInput
  }

  export type StoreOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RiderEarningOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    clientCode?: SortOrder
    clientType?: SortOrder
    industrySector?: SortOrder
    businessCategory?: SortOrder
    primaryContactPerson?: SortOrder
    designation?: SortOrder
    email?: SortOrder
    secondaryEmail?: SortOrder
    phone?: SortOrder
    secondaryPhone?: SortOrder
    city?: SortOrder
    state?: SortOrder
    pinCode?: SortOrder
    registrationNumber?: SortOrder
    panNumber?: SortOrder
    gstNumber?: SortOrder
    evPortfolio?: SortOrder
    fleetSize?: SortOrder
    hasChargingInfra?: SortOrder
    chargingInfraDetails?: SortOrder
    batteryTechPreference?: SortOrder
    serviceRequirements?: SortOrder
    paymentTerms?: SortOrder
    preferredPaymentMethod?: SortOrder
    taxCategory?: SortOrder
    discountCategory?: SortOrder
    baseOrderRate?: SortOrder
    rateEffectiveDate?: SortOrder
    rateType?: SortOrder
    minimumRate?: SortOrder
    maximumRate?: SortOrder
    bulkBonusEnabled?: SortOrder
    bulkOrdersThreshold?: SortOrder
    bulkBonusAmount?: SortOrder
    bulkResetPeriod?: SortOrder
    weeklyBonusEnabled?: SortOrder
    weeklyOrderTarget?: SortOrder
    weeklyBonusAmount?: SortOrder
    performanceMultiplierEnabled?: SortOrder
    topPerformerRate?: SortOrder
    performanceCriteria?: SortOrder
    paymentCycle?: SortOrder
    paymentMethods?: SortOrder
    minimumPayout?: SortOrder
    payoutDay?: SortOrder
    clientStatus?: SortOrder
    acquisitionDate?: SortOrder
    accountManagerId?: SortOrder
    clientPriority?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientAvgOrderByAggregateInput = {
    fleetSize?: SortOrder
    baseOrderRate?: SortOrder
    minimumRate?: SortOrder
    maximumRate?: SortOrder
    bulkOrdersThreshold?: SortOrder
    bulkBonusAmount?: SortOrder
    weeklyOrderTarget?: SortOrder
    weeklyBonusAmount?: SortOrder
    topPerformerRate?: SortOrder
    minimumPayout?: SortOrder
  }

  export type ClientMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    clientCode?: SortOrder
    clientType?: SortOrder
    industrySector?: SortOrder
    businessCategory?: SortOrder
    primaryContactPerson?: SortOrder
    designation?: SortOrder
    email?: SortOrder
    secondaryEmail?: SortOrder
    phone?: SortOrder
    secondaryPhone?: SortOrder
    city?: SortOrder
    state?: SortOrder
    pinCode?: SortOrder
    registrationNumber?: SortOrder
    panNumber?: SortOrder
    gstNumber?: SortOrder
    evPortfolio?: SortOrder
    fleetSize?: SortOrder
    hasChargingInfra?: SortOrder
    chargingInfraDetails?: SortOrder
    batteryTechPreference?: SortOrder
    serviceRequirements?: SortOrder
    paymentTerms?: SortOrder
    preferredPaymentMethod?: SortOrder
    taxCategory?: SortOrder
    discountCategory?: SortOrder
    baseOrderRate?: SortOrder
    rateEffectiveDate?: SortOrder
    rateType?: SortOrder
    minimumRate?: SortOrder
    maximumRate?: SortOrder
    bulkBonusEnabled?: SortOrder
    bulkOrdersThreshold?: SortOrder
    bulkBonusAmount?: SortOrder
    bulkResetPeriod?: SortOrder
    weeklyBonusEnabled?: SortOrder
    weeklyOrderTarget?: SortOrder
    weeklyBonusAmount?: SortOrder
    performanceMultiplierEnabled?: SortOrder
    topPerformerRate?: SortOrder
    performanceCriteria?: SortOrder
    paymentCycle?: SortOrder
    paymentMethods?: SortOrder
    minimumPayout?: SortOrder
    payoutDay?: SortOrder
    clientStatus?: SortOrder
    acquisitionDate?: SortOrder
    accountManagerId?: SortOrder
    clientPriority?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    clientCode?: SortOrder
    clientType?: SortOrder
    industrySector?: SortOrder
    businessCategory?: SortOrder
    primaryContactPerson?: SortOrder
    designation?: SortOrder
    email?: SortOrder
    secondaryEmail?: SortOrder
    phone?: SortOrder
    secondaryPhone?: SortOrder
    city?: SortOrder
    state?: SortOrder
    pinCode?: SortOrder
    registrationNumber?: SortOrder
    panNumber?: SortOrder
    gstNumber?: SortOrder
    evPortfolio?: SortOrder
    fleetSize?: SortOrder
    hasChargingInfra?: SortOrder
    chargingInfraDetails?: SortOrder
    batteryTechPreference?: SortOrder
    serviceRequirements?: SortOrder
    paymentTerms?: SortOrder
    preferredPaymentMethod?: SortOrder
    taxCategory?: SortOrder
    discountCategory?: SortOrder
    baseOrderRate?: SortOrder
    rateEffectiveDate?: SortOrder
    rateType?: SortOrder
    minimumRate?: SortOrder
    maximumRate?: SortOrder
    bulkBonusEnabled?: SortOrder
    bulkOrdersThreshold?: SortOrder
    bulkBonusAmount?: SortOrder
    bulkResetPeriod?: SortOrder
    weeklyBonusEnabled?: SortOrder
    weeklyOrderTarget?: SortOrder
    weeklyBonusAmount?: SortOrder
    performanceMultiplierEnabled?: SortOrder
    topPerformerRate?: SortOrder
    performanceCriteria?: SortOrder
    paymentCycle?: SortOrder
    paymentMethods?: SortOrder
    minimumPayout?: SortOrder
    payoutDay?: SortOrder
    clientStatus?: SortOrder
    acquisitionDate?: SortOrder
    accountManagerId?: SortOrder
    clientPriority?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientSumOrderByAggregateInput = {
    fleetSize?: SortOrder
    baseOrderRate?: SortOrder
    minimumRate?: SortOrder
    maximumRate?: SortOrder
    bulkOrdersThreshold?: SortOrder
    bulkBonusAmount?: SortOrder
    weeklyOrderTarget?: SortOrder
    weeklyBonusAmount?: SortOrder
    topPerformerRate?: SortOrder
    minimumPayout?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type ClientScalarRelationFilter = {
    is?: ClientWhereInput
    isNot?: ClientWhereInput
  }

  export type StoreClientIdStoreCodeCompoundUniqueInput = {
    clientId: string
    storeCode: string
  }

  export type StoreCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    storeName?: SortOrder
    storeCode?: SortOrder
    storeType?: SortOrder
    brandFranchise?: SortOrder
    completeAddress?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    pinCode?: SortOrder
    landmark?: SortOrder
    gpsLatitude?: SortOrder
    gpsLongitude?: SortOrder
    zoneRegion?: SortOrder
    storeManagerName?: SortOrder
    contactNumber?: SortOrder
    emailAddress?: SortOrder
    whatsappNumber?: SortOrder
    storeStatus?: SortOrder
    currentOfferRate?: SortOrder
    offerStartDate?: SortOrder
    offerEndDate?: SortOrder
    offerType?: SortOrder
    offerReason?: SortOrder
    isOfferActive?: SortOrder
    busyLevel?: SortOrder
    averageOrdersPerDay?: SortOrder
    peakHours?: SortOrder
    busyDays?: SortOrder
    orderDifficultyLevel?: SortOrder
    averageDeliveryDistance?: SortOrder
    monthlyOrderVolume?: SortOrder
    riderRating?: SortOrder
    averagePickupTime?: SortOrder
    storePriority?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StoreAvgOrderByAggregateInput = {
    gpsLatitude?: SortOrder
    gpsLongitude?: SortOrder
    currentOfferRate?: SortOrder
    averageOrdersPerDay?: SortOrder
    averageDeliveryDistance?: SortOrder
    monthlyOrderVolume?: SortOrder
    riderRating?: SortOrder
    averagePickupTime?: SortOrder
  }

  export type StoreMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    storeName?: SortOrder
    storeCode?: SortOrder
    storeType?: SortOrder
    brandFranchise?: SortOrder
    completeAddress?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    pinCode?: SortOrder
    landmark?: SortOrder
    gpsLatitude?: SortOrder
    gpsLongitude?: SortOrder
    zoneRegion?: SortOrder
    storeManagerName?: SortOrder
    contactNumber?: SortOrder
    emailAddress?: SortOrder
    whatsappNumber?: SortOrder
    storeStatus?: SortOrder
    currentOfferRate?: SortOrder
    offerStartDate?: SortOrder
    offerEndDate?: SortOrder
    offerType?: SortOrder
    offerReason?: SortOrder
    isOfferActive?: SortOrder
    busyLevel?: SortOrder
    averageOrdersPerDay?: SortOrder
    peakHours?: SortOrder
    busyDays?: SortOrder
    orderDifficultyLevel?: SortOrder
    averageDeliveryDistance?: SortOrder
    monthlyOrderVolume?: SortOrder
    riderRating?: SortOrder
    averagePickupTime?: SortOrder
    storePriority?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StoreMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    storeName?: SortOrder
    storeCode?: SortOrder
    storeType?: SortOrder
    brandFranchise?: SortOrder
    completeAddress?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    pinCode?: SortOrder
    landmark?: SortOrder
    gpsLatitude?: SortOrder
    gpsLongitude?: SortOrder
    zoneRegion?: SortOrder
    storeManagerName?: SortOrder
    contactNumber?: SortOrder
    emailAddress?: SortOrder
    whatsappNumber?: SortOrder
    storeStatus?: SortOrder
    currentOfferRate?: SortOrder
    offerStartDate?: SortOrder
    offerEndDate?: SortOrder
    offerType?: SortOrder
    offerReason?: SortOrder
    isOfferActive?: SortOrder
    busyLevel?: SortOrder
    averageOrdersPerDay?: SortOrder
    peakHours?: SortOrder
    busyDays?: SortOrder
    orderDifficultyLevel?: SortOrder
    averageDeliveryDistance?: SortOrder
    monthlyOrderVolume?: SortOrder
    riderRating?: SortOrder
    averagePickupTime?: SortOrder
    storePriority?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StoreSumOrderByAggregateInput = {
    gpsLatitude?: SortOrder
    gpsLongitude?: SortOrder
    currentOfferRate?: SortOrder
    averageOrdersPerDay?: SortOrder
    averageDeliveryDistance?: SortOrder
    monthlyOrderVolume?: SortOrder
    riderRating?: SortOrder
    averagePickupTime?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type StoreScalarRelationFilter = {
    is?: StoreWhereInput
    isNot?: StoreWhereInput
  }

  export type RiderEarningCountOrderByAggregateInput = {
    id?: SortOrder
    riderId?: SortOrder
    clientId?: SortOrder
    storeId?: SortOrder
    orderId?: SortOrder
    baseRate?: SortOrder
    storeOfferRate?: SortOrder
    totalRate?: SortOrder
    bulkOrderBonus?: SortOrder
    performanceBonus?: SortOrder
    weeklyTargetBonus?: SortOrder
    specialEventBonus?: SortOrder
    finalEarning?: SortOrder
    orderDate?: SortOrder
    deliveryTime?: SortOrder
    riderRating?: SortOrder
    distance?: SortOrder
    bonusesApplied?: SortOrder
    rateCalculationLog?: SortOrder
    paymentStatus?: SortOrder
    paymentDate?: SortOrder
    paymentMethod?: SortOrder
    paymentReference?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RiderEarningAvgOrderByAggregateInput = {
    baseRate?: SortOrder
    storeOfferRate?: SortOrder
    totalRate?: SortOrder
    bulkOrderBonus?: SortOrder
    performanceBonus?: SortOrder
    weeklyTargetBonus?: SortOrder
    specialEventBonus?: SortOrder
    finalEarning?: SortOrder
    deliveryTime?: SortOrder
    riderRating?: SortOrder
    distance?: SortOrder
  }

  export type RiderEarningMaxOrderByAggregateInput = {
    id?: SortOrder
    riderId?: SortOrder
    clientId?: SortOrder
    storeId?: SortOrder
    orderId?: SortOrder
    baseRate?: SortOrder
    storeOfferRate?: SortOrder
    totalRate?: SortOrder
    bulkOrderBonus?: SortOrder
    performanceBonus?: SortOrder
    weeklyTargetBonus?: SortOrder
    specialEventBonus?: SortOrder
    finalEarning?: SortOrder
    orderDate?: SortOrder
    deliveryTime?: SortOrder
    riderRating?: SortOrder
    distance?: SortOrder
    bonusesApplied?: SortOrder
    rateCalculationLog?: SortOrder
    paymentStatus?: SortOrder
    paymentDate?: SortOrder
    paymentMethod?: SortOrder
    paymentReference?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RiderEarningMinOrderByAggregateInput = {
    id?: SortOrder
    riderId?: SortOrder
    clientId?: SortOrder
    storeId?: SortOrder
    orderId?: SortOrder
    baseRate?: SortOrder
    storeOfferRate?: SortOrder
    totalRate?: SortOrder
    bulkOrderBonus?: SortOrder
    performanceBonus?: SortOrder
    weeklyTargetBonus?: SortOrder
    specialEventBonus?: SortOrder
    finalEarning?: SortOrder
    orderDate?: SortOrder
    deliveryTime?: SortOrder
    riderRating?: SortOrder
    distance?: SortOrder
    bonusesApplied?: SortOrder
    rateCalculationLog?: SortOrder
    paymentStatus?: SortOrder
    paymentDate?: SortOrder
    paymentMethod?: SortOrder
    paymentReference?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RiderEarningSumOrderByAggregateInput = {
    baseRate?: SortOrder
    storeOfferRate?: SortOrder
    totalRate?: SortOrder
    bulkOrderBonus?: SortOrder
    performanceBonus?: SortOrder
    weeklyTargetBonus?: SortOrder
    specialEventBonus?: SortOrder
    finalEarning?: SortOrder
    deliveryTime?: SortOrder
    riderRating?: SortOrder
    distance?: SortOrder
  }

  export type WeeklyRiderSummaryRiderIdWeekStartDateCompoundUniqueInput = {
    riderId: string
    weekStartDate: Date | string
  }

  export type WeeklyRiderSummaryCountOrderByAggregateInput = {
    id?: SortOrder
    riderId?: SortOrder
    weekStartDate?: SortOrder
    weekEndDate?: SortOrder
    totalOrders?: SortOrder
    averageOrdersPerDay?: SortOrder
    bestDayOrders?: SortOrder
    worstDayOrders?: SortOrder
    baseEarnings?: SortOrder
    offerEarnings?: SortOrder
    bonusEarnings?: SortOrder
    totalEarnings?: SortOrder
    averageRating?: SortOrder
    averageDeliveryTime?: SortOrder
    onTimeDeliveryPercentage?: SortOrder
    totalDistance?: SortOrder
    dailyTargetAchieved?: SortOrder
    weeklyTargetAchieved?: SortOrder
    bonusesEarned?: SortOrder
    topClientId?: SortOrder
    topStoreId?: SortOrder
    citiesWorked?: SortOrder
    totalPaid?: SortOrder
    pendingAmount?: SortOrder
    paymentCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WeeklyRiderSummaryAvgOrderByAggregateInput = {
    totalOrders?: SortOrder
    averageOrdersPerDay?: SortOrder
    bestDayOrders?: SortOrder
    worstDayOrders?: SortOrder
    baseEarnings?: SortOrder
    offerEarnings?: SortOrder
    bonusEarnings?: SortOrder
    totalEarnings?: SortOrder
    averageRating?: SortOrder
    averageDeliveryTime?: SortOrder
    onTimeDeliveryPercentage?: SortOrder
    totalDistance?: SortOrder
    totalPaid?: SortOrder
    pendingAmount?: SortOrder
    paymentCount?: SortOrder
  }

  export type WeeklyRiderSummaryMaxOrderByAggregateInput = {
    id?: SortOrder
    riderId?: SortOrder
    weekStartDate?: SortOrder
    weekEndDate?: SortOrder
    totalOrders?: SortOrder
    averageOrdersPerDay?: SortOrder
    bestDayOrders?: SortOrder
    worstDayOrders?: SortOrder
    baseEarnings?: SortOrder
    offerEarnings?: SortOrder
    bonusEarnings?: SortOrder
    totalEarnings?: SortOrder
    averageRating?: SortOrder
    averageDeliveryTime?: SortOrder
    onTimeDeliveryPercentage?: SortOrder
    totalDistance?: SortOrder
    dailyTargetAchieved?: SortOrder
    weeklyTargetAchieved?: SortOrder
    bonusesEarned?: SortOrder
    topClientId?: SortOrder
    topStoreId?: SortOrder
    citiesWorked?: SortOrder
    totalPaid?: SortOrder
    pendingAmount?: SortOrder
    paymentCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WeeklyRiderSummaryMinOrderByAggregateInput = {
    id?: SortOrder
    riderId?: SortOrder
    weekStartDate?: SortOrder
    weekEndDate?: SortOrder
    totalOrders?: SortOrder
    averageOrdersPerDay?: SortOrder
    bestDayOrders?: SortOrder
    worstDayOrders?: SortOrder
    baseEarnings?: SortOrder
    offerEarnings?: SortOrder
    bonusEarnings?: SortOrder
    totalEarnings?: SortOrder
    averageRating?: SortOrder
    averageDeliveryTime?: SortOrder
    onTimeDeliveryPercentage?: SortOrder
    totalDistance?: SortOrder
    dailyTargetAchieved?: SortOrder
    weeklyTargetAchieved?: SortOrder
    bonusesEarned?: SortOrder
    topClientId?: SortOrder
    topStoreId?: SortOrder
    citiesWorked?: SortOrder
    totalPaid?: SortOrder
    pendingAmount?: SortOrder
    paymentCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WeeklyRiderSummarySumOrderByAggregateInput = {
    totalOrders?: SortOrder
    averageOrdersPerDay?: SortOrder
    bestDayOrders?: SortOrder
    worstDayOrders?: SortOrder
    baseEarnings?: SortOrder
    offerEarnings?: SortOrder
    bonusEarnings?: SortOrder
    totalEarnings?: SortOrder
    averageRating?: SortOrder
    averageDeliveryTime?: SortOrder
    onTimeDeliveryPercentage?: SortOrder
    totalDistance?: SortOrder
    totalPaid?: SortOrder
    pendingAmount?: SortOrder
    paymentCount?: SortOrder
  }

  export type RateHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    oldBaseRate?: SortOrder
    newBaseRate?: SortOrder
    changeReason?: SortOrder
    effectiveDate?: SortOrder
    changedBy?: SortOrder
    createdAt?: SortOrder
  }

  export type RateHistoryAvgOrderByAggregateInput = {
    oldBaseRate?: SortOrder
    newBaseRate?: SortOrder
  }

  export type RateHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    oldBaseRate?: SortOrder
    newBaseRate?: SortOrder
    changeReason?: SortOrder
    effectiveDate?: SortOrder
    changedBy?: SortOrder
    createdAt?: SortOrder
  }

  export type RateHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    oldBaseRate?: SortOrder
    newBaseRate?: SortOrder
    changeReason?: SortOrder
    effectiveDate?: SortOrder
    changedBy?: SortOrder
    createdAt?: SortOrder
  }

  export type RateHistorySumOrderByAggregateInput = {
    oldBaseRate?: SortOrder
    newBaseRate?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type ClientCreateNestedManyWithoutAccountManagerInput = {
    create?: XOR<ClientCreateWithoutAccountManagerInput, ClientUncheckedCreateWithoutAccountManagerInput> | ClientCreateWithoutAccountManagerInput[] | ClientUncheckedCreateWithoutAccountManagerInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutAccountManagerInput | ClientCreateOrConnectWithoutAccountManagerInput[]
    createMany?: ClientCreateManyAccountManagerInputEnvelope
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
  }

  export type ClientUncheckedCreateNestedManyWithoutAccountManagerInput = {
    create?: XOR<ClientCreateWithoutAccountManagerInput, ClientUncheckedCreateWithoutAccountManagerInput> | ClientCreateWithoutAccountManagerInput[] | ClientUncheckedCreateWithoutAccountManagerInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutAccountManagerInput | ClientCreateOrConnectWithoutAccountManagerInput[]
    createMany?: ClientCreateManyAccountManagerInputEnvelope
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
  }

  export type ClientUpdateManyWithoutAccountManagerNestedInput = {
    create?: XOR<ClientCreateWithoutAccountManagerInput, ClientUncheckedCreateWithoutAccountManagerInput> | ClientCreateWithoutAccountManagerInput[] | ClientUncheckedCreateWithoutAccountManagerInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutAccountManagerInput | ClientCreateOrConnectWithoutAccountManagerInput[]
    upsert?: ClientUpsertWithWhereUniqueWithoutAccountManagerInput | ClientUpsertWithWhereUniqueWithoutAccountManagerInput[]
    createMany?: ClientCreateManyAccountManagerInputEnvelope
    set?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    disconnect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    delete?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    update?: ClientUpdateWithWhereUniqueWithoutAccountManagerInput | ClientUpdateWithWhereUniqueWithoutAccountManagerInput[]
    updateMany?: ClientUpdateManyWithWhereWithoutAccountManagerInput | ClientUpdateManyWithWhereWithoutAccountManagerInput[]
    deleteMany?: ClientScalarWhereInput | ClientScalarWhereInput[]
  }

  export type ClientUncheckedUpdateManyWithoutAccountManagerNestedInput = {
    create?: XOR<ClientCreateWithoutAccountManagerInput, ClientUncheckedCreateWithoutAccountManagerInput> | ClientCreateWithoutAccountManagerInput[] | ClientUncheckedCreateWithoutAccountManagerInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutAccountManagerInput | ClientCreateOrConnectWithoutAccountManagerInput[]
    upsert?: ClientUpsertWithWhereUniqueWithoutAccountManagerInput | ClientUpsertWithWhereUniqueWithoutAccountManagerInput[]
    createMany?: ClientCreateManyAccountManagerInputEnvelope
    set?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    disconnect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    delete?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    update?: ClientUpdateWithWhereUniqueWithoutAccountManagerInput | ClientUpdateWithWhereUniqueWithoutAccountManagerInput[]
    updateMany?: ClientUpdateManyWithWhereWithoutAccountManagerInput | ClientUpdateManyWithWhereWithoutAccountManagerInput[]
    deleteMany?: ClientScalarWhereInput | ClientScalarWhereInput[]
  }

  export type StoreCreateNestedManyWithoutClientInput = {
    create?: XOR<StoreCreateWithoutClientInput, StoreUncheckedCreateWithoutClientInput> | StoreCreateWithoutClientInput[] | StoreUncheckedCreateWithoutClientInput[]
    connectOrCreate?: StoreCreateOrConnectWithoutClientInput | StoreCreateOrConnectWithoutClientInput[]
    createMany?: StoreCreateManyClientInputEnvelope
    connect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutClientsManagedInput = {
    create?: XOR<UserCreateWithoutClientsManagedInput, UserUncheckedCreateWithoutClientsManagedInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientsManagedInput
    connect?: UserWhereUniqueInput
  }

  export type RiderEarningCreateNestedManyWithoutClientInput = {
    create?: XOR<RiderEarningCreateWithoutClientInput, RiderEarningUncheckedCreateWithoutClientInput> | RiderEarningCreateWithoutClientInput[] | RiderEarningUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RiderEarningCreateOrConnectWithoutClientInput | RiderEarningCreateOrConnectWithoutClientInput[]
    createMany?: RiderEarningCreateManyClientInputEnvelope
    connect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
  }

  export type StoreUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<StoreCreateWithoutClientInput, StoreUncheckedCreateWithoutClientInput> | StoreCreateWithoutClientInput[] | StoreUncheckedCreateWithoutClientInput[]
    connectOrCreate?: StoreCreateOrConnectWithoutClientInput | StoreCreateOrConnectWithoutClientInput[]
    createMany?: StoreCreateManyClientInputEnvelope
    connect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
  }

  export type RiderEarningUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<RiderEarningCreateWithoutClientInput, RiderEarningUncheckedCreateWithoutClientInput> | RiderEarningCreateWithoutClientInput[] | RiderEarningUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RiderEarningCreateOrConnectWithoutClientInput | RiderEarningCreateOrConnectWithoutClientInput[]
    createMany?: RiderEarningCreateManyClientInputEnvelope
    connect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
  }

  export type StoreUpdateManyWithoutClientNestedInput = {
    create?: XOR<StoreCreateWithoutClientInput, StoreUncheckedCreateWithoutClientInput> | StoreCreateWithoutClientInput[] | StoreUncheckedCreateWithoutClientInput[]
    connectOrCreate?: StoreCreateOrConnectWithoutClientInput | StoreCreateOrConnectWithoutClientInput[]
    upsert?: StoreUpsertWithWhereUniqueWithoutClientInput | StoreUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: StoreCreateManyClientInputEnvelope
    set?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    disconnect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    delete?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    connect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    update?: StoreUpdateWithWhereUniqueWithoutClientInput | StoreUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: StoreUpdateManyWithWhereWithoutClientInput | StoreUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: StoreScalarWhereInput | StoreScalarWhereInput[]
  }

  export type UserUpdateOneWithoutClientsManagedNestedInput = {
    create?: XOR<UserCreateWithoutClientsManagedInput, UserUncheckedCreateWithoutClientsManagedInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientsManagedInput
    upsert?: UserUpsertWithoutClientsManagedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutClientsManagedInput, UserUpdateWithoutClientsManagedInput>, UserUncheckedUpdateWithoutClientsManagedInput>
  }

  export type RiderEarningUpdateManyWithoutClientNestedInput = {
    create?: XOR<RiderEarningCreateWithoutClientInput, RiderEarningUncheckedCreateWithoutClientInput> | RiderEarningCreateWithoutClientInput[] | RiderEarningUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RiderEarningCreateOrConnectWithoutClientInput | RiderEarningCreateOrConnectWithoutClientInput[]
    upsert?: RiderEarningUpsertWithWhereUniqueWithoutClientInput | RiderEarningUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: RiderEarningCreateManyClientInputEnvelope
    set?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    disconnect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    delete?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    connect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    update?: RiderEarningUpdateWithWhereUniqueWithoutClientInput | RiderEarningUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: RiderEarningUpdateManyWithWhereWithoutClientInput | RiderEarningUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: RiderEarningScalarWhereInput | RiderEarningScalarWhereInput[]
  }

  export type StoreUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<StoreCreateWithoutClientInput, StoreUncheckedCreateWithoutClientInput> | StoreCreateWithoutClientInput[] | StoreUncheckedCreateWithoutClientInput[]
    connectOrCreate?: StoreCreateOrConnectWithoutClientInput | StoreCreateOrConnectWithoutClientInput[]
    upsert?: StoreUpsertWithWhereUniqueWithoutClientInput | StoreUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: StoreCreateManyClientInputEnvelope
    set?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    disconnect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    delete?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    connect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    update?: StoreUpdateWithWhereUniqueWithoutClientInput | StoreUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: StoreUpdateManyWithWhereWithoutClientInput | StoreUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: StoreScalarWhereInput | StoreScalarWhereInput[]
  }

  export type RiderEarningUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<RiderEarningCreateWithoutClientInput, RiderEarningUncheckedCreateWithoutClientInput> | RiderEarningCreateWithoutClientInput[] | RiderEarningUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RiderEarningCreateOrConnectWithoutClientInput | RiderEarningCreateOrConnectWithoutClientInput[]
    upsert?: RiderEarningUpsertWithWhereUniqueWithoutClientInput | RiderEarningUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: RiderEarningCreateManyClientInputEnvelope
    set?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    disconnect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    delete?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    connect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    update?: RiderEarningUpdateWithWhereUniqueWithoutClientInput | RiderEarningUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: RiderEarningUpdateManyWithWhereWithoutClientInput | RiderEarningUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: RiderEarningScalarWhereInput | RiderEarningScalarWhereInput[]
  }

  export type ClientCreateNestedOneWithoutStoresInput = {
    create?: XOR<ClientCreateWithoutStoresInput, ClientUncheckedCreateWithoutStoresInput>
    connectOrCreate?: ClientCreateOrConnectWithoutStoresInput
    connect?: ClientWhereUniqueInput
  }

  export type RiderEarningCreateNestedManyWithoutStoreInput = {
    create?: XOR<RiderEarningCreateWithoutStoreInput, RiderEarningUncheckedCreateWithoutStoreInput> | RiderEarningCreateWithoutStoreInput[] | RiderEarningUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: RiderEarningCreateOrConnectWithoutStoreInput | RiderEarningCreateOrConnectWithoutStoreInput[]
    createMany?: RiderEarningCreateManyStoreInputEnvelope
    connect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
  }

  export type RiderEarningUncheckedCreateNestedManyWithoutStoreInput = {
    create?: XOR<RiderEarningCreateWithoutStoreInput, RiderEarningUncheckedCreateWithoutStoreInput> | RiderEarningCreateWithoutStoreInput[] | RiderEarningUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: RiderEarningCreateOrConnectWithoutStoreInput | RiderEarningCreateOrConnectWithoutStoreInput[]
    createMany?: RiderEarningCreateManyStoreInputEnvelope
    connect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ClientUpdateOneRequiredWithoutStoresNestedInput = {
    create?: XOR<ClientCreateWithoutStoresInput, ClientUncheckedCreateWithoutStoresInput>
    connectOrCreate?: ClientCreateOrConnectWithoutStoresInput
    upsert?: ClientUpsertWithoutStoresInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutStoresInput, ClientUpdateWithoutStoresInput>, ClientUncheckedUpdateWithoutStoresInput>
  }

  export type RiderEarningUpdateManyWithoutStoreNestedInput = {
    create?: XOR<RiderEarningCreateWithoutStoreInput, RiderEarningUncheckedCreateWithoutStoreInput> | RiderEarningCreateWithoutStoreInput[] | RiderEarningUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: RiderEarningCreateOrConnectWithoutStoreInput | RiderEarningCreateOrConnectWithoutStoreInput[]
    upsert?: RiderEarningUpsertWithWhereUniqueWithoutStoreInput | RiderEarningUpsertWithWhereUniqueWithoutStoreInput[]
    createMany?: RiderEarningCreateManyStoreInputEnvelope
    set?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    disconnect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    delete?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    connect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    update?: RiderEarningUpdateWithWhereUniqueWithoutStoreInput | RiderEarningUpdateWithWhereUniqueWithoutStoreInput[]
    updateMany?: RiderEarningUpdateManyWithWhereWithoutStoreInput | RiderEarningUpdateManyWithWhereWithoutStoreInput[]
    deleteMany?: RiderEarningScalarWhereInput | RiderEarningScalarWhereInput[]
  }

  export type RiderEarningUncheckedUpdateManyWithoutStoreNestedInput = {
    create?: XOR<RiderEarningCreateWithoutStoreInput, RiderEarningUncheckedCreateWithoutStoreInput> | RiderEarningCreateWithoutStoreInput[] | RiderEarningUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: RiderEarningCreateOrConnectWithoutStoreInput | RiderEarningCreateOrConnectWithoutStoreInput[]
    upsert?: RiderEarningUpsertWithWhereUniqueWithoutStoreInput | RiderEarningUpsertWithWhereUniqueWithoutStoreInput[]
    createMany?: RiderEarningCreateManyStoreInputEnvelope
    set?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    disconnect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    delete?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    connect?: RiderEarningWhereUniqueInput | RiderEarningWhereUniqueInput[]
    update?: RiderEarningUpdateWithWhereUniqueWithoutStoreInput | RiderEarningUpdateWithWhereUniqueWithoutStoreInput[]
    updateMany?: RiderEarningUpdateManyWithWhereWithoutStoreInput | RiderEarningUpdateManyWithWhereWithoutStoreInput[]
    deleteMany?: RiderEarningScalarWhereInput | RiderEarningScalarWhereInput[]
  }

  export type ClientCreateNestedOneWithoutRiderEarningsInput = {
    create?: XOR<ClientCreateWithoutRiderEarningsInput, ClientUncheckedCreateWithoutRiderEarningsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutRiderEarningsInput
    connect?: ClientWhereUniqueInput
  }

  export type StoreCreateNestedOneWithoutRiderEarningsInput = {
    create?: XOR<StoreCreateWithoutRiderEarningsInput, StoreUncheckedCreateWithoutRiderEarningsInput>
    connectOrCreate?: StoreCreateOrConnectWithoutRiderEarningsInput
    connect?: StoreWhereUniqueInput
  }

  export type ClientUpdateOneRequiredWithoutRiderEarningsNestedInput = {
    create?: XOR<ClientCreateWithoutRiderEarningsInput, ClientUncheckedCreateWithoutRiderEarningsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutRiderEarningsInput
    upsert?: ClientUpsertWithoutRiderEarningsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutRiderEarningsInput, ClientUpdateWithoutRiderEarningsInput>, ClientUncheckedUpdateWithoutRiderEarningsInput>
  }

  export type StoreUpdateOneRequiredWithoutRiderEarningsNestedInput = {
    create?: XOR<StoreCreateWithoutRiderEarningsInput, StoreUncheckedCreateWithoutRiderEarningsInput>
    connectOrCreate?: StoreCreateOrConnectWithoutRiderEarningsInput
    upsert?: StoreUpsertWithoutRiderEarningsInput
    connect?: StoreWhereUniqueInput
    update?: XOR<XOR<StoreUpdateToOneWithWhereWithoutRiderEarningsInput, StoreUpdateWithoutRiderEarningsInput>, StoreUncheckedUpdateWithoutRiderEarningsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type ClientCreateWithoutAccountManagerInput = {
    id?: string
    name: string
    clientCode: string
    clientType: string
    industrySector?: string | null
    businessCategory?: string | null
    primaryContactPerson?: string | null
    designation?: string | null
    email?: string | null
    secondaryEmail?: string | null
    phone?: string | null
    secondaryPhone?: string | null
    city?: string | null
    state?: string | null
    pinCode?: string | null
    registrationNumber?: string | null
    panNumber?: string | null
    gstNumber?: string | null
    evPortfolio?: string | null
    fleetSize?: number | null
    hasChargingInfra?: boolean
    chargingInfraDetails?: string | null
    batteryTechPreference?: string | null
    serviceRequirements?: string | null
    paymentTerms?: string | null
    preferredPaymentMethod?: string | null
    taxCategory?: string | null
    discountCategory?: string | null
    baseOrderRate?: number
    rateEffectiveDate?: Date | string
    rateType?: string
    minimumRate?: number
    maximumRate?: number
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: number
    bulkBonusAmount?: number
    bulkResetPeriod?: string
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: number
    weeklyBonusAmount?: number
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: number
    performanceCriteria?: string
    paymentCycle?: string
    paymentMethods?: string | null
    minimumPayout?: number
    payoutDay?: string
    clientStatus?: string
    acquisitionDate?: Date | string
    clientPriority?: string
    relationshipType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stores?: StoreCreateNestedManyWithoutClientInput
    riderEarnings?: RiderEarningCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutAccountManagerInput = {
    id?: string
    name: string
    clientCode: string
    clientType: string
    industrySector?: string | null
    businessCategory?: string | null
    primaryContactPerson?: string | null
    designation?: string | null
    email?: string | null
    secondaryEmail?: string | null
    phone?: string | null
    secondaryPhone?: string | null
    city?: string | null
    state?: string | null
    pinCode?: string | null
    registrationNumber?: string | null
    panNumber?: string | null
    gstNumber?: string | null
    evPortfolio?: string | null
    fleetSize?: number | null
    hasChargingInfra?: boolean
    chargingInfraDetails?: string | null
    batteryTechPreference?: string | null
    serviceRequirements?: string | null
    paymentTerms?: string | null
    preferredPaymentMethod?: string | null
    taxCategory?: string | null
    discountCategory?: string | null
    baseOrderRate?: number
    rateEffectiveDate?: Date | string
    rateType?: string
    minimumRate?: number
    maximumRate?: number
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: number
    bulkBonusAmount?: number
    bulkResetPeriod?: string
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: number
    weeklyBonusAmount?: number
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: number
    performanceCriteria?: string
    paymentCycle?: string
    paymentMethods?: string | null
    minimumPayout?: number
    payoutDay?: string
    clientStatus?: string
    acquisitionDate?: Date | string
    clientPriority?: string
    relationshipType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stores?: StoreUncheckedCreateNestedManyWithoutClientInput
    riderEarnings?: RiderEarningUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutAccountManagerInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutAccountManagerInput, ClientUncheckedCreateWithoutAccountManagerInput>
  }

  export type ClientCreateManyAccountManagerInputEnvelope = {
    data: ClientCreateManyAccountManagerInput | ClientCreateManyAccountManagerInput[]
    skipDuplicates?: boolean
  }

  export type ClientUpsertWithWhereUniqueWithoutAccountManagerInput = {
    where: ClientWhereUniqueInput
    update: XOR<ClientUpdateWithoutAccountManagerInput, ClientUncheckedUpdateWithoutAccountManagerInput>
    create: XOR<ClientCreateWithoutAccountManagerInput, ClientUncheckedCreateWithoutAccountManagerInput>
  }

  export type ClientUpdateWithWhereUniqueWithoutAccountManagerInput = {
    where: ClientWhereUniqueInput
    data: XOR<ClientUpdateWithoutAccountManagerInput, ClientUncheckedUpdateWithoutAccountManagerInput>
  }

  export type ClientUpdateManyWithWhereWithoutAccountManagerInput = {
    where: ClientScalarWhereInput
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyWithoutAccountManagerInput>
  }

  export type ClientScalarWhereInput = {
    AND?: ClientScalarWhereInput | ClientScalarWhereInput[]
    OR?: ClientScalarWhereInput[]
    NOT?: ClientScalarWhereInput | ClientScalarWhereInput[]
    id?: StringFilter<"Client"> | string
    name?: StringFilter<"Client"> | string
    clientCode?: StringFilter<"Client"> | string
    clientType?: StringFilter<"Client"> | string
    industrySector?: StringNullableFilter<"Client"> | string | null
    businessCategory?: StringNullableFilter<"Client"> | string | null
    primaryContactPerson?: StringNullableFilter<"Client"> | string | null
    designation?: StringNullableFilter<"Client"> | string | null
    email?: StringNullableFilter<"Client"> | string | null
    secondaryEmail?: StringNullableFilter<"Client"> | string | null
    phone?: StringNullableFilter<"Client"> | string | null
    secondaryPhone?: StringNullableFilter<"Client"> | string | null
    city?: StringNullableFilter<"Client"> | string | null
    state?: StringNullableFilter<"Client"> | string | null
    pinCode?: StringNullableFilter<"Client"> | string | null
    registrationNumber?: StringNullableFilter<"Client"> | string | null
    panNumber?: StringNullableFilter<"Client"> | string | null
    gstNumber?: StringNullableFilter<"Client"> | string | null
    evPortfolio?: StringNullableFilter<"Client"> | string | null
    fleetSize?: IntNullableFilter<"Client"> | number | null
    hasChargingInfra?: BoolFilter<"Client"> | boolean
    chargingInfraDetails?: StringNullableFilter<"Client"> | string | null
    batteryTechPreference?: StringNullableFilter<"Client"> | string | null
    serviceRequirements?: StringNullableFilter<"Client"> | string | null
    paymentTerms?: StringNullableFilter<"Client"> | string | null
    preferredPaymentMethod?: StringNullableFilter<"Client"> | string | null
    taxCategory?: StringNullableFilter<"Client"> | string | null
    discountCategory?: StringNullableFilter<"Client"> | string | null
    baseOrderRate?: FloatFilter<"Client"> | number
    rateEffectiveDate?: DateTimeFilter<"Client"> | Date | string
    rateType?: StringFilter<"Client"> | string
    minimumRate?: FloatFilter<"Client"> | number
    maximumRate?: FloatFilter<"Client"> | number
    bulkBonusEnabled?: BoolFilter<"Client"> | boolean
    bulkOrdersThreshold?: IntFilter<"Client"> | number
    bulkBonusAmount?: FloatFilter<"Client"> | number
    bulkResetPeriod?: StringFilter<"Client"> | string
    weeklyBonusEnabled?: BoolFilter<"Client"> | boolean
    weeklyOrderTarget?: IntFilter<"Client"> | number
    weeklyBonusAmount?: FloatFilter<"Client"> | number
    performanceMultiplierEnabled?: BoolFilter<"Client"> | boolean
    topPerformerRate?: FloatFilter<"Client"> | number
    performanceCriteria?: StringFilter<"Client"> | string
    paymentCycle?: StringFilter<"Client"> | string
    paymentMethods?: StringNullableFilter<"Client"> | string | null
    minimumPayout?: FloatFilter<"Client"> | number
    payoutDay?: StringFilter<"Client"> | string
    clientStatus?: StringFilter<"Client"> | string
    acquisitionDate?: DateTimeFilter<"Client"> | Date | string
    accountManagerId?: StringNullableFilter<"Client"> | string | null
    clientPriority?: StringFilter<"Client"> | string
    relationshipType?: StringFilter<"Client"> | string
    createdAt?: DateTimeFilter<"Client"> | Date | string
    updatedAt?: DateTimeFilter<"Client"> | Date | string
  }

  export type StoreCreateWithoutClientInput = {
    id?: string
    storeName: string
    storeCode: string
    storeType: string
    brandFranchise?: string | null
    completeAddress: string
    city: string
    state: string
    country?: string
    pinCode: string
    landmark?: string | null
    gpsLatitude?: number | null
    gpsLongitude?: number | null
    zoneRegion?: string | null
    storeManagerName?: string | null
    contactNumber?: string | null
    emailAddress?: string | null
    whatsappNumber?: string | null
    storeStatus?: string
    currentOfferRate?: number
    offerStartDate?: Date | string | null
    offerEndDate?: Date | string | null
    offerType?: string
    offerReason?: string | null
    isOfferActive?: boolean
    busyLevel?: string
    averageOrdersPerDay?: number
    peakHours?: string | null
    busyDays?: string | null
    orderDifficultyLevel?: string
    averageDeliveryDistance?: number
    monthlyOrderVolume?: number
    riderRating?: number
    averagePickupTime?: number
    storePriority?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    riderEarnings?: RiderEarningCreateNestedManyWithoutStoreInput
  }

  export type StoreUncheckedCreateWithoutClientInput = {
    id?: string
    storeName: string
    storeCode: string
    storeType: string
    brandFranchise?: string | null
    completeAddress: string
    city: string
    state: string
    country?: string
    pinCode: string
    landmark?: string | null
    gpsLatitude?: number | null
    gpsLongitude?: number | null
    zoneRegion?: string | null
    storeManagerName?: string | null
    contactNumber?: string | null
    emailAddress?: string | null
    whatsappNumber?: string | null
    storeStatus?: string
    currentOfferRate?: number
    offerStartDate?: Date | string | null
    offerEndDate?: Date | string | null
    offerType?: string
    offerReason?: string | null
    isOfferActive?: boolean
    busyLevel?: string
    averageOrdersPerDay?: number
    peakHours?: string | null
    busyDays?: string | null
    orderDifficultyLevel?: string
    averageDeliveryDistance?: number
    monthlyOrderVolume?: number
    riderRating?: number
    averagePickupTime?: number
    storePriority?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    riderEarnings?: RiderEarningUncheckedCreateNestedManyWithoutStoreInput
  }

  export type StoreCreateOrConnectWithoutClientInput = {
    where: StoreWhereUniqueInput
    create: XOR<StoreCreateWithoutClientInput, StoreUncheckedCreateWithoutClientInput>
  }

  export type StoreCreateManyClientInputEnvelope = {
    data: StoreCreateManyClientInput | StoreCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutClientsManagedInput = {
    id?: string
    email: string
    firstName: string
    lastName: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUncheckedCreateWithoutClientsManagedInput = {
    id?: string
    email: string
    firstName: string
    lastName: string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCreateOrConnectWithoutClientsManagedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutClientsManagedInput, UserUncheckedCreateWithoutClientsManagedInput>
  }

  export type RiderEarningCreateWithoutClientInput = {
    id?: string
    riderId: string
    orderId?: string | null
    baseRate: number
    storeOfferRate?: number
    totalRate: number
    bulkOrderBonus?: number
    performanceBonus?: number
    weeklyTargetBonus?: number
    specialEventBonus?: number
    finalEarning: number
    orderDate?: Date | string
    deliveryTime?: number | null
    riderRating?: number | null
    distance?: number | null
    bonusesApplied?: string | null
    rateCalculationLog?: string | null
    paymentStatus?: string
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    paymentReference?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    store: StoreCreateNestedOneWithoutRiderEarningsInput
  }

  export type RiderEarningUncheckedCreateWithoutClientInput = {
    id?: string
    riderId: string
    storeId: string
    orderId?: string | null
    baseRate: number
    storeOfferRate?: number
    totalRate: number
    bulkOrderBonus?: number
    performanceBonus?: number
    weeklyTargetBonus?: number
    specialEventBonus?: number
    finalEarning: number
    orderDate?: Date | string
    deliveryTime?: number | null
    riderRating?: number | null
    distance?: number | null
    bonusesApplied?: string | null
    rateCalculationLog?: string | null
    paymentStatus?: string
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    paymentReference?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiderEarningCreateOrConnectWithoutClientInput = {
    where: RiderEarningWhereUniqueInput
    create: XOR<RiderEarningCreateWithoutClientInput, RiderEarningUncheckedCreateWithoutClientInput>
  }

  export type RiderEarningCreateManyClientInputEnvelope = {
    data: RiderEarningCreateManyClientInput | RiderEarningCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type StoreUpsertWithWhereUniqueWithoutClientInput = {
    where: StoreWhereUniqueInput
    update: XOR<StoreUpdateWithoutClientInput, StoreUncheckedUpdateWithoutClientInput>
    create: XOR<StoreCreateWithoutClientInput, StoreUncheckedCreateWithoutClientInput>
  }

  export type StoreUpdateWithWhereUniqueWithoutClientInput = {
    where: StoreWhereUniqueInput
    data: XOR<StoreUpdateWithoutClientInput, StoreUncheckedUpdateWithoutClientInput>
  }

  export type StoreUpdateManyWithWhereWithoutClientInput = {
    where: StoreScalarWhereInput
    data: XOR<StoreUpdateManyMutationInput, StoreUncheckedUpdateManyWithoutClientInput>
  }

  export type StoreScalarWhereInput = {
    AND?: StoreScalarWhereInput | StoreScalarWhereInput[]
    OR?: StoreScalarWhereInput[]
    NOT?: StoreScalarWhereInput | StoreScalarWhereInput[]
    id?: StringFilter<"Store"> | string
    clientId?: StringFilter<"Store"> | string
    storeName?: StringFilter<"Store"> | string
    storeCode?: StringFilter<"Store"> | string
    storeType?: StringFilter<"Store"> | string
    brandFranchise?: StringNullableFilter<"Store"> | string | null
    completeAddress?: StringFilter<"Store"> | string
    city?: StringFilter<"Store"> | string
    state?: StringFilter<"Store"> | string
    country?: StringFilter<"Store"> | string
    pinCode?: StringFilter<"Store"> | string
    landmark?: StringNullableFilter<"Store"> | string | null
    gpsLatitude?: FloatNullableFilter<"Store"> | number | null
    gpsLongitude?: FloatNullableFilter<"Store"> | number | null
    zoneRegion?: StringNullableFilter<"Store"> | string | null
    storeManagerName?: StringNullableFilter<"Store"> | string | null
    contactNumber?: StringNullableFilter<"Store"> | string | null
    emailAddress?: StringNullableFilter<"Store"> | string | null
    whatsappNumber?: StringNullableFilter<"Store"> | string | null
    storeStatus?: StringFilter<"Store"> | string
    currentOfferRate?: FloatFilter<"Store"> | number
    offerStartDate?: DateTimeNullableFilter<"Store"> | Date | string | null
    offerEndDate?: DateTimeNullableFilter<"Store"> | Date | string | null
    offerType?: StringFilter<"Store"> | string
    offerReason?: StringNullableFilter<"Store"> | string | null
    isOfferActive?: BoolFilter<"Store"> | boolean
    busyLevel?: StringFilter<"Store"> | string
    averageOrdersPerDay?: IntFilter<"Store"> | number
    peakHours?: StringNullableFilter<"Store"> | string | null
    busyDays?: StringNullableFilter<"Store"> | string | null
    orderDifficultyLevel?: StringFilter<"Store"> | string
    averageDeliveryDistance?: FloatFilter<"Store"> | number
    monthlyOrderVolume?: IntFilter<"Store"> | number
    riderRating?: FloatFilter<"Store"> | number
    averagePickupTime?: IntFilter<"Store"> | number
    storePriority?: StringFilter<"Store"> | string
    createdAt?: DateTimeFilter<"Store"> | Date | string
    updatedAt?: DateTimeFilter<"Store"> | Date | string
  }

  export type UserUpsertWithoutClientsManagedInput = {
    update: XOR<UserUpdateWithoutClientsManagedInput, UserUncheckedUpdateWithoutClientsManagedInput>
    create: XOR<UserCreateWithoutClientsManagedInput, UserUncheckedCreateWithoutClientsManagedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutClientsManagedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutClientsManagedInput, UserUncheckedUpdateWithoutClientsManagedInput>
  }

  export type UserUpdateWithoutClientsManagedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateWithoutClientsManagedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderEarningUpsertWithWhereUniqueWithoutClientInput = {
    where: RiderEarningWhereUniqueInput
    update: XOR<RiderEarningUpdateWithoutClientInput, RiderEarningUncheckedUpdateWithoutClientInput>
    create: XOR<RiderEarningCreateWithoutClientInput, RiderEarningUncheckedCreateWithoutClientInput>
  }

  export type RiderEarningUpdateWithWhereUniqueWithoutClientInput = {
    where: RiderEarningWhereUniqueInput
    data: XOR<RiderEarningUpdateWithoutClientInput, RiderEarningUncheckedUpdateWithoutClientInput>
  }

  export type RiderEarningUpdateManyWithWhereWithoutClientInput = {
    where: RiderEarningScalarWhereInput
    data: XOR<RiderEarningUpdateManyMutationInput, RiderEarningUncheckedUpdateManyWithoutClientInput>
  }

  export type RiderEarningScalarWhereInput = {
    AND?: RiderEarningScalarWhereInput | RiderEarningScalarWhereInput[]
    OR?: RiderEarningScalarWhereInput[]
    NOT?: RiderEarningScalarWhereInput | RiderEarningScalarWhereInput[]
    id?: StringFilter<"RiderEarning"> | string
    riderId?: StringFilter<"RiderEarning"> | string
    clientId?: StringFilter<"RiderEarning"> | string
    storeId?: StringFilter<"RiderEarning"> | string
    orderId?: StringNullableFilter<"RiderEarning"> | string | null
    baseRate?: FloatFilter<"RiderEarning"> | number
    storeOfferRate?: FloatFilter<"RiderEarning"> | number
    totalRate?: FloatFilter<"RiderEarning"> | number
    bulkOrderBonus?: FloatFilter<"RiderEarning"> | number
    performanceBonus?: FloatFilter<"RiderEarning"> | number
    weeklyTargetBonus?: FloatFilter<"RiderEarning"> | number
    specialEventBonus?: FloatFilter<"RiderEarning"> | number
    finalEarning?: FloatFilter<"RiderEarning"> | number
    orderDate?: DateTimeFilter<"RiderEarning"> | Date | string
    deliveryTime?: IntNullableFilter<"RiderEarning"> | number | null
    riderRating?: FloatNullableFilter<"RiderEarning"> | number | null
    distance?: FloatNullableFilter<"RiderEarning"> | number | null
    bonusesApplied?: StringNullableFilter<"RiderEarning"> | string | null
    rateCalculationLog?: StringNullableFilter<"RiderEarning"> | string | null
    paymentStatus?: StringFilter<"RiderEarning"> | string
    paymentDate?: DateTimeNullableFilter<"RiderEarning"> | Date | string | null
    paymentMethod?: StringNullableFilter<"RiderEarning"> | string | null
    paymentReference?: StringNullableFilter<"RiderEarning"> | string | null
    createdAt?: DateTimeFilter<"RiderEarning"> | Date | string
    updatedAt?: DateTimeFilter<"RiderEarning"> | Date | string
  }

  export type ClientCreateWithoutStoresInput = {
    id?: string
    name: string
    clientCode: string
    clientType: string
    industrySector?: string | null
    businessCategory?: string | null
    primaryContactPerson?: string | null
    designation?: string | null
    email?: string | null
    secondaryEmail?: string | null
    phone?: string | null
    secondaryPhone?: string | null
    city?: string | null
    state?: string | null
    pinCode?: string | null
    registrationNumber?: string | null
    panNumber?: string | null
    gstNumber?: string | null
    evPortfolio?: string | null
    fleetSize?: number | null
    hasChargingInfra?: boolean
    chargingInfraDetails?: string | null
    batteryTechPreference?: string | null
    serviceRequirements?: string | null
    paymentTerms?: string | null
    preferredPaymentMethod?: string | null
    taxCategory?: string | null
    discountCategory?: string | null
    baseOrderRate?: number
    rateEffectiveDate?: Date | string
    rateType?: string
    minimumRate?: number
    maximumRate?: number
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: number
    bulkBonusAmount?: number
    bulkResetPeriod?: string
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: number
    weeklyBonusAmount?: number
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: number
    performanceCriteria?: string
    paymentCycle?: string
    paymentMethods?: string | null
    minimumPayout?: number
    payoutDay?: string
    clientStatus?: string
    acquisitionDate?: Date | string
    clientPriority?: string
    relationshipType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    accountManager?: UserCreateNestedOneWithoutClientsManagedInput
    riderEarnings?: RiderEarningCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutStoresInput = {
    id?: string
    name: string
    clientCode: string
    clientType: string
    industrySector?: string | null
    businessCategory?: string | null
    primaryContactPerson?: string | null
    designation?: string | null
    email?: string | null
    secondaryEmail?: string | null
    phone?: string | null
    secondaryPhone?: string | null
    city?: string | null
    state?: string | null
    pinCode?: string | null
    registrationNumber?: string | null
    panNumber?: string | null
    gstNumber?: string | null
    evPortfolio?: string | null
    fleetSize?: number | null
    hasChargingInfra?: boolean
    chargingInfraDetails?: string | null
    batteryTechPreference?: string | null
    serviceRequirements?: string | null
    paymentTerms?: string | null
    preferredPaymentMethod?: string | null
    taxCategory?: string | null
    discountCategory?: string | null
    baseOrderRate?: number
    rateEffectiveDate?: Date | string
    rateType?: string
    minimumRate?: number
    maximumRate?: number
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: number
    bulkBonusAmount?: number
    bulkResetPeriod?: string
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: number
    weeklyBonusAmount?: number
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: number
    performanceCriteria?: string
    paymentCycle?: string
    paymentMethods?: string | null
    minimumPayout?: number
    payoutDay?: string
    clientStatus?: string
    acquisitionDate?: Date | string
    accountManagerId?: string | null
    clientPriority?: string
    relationshipType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    riderEarnings?: RiderEarningUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutStoresInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutStoresInput, ClientUncheckedCreateWithoutStoresInput>
  }

  export type RiderEarningCreateWithoutStoreInput = {
    id?: string
    riderId: string
    orderId?: string | null
    baseRate: number
    storeOfferRate?: number
    totalRate: number
    bulkOrderBonus?: number
    performanceBonus?: number
    weeklyTargetBonus?: number
    specialEventBonus?: number
    finalEarning: number
    orderDate?: Date | string
    deliveryTime?: number | null
    riderRating?: number | null
    distance?: number | null
    bonusesApplied?: string | null
    rateCalculationLog?: string | null
    paymentStatus?: string
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    paymentReference?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutRiderEarningsInput
  }

  export type RiderEarningUncheckedCreateWithoutStoreInput = {
    id?: string
    riderId: string
    clientId: string
    orderId?: string | null
    baseRate: number
    storeOfferRate?: number
    totalRate: number
    bulkOrderBonus?: number
    performanceBonus?: number
    weeklyTargetBonus?: number
    specialEventBonus?: number
    finalEarning: number
    orderDate?: Date | string
    deliveryTime?: number | null
    riderRating?: number | null
    distance?: number | null
    bonusesApplied?: string | null
    rateCalculationLog?: string | null
    paymentStatus?: string
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    paymentReference?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiderEarningCreateOrConnectWithoutStoreInput = {
    where: RiderEarningWhereUniqueInput
    create: XOR<RiderEarningCreateWithoutStoreInput, RiderEarningUncheckedCreateWithoutStoreInput>
  }

  export type RiderEarningCreateManyStoreInputEnvelope = {
    data: RiderEarningCreateManyStoreInput | RiderEarningCreateManyStoreInput[]
    skipDuplicates?: boolean
  }

  export type ClientUpsertWithoutStoresInput = {
    update: XOR<ClientUpdateWithoutStoresInput, ClientUncheckedUpdateWithoutStoresInput>
    create: XOR<ClientCreateWithoutStoresInput, ClientUncheckedCreateWithoutStoresInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutStoresInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutStoresInput, ClientUncheckedUpdateWithoutStoresInput>
  }

  export type ClientUpdateWithoutStoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    clientCode?: StringFieldUpdateOperationsInput | string
    clientType?: StringFieldUpdateOperationsInput | string
    industrySector?: NullableStringFieldUpdateOperationsInput | string | null
    businessCategory?: NullableStringFieldUpdateOperationsInput | string | null
    primaryContactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryPhone?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pinCode?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    panNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    evPortfolio?: NullableStringFieldUpdateOperationsInput | string | null
    fleetSize?: NullableIntFieldUpdateOperationsInput | number | null
    hasChargingInfra?: BoolFieldUpdateOperationsInput | boolean
    chargingInfraDetails?: NullableStringFieldUpdateOperationsInput | string | null
    batteryTechPreference?: NullableStringFieldUpdateOperationsInput | string | null
    serviceRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    preferredPaymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    taxCategory?: NullableStringFieldUpdateOperationsInput | string | null
    discountCategory?: NullableStringFieldUpdateOperationsInput | string | null
    baseOrderRate?: FloatFieldUpdateOperationsInput | number
    rateEffectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rateType?: StringFieldUpdateOperationsInput | string
    minimumRate?: FloatFieldUpdateOperationsInput | number
    maximumRate?: FloatFieldUpdateOperationsInput | number
    bulkBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    bulkOrdersThreshold?: IntFieldUpdateOperationsInput | number
    bulkBonusAmount?: FloatFieldUpdateOperationsInput | number
    bulkResetPeriod?: StringFieldUpdateOperationsInput | string
    weeklyBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    weeklyOrderTarget?: IntFieldUpdateOperationsInput | number
    weeklyBonusAmount?: FloatFieldUpdateOperationsInput | number
    performanceMultiplierEnabled?: BoolFieldUpdateOperationsInput | boolean
    topPerformerRate?: FloatFieldUpdateOperationsInput | number
    performanceCriteria?: StringFieldUpdateOperationsInput | string
    paymentCycle?: StringFieldUpdateOperationsInput | string
    paymentMethods?: NullableStringFieldUpdateOperationsInput | string | null
    minimumPayout?: FloatFieldUpdateOperationsInput | number
    payoutDay?: StringFieldUpdateOperationsInput | string
    clientStatus?: StringFieldUpdateOperationsInput | string
    acquisitionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientPriority?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accountManager?: UserUpdateOneWithoutClientsManagedNestedInput
    riderEarnings?: RiderEarningUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutStoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    clientCode?: StringFieldUpdateOperationsInput | string
    clientType?: StringFieldUpdateOperationsInput | string
    industrySector?: NullableStringFieldUpdateOperationsInput | string | null
    businessCategory?: NullableStringFieldUpdateOperationsInput | string | null
    primaryContactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryPhone?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pinCode?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    panNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    evPortfolio?: NullableStringFieldUpdateOperationsInput | string | null
    fleetSize?: NullableIntFieldUpdateOperationsInput | number | null
    hasChargingInfra?: BoolFieldUpdateOperationsInput | boolean
    chargingInfraDetails?: NullableStringFieldUpdateOperationsInput | string | null
    batteryTechPreference?: NullableStringFieldUpdateOperationsInput | string | null
    serviceRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    preferredPaymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    taxCategory?: NullableStringFieldUpdateOperationsInput | string | null
    discountCategory?: NullableStringFieldUpdateOperationsInput | string | null
    baseOrderRate?: FloatFieldUpdateOperationsInput | number
    rateEffectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rateType?: StringFieldUpdateOperationsInput | string
    minimumRate?: FloatFieldUpdateOperationsInput | number
    maximumRate?: FloatFieldUpdateOperationsInput | number
    bulkBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    bulkOrdersThreshold?: IntFieldUpdateOperationsInput | number
    bulkBonusAmount?: FloatFieldUpdateOperationsInput | number
    bulkResetPeriod?: StringFieldUpdateOperationsInput | string
    weeklyBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    weeklyOrderTarget?: IntFieldUpdateOperationsInput | number
    weeklyBonusAmount?: FloatFieldUpdateOperationsInput | number
    performanceMultiplierEnabled?: BoolFieldUpdateOperationsInput | boolean
    topPerformerRate?: FloatFieldUpdateOperationsInput | number
    performanceCriteria?: StringFieldUpdateOperationsInput | string
    paymentCycle?: StringFieldUpdateOperationsInput | string
    paymentMethods?: NullableStringFieldUpdateOperationsInput | string | null
    minimumPayout?: FloatFieldUpdateOperationsInput | number
    payoutDay?: StringFieldUpdateOperationsInput | string
    clientStatus?: StringFieldUpdateOperationsInput | string
    acquisitionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountManagerId?: NullableStringFieldUpdateOperationsInput | string | null
    clientPriority?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    riderEarnings?: RiderEarningUncheckedUpdateManyWithoutClientNestedInput
  }

  export type RiderEarningUpsertWithWhereUniqueWithoutStoreInput = {
    where: RiderEarningWhereUniqueInput
    update: XOR<RiderEarningUpdateWithoutStoreInput, RiderEarningUncheckedUpdateWithoutStoreInput>
    create: XOR<RiderEarningCreateWithoutStoreInput, RiderEarningUncheckedCreateWithoutStoreInput>
  }

  export type RiderEarningUpdateWithWhereUniqueWithoutStoreInput = {
    where: RiderEarningWhereUniqueInput
    data: XOR<RiderEarningUpdateWithoutStoreInput, RiderEarningUncheckedUpdateWithoutStoreInput>
  }

  export type RiderEarningUpdateManyWithWhereWithoutStoreInput = {
    where: RiderEarningScalarWhereInput
    data: XOR<RiderEarningUpdateManyMutationInput, RiderEarningUncheckedUpdateManyWithoutStoreInput>
  }

  export type ClientCreateWithoutRiderEarningsInput = {
    id?: string
    name: string
    clientCode: string
    clientType: string
    industrySector?: string | null
    businessCategory?: string | null
    primaryContactPerson?: string | null
    designation?: string | null
    email?: string | null
    secondaryEmail?: string | null
    phone?: string | null
    secondaryPhone?: string | null
    city?: string | null
    state?: string | null
    pinCode?: string | null
    registrationNumber?: string | null
    panNumber?: string | null
    gstNumber?: string | null
    evPortfolio?: string | null
    fleetSize?: number | null
    hasChargingInfra?: boolean
    chargingInfraDetails?: string | null
    batteryTechPreference?: string | null
    serviceRequirements?: string | null
    paymentTerms?: string | null
    preferredPaymentMethod?: string | null
    taxCategory?: string | null
    discountCategory?: string | null
    baseOrderRate?: number
    rateEffectiveDate?: Date | string
    rateType?: string
    minimumRate?: number
    maximumRate?: number
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: number
    bulkBonusAmount?: number
    bulkResetPeriod?: string
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: number
    weeklyBonusAmount?: number
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: number
    performanceCriteria?: string
    paymentCycle?: string
    paymentMethods?: string | null
    minimumPayout?: number
    payoutDay?: string
    clientStatus?: string
    acquisitionDate?: Date | string
    clientPriority?: string
    relationshipType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stores?: StoreCreateNestedManyWithoutClientInput
    accountManager?: UserCreateNestedOneWithoutClientsManagedInput
  }

  export type ClientUncheckedCreateWithoutRiderEarningsInput = {
    id?: string
    name: string
    clientCode: string
    clientType: string
    industrySector?: string | null
    businessCategory?: string | null
    primaryContactPerson?: string | null
    designation?: string | null
    email?: string | null
    secondaryEmail?: string | null
    phone?: string | null
    secondaryPhone?: string | null
    city?: string | null
    state?: string | null
    pinCode?: string | null
    registrationNumber?: string | null
    panNumber?: string | null
    gstNumber?: string | null
    evPortfolio?: string | null
    fleetSize?: number | null
    hasChargingInfra?: boolean
    chargingInfraDetails?: string | null
    batteryTechPreference?: string | null
    serviceRequirements?: string | null
    paymentTerms?: string | null
    preferredPaymentMethod?: string | null
    taxCategory?: string | null
    discountCategory?: string | null
    baseOrderRate?: number
    rateEffectiveDate?: Date | string
    rateType?: string
    minimumRate?: number
    maximumRate?: number
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: number
    bulkBonusAmount?: number
    bulkResetPeriod?: string
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: number
    weeklyBonusAmount?: number
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: number
    performanceCriteria?: string
    paymentCycle?: string
    paymentMethods?: string | null
    minimumPayout?: number
    payoutDay?: string
    clientStatus?: string
    acquisitionDate?: Date | string
    accountManagerId?: string | null
    clientPriority?: string
    relationshipType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stores?: StoreUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutRiderEarningsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutRiderEarningsInput, ClientUncheckedCreateWithoutRiderEarningsInput>
  }

  export type StoreCreateWithoutRiderEarningsInput = {
    id?: string
    storeName: string
    storeCode: string
    storeType: string
    brandFranchise?: string | null
    completeAddress: string
    city: string
    state: string
    country?: string
    pinCode: string
    landmark?: string | null
    gpsLatitude?: number | null
    gpsLongitude?: number | null
    zoneRegion?: string | null
    storeManagerName?: string | null
    contactNumber?: string | null
    emailAddress?: string | null
    whatsappNumber?: string | null
    storeStatus?: string
    currentOfferRate?: number
    offerStartDate?: Date | string | null
    offerEndDate?: Date | string | null
    offerType?: string
    offerReason?: string | null
    isOfferActive?: boolean
    busyLevel?: string
    averageOrdersPerDay?: number
    peakHours?: string | null
    busyDays?: string | null
    orderDifficultyLevel?: string
    averageDeliveryDistance?: number
    monthlyOrderVolume?: number
    riderRating?: number
    averagePickupTime?: number
    storePriority?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutStoresInput
  }

  export type StoreUncheckedCreateWithoutRiderEarningsInput = {
    id?: string
    clientId: string
    storeName: string
    storeCode: string
    storeType: string
    brandFranchise?: string | null
    completeAddress: string
    city: string
    state: string
    country?: string
    pinCode: string
    landmark?: string | null
    gpsLatitude?: number | null
    gpsLongitude?: number | null
    zoneRegion?: string | null
    storeManagerName?: string | null
    contactNumber?: string | null
    emailAddress?: string | null
    whatsappNumber?: string | null
    storeStatus?: string
    currentOfferRate?: number
    offerStartDate?: Date | string | null
    offerEndDate?: Date | string | null
    offerType?: string
    offerReason?: string | null
    isOfferActive?: boolean
    busyLevel?: string
    averageOrdersPerDay?: number
    peakHours?: string | null
    busyDays?: string | null
    orderDifficultyLevel?: string
    averageDeliveryDistance?: number
    monthlyOrderVolume?: number
    riderRating?: number
    averagePickupTime?: number
    storePriority?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StoreCreateOrConnectWithoutRiderEarningsInput = {
    where: StoreWhereUniqueInput
    create: XOR<StoreCreateWithoutRiderEarningsInput, StoreUncheckedCreateWithoutRiderEarningsInput>
  }

  export type ClientUpsertWithoutRiderEarningsInput = {
    update: XOR<ClientUpdateWithoutRiderEarningsInput, ClientUncheckedUpdateWithoutRiderEarningsInput>
    create: XOR<ClientCreateWithoutRiderEarningsInput, ClientUncheckedCreateWithoutRiderEarningsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutRiderEarningsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutRiderEarningsInput, ClientUncheckedUpdateWithoutRiderEarningsInput>
  }

  export type ClientUpdateWithoutRiderEarningsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    clientCode?: StringFieldUpdateOperationsInput | string
    clientType?: StringFieldUpdateOperationsInput | string
    industrySector?: NullableStringFieldUpdateOperationsInput | string | null
    businessCategory?: NullableStringFieldUpdateOperationsInput | string | null
    primaryContactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryPhone?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pinCode?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    panNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    evPortfolio?: NullableStringFieldUpdateOperationsInput | string | null
    fleetSize?: NullableIntFieldUpdateOperationsInput | number | null
    hasChargingInfra?: BoolFieldUpdateOperationsInput | boolean
    chargingInfraDetails?: NullableStringFieldUpdateOperationsInput | string | null
    batteryTechPreference?: NullableStringFieldUpdateOperationsInput | string | null
    serviceRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    preferredPaymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    taxCategory?: NullableStringFieldUpdateOperationsInput | string | null
    discountCategory?: NullableStringFieldUpdateOperationsInput | string | null
    baseOrderRate?: FloatFieldUpdateOperationsInput | number
    rateEffectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rateType?: StringFieldUpdateOperationsInput | string
    minimumRate?: FloatFieldUpdateOperationsInput | number
    maximumRate?: FloatFieldUpdateOperationsInput | number
    bulkBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    bulkOrdersThreshold?: IntFieldUpdateOperationsInput | number
    bulkBonusAmount?: FloatFieldUpdateOperationsInput | number
    bulkResetPeriod?: StringFieldUpdateOperationsInput | string
    weeklyBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    weeklyOrderTarget?: IntFieldUpdateOperationsInput | number
    weeklyBonusAmount?: FloatFieldUpdateOperationsInput | number
    performanceMultiplierEnabled?: BoolFieldUpdateOperationsInput | boolean
    topPerformerRate?: FloatFieldUpdateOperationsInput | number
    performanceCriteria?: StringFieldUpdateOperationsInput | string
    paymentCycle?: StringFieldUpdateOperationsInput | string
    paymentMethods?: NullableStringFieldUpdateOperationsInput | string | null
    minimumPayout?: FloatFieldUpdateOperationsInput | number
    payoutDay?: StringFieldUpdateOperationsInput | string
    clientStatus?: StringFieldUpdateOperationsInput | string
    acquisitionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientPriority?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stores?: StoreUpdateManyWithoutClientNestedInput
    accountManager?: UserUpdateOneWithoutClientsManagedNestedInput
  }

  export type ClientUncheckedUpdateWithoutRiderEarningsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    clientCode?: StringFieldUpdateOperationsInput | string
    clientType?: StringFieldUpdateOperationsInput | string
    industrySector?: NullableStringFieldUpdateOperationsInput | string | null
    businessCategory?: NullableStringFieldUpdateOperationsInput | string | null
    primaryContactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryPhone?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pinCode?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    panNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    evPortfolio?: NullableStringFieldUpdateOperationsInput | string | null
    fleetSize?: NullableIntFieldUpdateOperationsInput | number | null
    hasChargingInfra?: BoolFieldUpdateOperationsInput | boolean
    chargingInfraDetails?: NullableStringFieldUpdateOperationsInput | string | null
    batteryTechPreference?: NullableStringFieldUpdateOperationsInput | string | null
    serviceRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    preferredPaymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    taxCategory?: NullableStringFieldUpdateOperationsInput | string | null
    discountCategory?: NullableStringFieldUpdateOperationsInput | string | null
    baseOrderRate?: FloatFieldUpdateOperationsInput | number
    rateEffectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rateType?: StringFieldUpdateOperationsInput | string
    minimumRate?: FloatFieldUpdateOperationsInput | number
    maximumRate?: FloatFieldUpdateOperationsInput | number
    bulkBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    bulkOrdersThreshold?: IntFieldUpdateOperationsInput | number
    bulkBonusAmount?: FloatFieldUpdateOperationsInput | number
    bulkResetPeriod?: StringFieldUpdateOperationsInput | string
    weeklyBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    weeklyOrderTarget?: IntFieldUpdateOperationsInput | number
    weeklyBonusAmount?: FloatFieldUpdateOperationsInput | number
    performanceMultiplierEnabled?: BoolFieldUpdateOperationsInput | boolean
    topPerformerRate?: FloatFieldUpdateOperationsInput | number
    performanceCriteria?: StringFieldUpdateOperationsInput | string
    paymentCycle?: StringFieldUpdateOperationsInput | string
    paymentMethods?: NullableStringFieldUpdateOperationsInput | string | null
    minimumPayout?: FloatFieldUpdateOperationsInput | number
    payoutDay?: StringFieldUpdateOperationsInput | string
    clientStatus?: StringFieldUpdateOperationsInput | string
    acquisitionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountManagerId?: NullableStringFieldUpdateOperationsInput | string | null
    clientPriority?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stores?: StoreUncheckedUpdateManyWithoutClientNestedInput
  }

  export type StoreUpsertWithoutRiderEarningsInput = {
    update: XOR<StoreUpdateWithoutRiderEarningsInput, StoreUncheckedUpdateWithoutRiderEarningsInput>
    create: XOR<StoreCreateWithoutRiderEarningsInput, StoreUncheckedCreateWithoutRiderEarningsInput>
    where?: StoreWhereInput
  }

  export type StoreUpdateToOneWithWhereWithoutRiderEarningsInput = {
    where?: StoreWhereInput
    data: XOR<StoreUpdateWithoutRiderEarningsInput, StoreUncheckedUpdateWithoutRiderEarningsInput>
  }

  export type StoreUpdateWithoutRiderEarningsInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeName?: StringFieldUpdateOperationsInput | string
    storeCode?: StringFieldUpdateOperationsInput | string
    storeType?: StringFieldUpdateOperationsInput | string
    brandFranchise?: NullableStringFieldUpdateOperationsInput | string | null
    completeAddress?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pinCode?: StringFieldUpdateOperationsInput | string
    landmark?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    gpsLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    zoneRegion?: NullableStringFieldUpdateOperationsInput | string | null
    storeManagerName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    emailAddress?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappNumber?: NullableStringFieldUpdateOperationsInput | string | null
    storeStatus?: StringFieldUpdateOperationsInput | string
    currentOfferRate?: FloatFieldUpdateOperationsInput | number
    offerStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerType?: StringFieldUpdateOperationsInput | string
    offerReason?: NullableStringFieldUpdateOperationsInput | string | null
    isOfferActive?: BoolFieldUpdateOperationsInput | boolean
    busyLevel?: StringFieldUpdateOperationsInput | string
    averageOrdersPerDay?: IntFieldUpdateOperationsInput | number
    peakHours?: NullableStringFieldUpdateOperationsInput | string | null
    busyDays?: NullableStringFieldUpdateOperationsInput | string | null
    orderDifficultyLevel?: StringFieldUpdateOperationsInput | string
    averageDeliveryDistance?: FloatFieldUpdateOperationsInput | number
    monthlyOrderVolume?: IntFieldUpdateOperationsInput | number
    riderRating?: FloatFieldUpdateOperationsInput | number
    averagePickupTime?: IntFieldUpdateOperationsInput | number
    storePriority?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutStoresNestedInput
  }

  export type StoreUncheckedUpdateWithoutRiderEarningsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    storeName?: StringFieldUpdateOperationsInput | string
    storeCode?: StringFieldUpdateOperationsInput | string
    storeType?: StringFieldUpdateOperationsInput | string
    brandFranchise?: NullableStringFieldUpdateOperationsInput | string | null
    completeAddress?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pinCode?: StringFieldUpdateOperationsInput | string
    landmark?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    gpsLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    zoneRegion?: NullableStringFieldUpdateOperationsInput | string | null
    storeManagerName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    emailAddress?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappNumber?: NullableStringFieldUpdateOperationsInput | string | null
    storeStatus?: StringFieldUpdateOperationsInput | string
    currentOfferRate?: FloatFieldUpdateOperationsInput | number
    offerStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerType?: StringFieldUpdateOperationsInput | string
    offerReason?: NullableStringFieldUpdateOperationsInput | string | null
    isOfferActive?: BoolFieldUpdateOperationsInput | boolean
    busyLevel?: StringFieldUpdateOperationsInput | string
    averageOrdersPerDay?: IntFieldUpdateOperationsInput | number
    peakHours?: NullableStringFieldUpdateOperationsInput | string | null
    busyDays?: NullableStringFieldUpdateOperationsInput | string | null
    orderDifficultyLevel?: StringFieldUpdateOperationsInput | string
    averageDeliveryDistance?: FloatFieldUpdateOperationsInput | number
    monthlyOrderVolume?: IntFieldUpdateOperationsInput | number
    riderRating?: FloatFieldUpdateOperationsInput | number
    averagePickupTime?: IntFieldUpdateOperationsInput | number
    storePriority?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCreateManyAccountManagerInput = {
    id?: string
    name: string
    clientCode: string
    clientType: string
    industrySector?: string | null
    businessCategory?: string | null
    primaryContactPerson?: string | null
    designation?: string | null
    email?: string | null
    secondaryEmail?: string | null
    phone?: string | null
    secondaryPhone?: string | null
    city?: string | null
    state?: string | null
    pinCode?: string | null
    registrationNumber?: string | null
    panNumber?: string | null
    gstNumber?: string | null
    evPortfolio?: string | null
    fleetSize?: number | null
    hasChargingInfra?: boolean
    chargingInfraDetails?: string | null
    batteryTechPreference?: string | null
    serviceRequirements?: string | null
    paymentTerms?: string | null
    preferredPaymentMethod?: string | null
    taxCategory?: string | null
    discountCategory?: string | null
    baseOrderRate?: number
    rateEffectiveDate?: Date | string
    rateType?: string
    minimumRate?: number
    maximumRate?: number
    bulkBonusEnabled?: boolean
    bulkOrdersThreshold?: number
    bulkBonusAmount?: number
    bulkResetPeriod?: string
    weeklyBonusEnabled?: boolean
    weeklyOrderTarget?: number
    weeklyBonusAmount?: number
    performanceMultiplierEnabled?: boolean
    topPerformerRate?: number
    performanceCriteria?: string
    paymentCycle?: string
    paymentMethods?: string | null
    minimumPayout?: number
    payoutDay?: string
    clientStatus?: string
    acquisitionDate?: Date | string
    clientPriority?: string
    relationshipType?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ClientUpdateWithoutAccountManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    clientCode?: StringFieldUpdateOperationsInput | string
    clientType?: StringFieldUpdateOperationsInput | string
    industrySector?: NullableStringFieldUpdateOperationsInput | string | null
    businessCategory?: NullableStringFieldUpdateOperationsInput | string | null
    primaryContactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryPhone?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pinCode?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    panNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    evPortfolio?: NullableStringFieldUpdateOperationsInput | string | null
    fleetSize?: NullableIntFieldUpdateOperationsInput | number | null
    hasChargingInfra?: BoolFieldUpdateOperationsInput | boolean
    chargingInfraDetails?: NullableStringFieldUpdateOperationsInput | string | null
    batteryTechPreference?: NullableStringFieldUpdateOperationsInput | string | null
    serviceRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    preferredPaymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    taxCategory?: NullableStringFieldUpdateOperationsInput | string | null
    discountCategory?: NullableStringFieldUpdateOperationsInput | string | null
    baseOrderRate?: FloatFieldUpdateOperationsInput | number
    rateEffectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rateType?: StringFieldUpdateOperationsInput | string
    minimumRate?: FloatFieldUpdateOperationsInput | number
    maximumRate?: FloatFieldUpdateOperationsInput | number
    bulkBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    bulkOrdersThreshold?: IntFieldUpdateOperationsInput | number
    bulkBonusAmount?: FloatFieldUpdateOperationsInput | number
    bulkResetPeriod?: StringFieldUpdateOperationsInput | string
    weeklyBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    weeklyOrderTarget?: IntFieldUpdateOperationsInput | number
    weeklyBonusAmount?: FloatFieldUpdateOperationsInput | number
    performanceMultiplierEnabled?: BoolFieldUpdateOperationsInput | boolean
    topPerformerRate?: FloatFieldUpdateOperationsInput | number
    performanceCriteria?: StringFieldUpdateOperationsInput | string
    paymentCycle?: StringFieldUpdateOperationsInput | string
    paymentMethods?: NullableStringFieldUpdateOperationsInput | string | null
    minimumPayout?: FloatFieldUpdateOperationsInput | number
    payoutDay?: StringFieldUpdateOperationsInput | string
    clientStatus?: StringFieldUpdateOperationsInput | string
    acquisitionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientPriority?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stores?: StoreUpdateManyWithoutClientNestedInput
    riderEarnings?: RiderEarningUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutAccountManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    clientCode?: StringFieldUpdateOperationsInput | string
    clientType?: StringFieldUpdateOperationsInput | string
    industrySector?: NullableStringFieldUpdateOperationsInput | string | null
    businessCategory?: NullableStringFieldUpdateOperationsInput | string | null
    primaryContactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryPhone?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pinCode?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    panNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    evPortfolio?: NullableStringFieldUpdateOperationsInput | string | null
    fleetSize?: NullableIntFieldUpdateOperationsInput | number | null
    hasChargingInfra?: BoolFieldUpdateOperationsInput | boolean
    chargingInfraDetails?: NullableStringFieldUpdateOperationsInput | string | null
    batteryTechPreference?: NullableStringFieldUpdateOperationsInput | string | null
    serviceRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    preferredPaymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    taxCategory?: NullableStringFieldUpdateOperationsInput | string | null
    discountCategory?: NullableStringFieldUpdateOperationsInput | string | null
    baseOrderRate?: FloatFieldUpdateOperationsInput | number
    rateEffectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rateType?: StringFieldUpdateOperationsInput | string
    minimumRate?: FloatFieldUpdateOperationsInput | number
    maximumRate?: FloatFieldUpdateOperationsInput | number
    bulkBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    bulkOrdersThreshold?: IntFieldUpdateOperationsInput | number
    bulkBonusAmount?: FloatFieldUpdateOperationsInput | number
    bulkResetPeriod?: StringFieldUpdateOperationsInput | string
    weeklyBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    weeklyOrderTarget?: IntFieldUpdateOperationsInput | number
    weeklyBonusAmount?: FloatFieldUpdateOperationsInput | number
    performanceMultiplierEnabled?: BoolFieldUpdateOperationsInput | boolean
    topPerformerRate?: FloatFieldUpdateOperationsInput | number
    performanceCriteria?: StringFieldUpdateOperationsInput | string
    paymentCycle?: StringFieldUpdateOperationsInput | string
    paymentMethods?: NullableStringFieldUpdateOperationsInput | string | null
    minimumPayout?: FloatFieldUpdateOperationsInput | number
    payoutDay?: StringFieldUpdateOperationsInput | string
    clientStatus?: StringFieldUpdateOperationsInput | string
    acquisitionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientPriority?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stores?: StoreUncheckedUpdateManyWithoutClientNestedInput
    riderEarnings?: RiderEarningUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateManyWithoutAccountManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    clientCode?: StringFieldUpdateOperationsInput | string
    clientType?: StringFieldUpdateOperationsInput | string
    industrySector?: NullableStringFieldUpdateOperationsInput | string | null
    businessCategory?: NullableStringFieldUpdateOperationsInput | string | null
    primaryContactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryPhone?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pinCode?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    panNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    evPortfolio?: NullableStringFieldUpdateOperationsInput | string | null
    fleetSize?: NullableIntFieldUpdateOperationsInput | number | null
    hasChargingInfra?: BoolFieldUpdateOperationsInput | boolean
    chargingInfraDetails?: NullableStringFieldUpdateOperationsInput | string | null
    batteryTechPreference?: NullableStringFieldUpdateOperationsInput | string | null
    serviceRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    preferredPaymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    taxCategory?: NullableStringFieldUpdateOperationsInput | string | null
    discountCategory?: NullableStringFieldUpdateOperationsInput | string | null
    baseOrderRate?: FloatFieldUpdateOperationsInput | number
    rateEffectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rateType?: StringFieldUpdateOperationsInput | string
    minimumRate?: FloatFieldUpdateOperationsInput | number
    maximumRate?: FloatFieldUpdateOperationsInput | number
    bulkBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    bulkOrdersThreshold?: IntFieldUpdateOperationsInput | number
    bulkBonusAmount?: FloatFieldUpdateOperationsInput | number
    bulkResetPeriod?: StringFieldUpdateOperationsInput | string
    weeklyBonusEnabled?: BoolFieldUpdateOperationsInput | boolean
    weeklyOrderTarget?: IntFieldUpdateOperationsInput | number
    weeklyBonusAmount?: FloatFieldUpdateOperationsInput | number
    performanceMultiplierEnabled?: BoolFieldUpdateOperationsInput | boolean
    topPerformerRate?: FloatFieldUpdateOperationsInput | number
    performanceCriteria?: StringFieldUpdateOperationsInput | string
    paymentCycle?: StringFieldUpdateOperationsInput | string
    paymentMethods?: NullableStringFieldUpdateOperationsInput | string | null
    minimumPayout?: FloatFieldUpdateOperationsInput | number
    payoutDay?: StringFieldUpdateOperationsInput | string
    clientStatus?: StringFieldUpdateOperationsInput | string
    acquisitionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientPriority?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreCreateManyClientInput = {
    id?: string
    storeName: string
    storeCode: string
    storeType: string
    brandFranchise?: string | null
    completeAddress: string
    city: string
    state: string
    country?: string
    pinCode: string
    landmark?: string | null
    gpsLatitude?: number | null
    gpsLongitude?: number | null
    zoneRegion?: string | null
    storeManagerName?: string | null
    contactNumber?: string | null
    emailAddress?: string | null
    whatsappNumber?: string | null
    storeStatus?: string
    currentOfferRate?: number
    offerStartDate?: Date | string | null
    offerEndDate?: Date | string | null
    offerType?: string
    offerReason?: string | null
    isOfferActive?: boolean
    busyLevel?: string
    averageOrdersPerDay?: number
    peakHours?: string | null
    busyDays?: string | null
    orderDifficultyLevel?: string
    averageDeliveryDistance?: number
    monthlyOrderVolume?: number
    riderRating?: number
    averagePickupTime?: number
    storePriority?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiderEarningCreateManyClientInput = {
    id?: string
    riderId: string
    storeId: string
    orderId?: string | null
    baseRate: number
    storeOfferRate?: number
    totalRate: number
    bulkOrderBonus?: number
    performanceBonus?: number
    weeklyTargetBonus?: number
    specialEventBonus?: number
    finalEarning: number
    orderDate?: Date | string
    deliveryTime?: number | null
    riderRating?: number | null
    distance?: number | null
    bonusesApplied?: string | null
    rateCalculationLog?: string | null
    paymentStatus?: string
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    paymentReference?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StoreUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeName?: StringFieldUpdateOperationsInput | string
    storeCode?: StringFieldUpdateOperationsInput | string
    storeType?: StringFieldUpdateOperationsInput | string
    brandFranchise?: NullableStringFieldUpdateOperationsInput | string | null
    completeAddress?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pinCode?: StringFieldUpdateOperationsInput | string
    landmark?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    gpsLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    zoneRegion?: NullableStringFieldUpdateOperationsInput | string | null
    storeManagerName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    emailAddress?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappNumber?: NullableStringFieldUpdateOperationsInput | string | null
    storeStatus?: StringFieldUpdateOperationsInput | string
    currentOfferRate?: FloatFieldUpdateOperationsInput | number
    offerStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerType?: StringFieldUpdateOperationsInput | string
    offerReason?: NullableStringFieldUpdateOperationsInput | string | null
    isOfferActive?: BoolFieldUpdateOperationsInput | boolean
    busyLevel?: StringFieldUpdateOperationsInput | string
    averageOrdersPerDay?: IntFieldUpdateOperationsInput | number
    peakHours?: NullableStringFieldUpdateOperationsInput | string | null
    busyDays?: NullableStringFieldUpdateOperationsInput | string | null
    orderDifficultyLevel?: StringFieldUpdateOperationsInput | string
    averageDeliveryDistance?: FloatFieldUpdateOperationsInput | number
    monthlyOrderVolume?: IntFieldUpdateOperationsInput | number
    riderRating?: FloatFieldUpdateOperationsInput | number
    averagePickupTime?: IntFieldUpdateOperationsInput | number
    storePriority?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    riderEarnings?: RiderEarningUpdateManyWithoutStoreNestedInput
  }

  export type StoreUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeName?: StringFieldUpdateOperationsInput | string
    storeCode?: StringFieldUpdateOperationsInput | string
    storeType?: StringFieldUpdateOperationsInput | string
    brandFranchise?: NullableStringFieldUpdateOperationsInput | string | null
    completeAddress?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pinCode?: StringFieldUpdateOperationsInput | string
    landmark?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    gpsLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    zoneRegion?: NullableStringFieldUpdateOperationsInput | string | null
    storeManagerName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    emailAddress?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappNumber?: NullableStringFieldUpdateOperationsInput | string | null
    storeStatus?: StringFieldUpdateOperationsInput | string
    currentOfferRate?: FloatFieldUpdateOperationsInput | number
    offerStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerType?: StringFieldUpdateOperationsInput | string
    offerReason?: NullableStringFieldUpdateOperationsInput | string | null
    isOfferActive?: BoolFieldUpdateOperationsInput | boolean
    busyLevel?: StringFieldUpdateOperationsInput | string
    averageOrdersPerDay?: IntFieldUpdateOperationsInput | number
    peakHours?: NullableStringFieldUpdateOperationsInput | string | null
    busyDays?: NullableStringFieldUpdateOperationsInput | string | null
    orderDifficultyLevel?: StringFieldUpdateOperationsInput | string
    averageDeliveryDistance?: FloatFieldUpdateOperationsInput | number
    monthlyOrderVolume?: IntFieldUpdateOperationsInput | number
    riderRating?: FloatFieldUpdateOperationsInput | number
    averagePickupTime?: IntFieldUpdateOperationsInput | number
    storePriority?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    riderEarnings?: RiderEarningUncheckedUpdateManyWithoutStoreNestedInput
  }

  export type StoreUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeName?: StringFieldUpdateOperationsInput | string
    storeCode?: StringFieldUpdateOperationsInput | string
    storeType?: StringFieldUpdateOperationsInput | string
    brandFranchise?: NullableStringFieldUpdateOperationsInput | string | null
    completeAddress?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    pinCode?: StringFieldUpdateOperationsInput | string
    landmark?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    gpsLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    zoneRegion?: NullableStringFieldUpdateOperationsInput | string | null
    storeManagerName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    emailAddress?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappNumber?: NullableStringFieldUpdateOperationsInput | string | null
    storeStatus?: StringFieldUpdateOperationsInput | string
    currentOfferRate?: FloatFieldUpdateOperationsInput | number
    offerStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offerType?: StringFieldUpdateOperationsInput | string
    offerReason?: NullableStringFieldUpdateOperationsInput | string | null
    isOfferActive?: BoolFieldUpdateOperationsInput | boolean
    busyLevel?: StringFieldUpdateOperationsInput | string
    averageOrdersPerDay?: IntFieldUpdateOperationsInput | number
    peakHours?: NullableStringFieldUpdateOperationsInput | string | null
    busyDays?: NullableStringFieldUpdateOperationsInput | string | null
    orderDifficultyLevel?: StringFieldUpdateOperationsInput | string
    averageDeliveryDistance?: FloatFieldUpdateOperationsInput | number
    monthlyOrderVolume?: IntFieldUpdateOperationsInput | number
    riderRating?: FloatFieldUpdateOperationsInput | number
    averagePickupTime?: IntFieldUpdateOperationsInput | number
    storePriority?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderEarningUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    baseRate?: FloatFieldUpdateOperationsInput | number
    storeOfferRate?: FloatFieldUpdateOperationsInput | number
    totalRate?: FloatFieldUpdateOperationsInput | number
    bulkOrderBonus?: FloatFieldUpdateOperationsInput | number
    performanceBonus?: FloatFieldUpdateOperationsInput | number
    weeklyTargetBonus?: FloatFieldUpdateOperationsInput | number
    specialEventBonus?: FloatFieldUpdateOperationsInput | number
    finalEarning?: FloatFieldUpdateOperationsInput | number
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryTime?: NullableIntFieldUpdateOperationsInput | number | null
    riderRating?: NullableFloatFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    bonusesApplied?: NullableStringFieldUpdateOperationsInput | string | null
    rateCalculationLog?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    store?: StoreUpdateOneRequiredWithoutRiderEarningsNestedInput
  }

  export type RiderEarningUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    baseRate?: FloatFieldUpdateOperationsInput | number
    storeOfferRate?: FloatFieldUpdateOperationsInput | number
    totalRate?: FloatFieldUpdateOperationsInput | number
    bulkOrderBonus?: FloatFieldUpdateOperationsInput | number
    performanceBonus?: FloatFieldUpdateOperationsInput | number
    weeklyTargetBonus?: FloatFieldUpdateOperationsInput | number
    specialEventBonus?: FloatFieldUpdateOperationsInput | number
    finalEarning?: FloatFieldUpdateOperationsInput | number
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryTime?: NullableIntFieldUpdateOperationsInput | number | null
    riderRating?: NullableFloatFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    bonusesApplied?: NullableStringFieldUpdateOperationsInput | string | null
    rateCalculationLog?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderEarningUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    baseRate?: FloatFieldUpdateOperationsInput | number
    storeOfferRate?: FloatFieldUpdateOperationsInput | number
    totalRate?: FloatFieldUpdateOperationsInput | number
    bulkOrderBonus?: FloatFieldUpdateOperationsInput | number
    performanceBonus?: FloatFieldUpdateOperationsInput | number
    weeklyTargetBonus?: FloatFieldUpdateOperationsInput | number
    specialEventBonus?: FloatFieldUpdateOperationsInput | number
    finalEarning?: FloatFieldUpdateOperationsInput | number
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryTime?: NullableIntFieldUpdateOperationsInput | number | null
    riderRating?: NullableFloatFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    bonusesApplied?: NullableStringFieldUpdateOperationsInput | string | null
    rateCalculationLog?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderEarningCreateManyStoreInput = {
    id?: string
    riderId: string
    clientId: string
    orderId?: string | null
    baseRate: number
    storeOfferRate?: number
    totalRate: number
    bulkOrderBonus?: number
    performanceBonus?: number
    weeklyTargetBonus?: number
    specialEventBonus?: number
    finalEarning: number
    orderDate?: Date | string
    deliveryTime?: number | null
    riderRating?: number | null
    distance?: number | null
    bonusesApplied?: string | null
    rateCalculationLog?: string | null
    paymentStatus?: string
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    paymentReference?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiderEarningUpdateWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    baseRate?: FloatFieldUpdateOperationsInput | number
    storeOfferRate?: FloatFieldUpdateOperationsInput | number
    totalRate?: FloatFieldUpdateOperationsInput | number
    bulkOrderBonus?: FloatFieldUpdateOperationsInput | number
    performanceBonus?: FloatFieldUpdateOperationsInput | number
    weeklyTargetBonus?: FloatFieldUpdateOperationsInput | number
    specialEventBonus?: FloatFieldUpdateOperationsInput | number
    finalEarning?: FloatFieldUpdateOperationsInput | number
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryTime?: NullableIntFieldUpdateOperationsInput | number | null
    riderRating?: NullableFloatFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    bonusesApplied?: NullableStringFieldUpdateOperationsInput | string | null
    rateCalculationLog?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutRiderEarningsNestedInput
  }

  export type RiderEarningUncheckedUpdateWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    baseRate?: FloatFieldUpdateOperationsInput | number
    storeOfferRate?: FloatFieldUpdateOperationsInput | number
    totalRate?: FloatFieldUpdateOperationsInput | number
    bulkOrderBonus?: FloatFieldUpdateOperationsInput | number
    performanceBonus?: FloatFieldUpdateOperationsInput | number
    weeklyTargetBonus?: FloatFieldUpdateOperationsInput | number
    specialEventBonus?: FloatFieldUpdateOperationsInput | number
    finalEarning?: FloatFieldUpdateOperationsInput | number
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryTime?: NullableIntFieldUpdateOperationsInput | number | null
    riderRating?: NullableFloatFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    bonusesApplied?: NullableStringFieldUpdateOperationsInput | string | null
    rateCalculationLog?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiderEarningUncheckedUpdateManyWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    riderId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    baseRate?: FloatFieldUpdateOperationsInput | number
    storeOfferRate?: FloatFieldUpdateOperationsInput | number
    totalRate?: FloatFieldUpdateOperationsInput | number
    bulkOrderBonus?: FloatFieldUpdateOperationsInput | number
    performanceBonus?: FloatFieldUpdateOperationsInput | number
    weeklyTargetBonus?: FloatFieldUpdateOperationsInput | number
    specialEventBonus?: FloatFieldUpdateOperationsInput | number
    finalEarning?: FloatFieldUpdateOperationsInput | number
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveryTime?: NullableIntFieldUpdateOperationsInput | number | null
    riderRating?: NullableFloatFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    bonusesApplied?: NullableStringFieldUpdateOperationsInput | string | null
    rateCalculationLog?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}